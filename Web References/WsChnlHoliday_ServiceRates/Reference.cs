//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RentalInRome.WsChnlHoliday_ServiceRates {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="service_ratesSoap", Namespace="http://holidaylettings.co.uk/webservices/")]
    public partial class service_rates : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ClearOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOne2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAll2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearOutOfDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public service_rates() {
            this.Url = global::RentalInRome.Properties.Settings.Default.RentalInRome_WsChnlHoliday_ServiceRates_service_rates;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ClearCompletedEventHandler ClearCompleted;
        
        /// <remarks/>
        public event SetCurrencyCompletedEventHandler SetCurrencyCompleted;
        
        /// <remarks/>
        public event SetOneCompletedEventHandler SetOneCompleted;
        
        /// <remarks/>
        public event SetOne2CompletedEventHandler SetOne2Completed;
        
        /// <remarks/>
        public event SetAllCompletedEventHandler SetAllCompleted;
        
        /// <remarks/>
        public event SetAll2CompletedEventHandler SetAll2Completed;
        
        /// <remarks/>
        public event ClearOutOfDateCompletedEventHandler ClearOutOfDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://holidaylettings.co.uk/webservices/Clear", RequestNamespace="http://holidaylettings.co.uk/webservices/", ResponseNamespace="http://holidaylettings.co.uk/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceResponse Clear(string key, string ownerId, string homeId, string groupSize) {
            object[] results = this.Invoke("Clear", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ClearAsync(string key, string ownerId, string homeId, string groupSize) {
            this.ClearAsync(key, ownerId, homeId, groupSize, null);
        }
        
        /// <remarks/>
        public void ClearAsync(string key, string ownerId, string homeId, string groupSize, object userState) {
            if ((this.ClearOperationCompleted == null)) {
                this.ClearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearOperationCompleted);
            }
            this.InvokeAsync("Clear", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize}, this.ClearOperationCompleted, userState);
        }
        
        private void OnClearOperationCompleted(object arg) {
            if ((this.ClearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCompleted(this, new ClearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://holidaylettings.co.uk/webservices/SetCurrency", RequestNamespace="http://holidaylettings.co.uk/webservices/", ResponseNamespace="http://holidaylettings.co.uk/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceResponse SetCurrency(string key, string ownerId, string homeId, string currencyCode) {
            object[] results = this.Invoke("SetCurrency", new object[] {
                        key,
                        ownerId,
                        homeId,
                        currencyCode});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetCurrencyAsync(string key, string ownerId, string homeId, string currencyCode) {
            this.SetCurrencyAsync(key, ownerId, homeId, currencyCode, null);
        }
        
        /// <remarks/>
        public void SetCurrencyAsync(string key, string ownerId, string homeId, string currencyCode, object userState) {
            if ((this.SetCurrencyOperationCompleted == null)) {
                this.SetCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCurrencyOperationCompleted);
            }
            this.InvokeAsync("SetCurrency", new object[] {
                        key,
                        ownerId,
                        homeId,
                        currencyCode}, this.SetCurrencyOperationCompleted, userState);
        }
        
        private void OnSetCurrencyOperationCompleted(object arg) {
            if ((this.SetCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCurrencyCompleted(this, new SetCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://holidaylettings.co.uk/webservices/SetOne", RequestNamespace="http://holidaylettings.co.uk/webservices/", ResponseNamespace="http://holidaylettings.co.uk/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceResponse SetOne(string key, string ownerId, string homeId, string groupSize, string startDate, string endDate, string tariffName, string weeklyRate, string minNights, string weekdayRate, string weekendRate) {
            object[] results = this.Invoke("SetOne", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize,
                        startDate,
                        endDate,
                        tariffName,
                        weeklyRate,
                        minNights,
                        weekdayRate,
                        weekendRate});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetOneAsync(string key, string ownerId, string homeId, string groupSize, string startDate, string endDate, string tariffName, string weeklyRate, string minNights, string weekdayRate, string weekendRate) {
            this.SetOneAsync(key, ownerId, homeId, groupSize, startDate, endDate, tariffName, weeklyRate, minNights, weekdayRate, weekendRate, null);
        }
        
        /// <remarks/>
        public void SetOneAsync(string key, string ownerId, string homeId, string groupSize, string startDate, string endDate, string tariffName, string weeklyRate, string minNights, string weekdayRate, string weekendRate, object userState) {
            if ((this.SetOneOperationCompleted == null)) {
                this.SetOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOneOperationCompleted);
            }
            this.InvokeAsync("SetOne", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize,
                        startDate,
                        endDate,
                        tariffName,
                        weeklyRate,
                        minNights,
                        weekdayRate,
                        weekendRate}, this.SetOneOperationCompleted, userState);
        }
        
        private void OnSetOneOperationCompleted(object arg) {
            if ((this.SetOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOneCompleted(this, new SetOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://holidaylettings.co.uk/webservices/SetOne2", RequestNamespace="http://holidaylettings.co.uk/webservices/", ResponseNamespace="http://holidaylettings.co.uk/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceResponse SetOne2(string key, string ownerId, string homeId, string groupSize, string startDate, string endDate, string tariffName, string weeklyRate, string minNights, string weekdayRate, string weekendRate, string changeoverDay) {
            object[] results = this.Invoke("SetOne2", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize,
                        startDate,
                        endDate,
                        tariffName,
                        weeklyRate,
                        minNights,
                        weekdayRate,
                        weekendRate,
                        changeoverDay});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetOne2Async(string key, string ownerId, string homeId, string groupSize, string startDate, string endDate, string tariffName, string weeklyRate, string minNights, string weekdayRate, string weekendRate, string changeoverDay) {
            this.SetOne2Async(key, ownerId, homeId, groupSize, startDate, endDate, tariffName, weeklyRate, minNights, weekdayRate, weekendRate, changeoverDay, null);
        }
        
        /// <remarks/>
        public void SetOne2Async(string key, string ownerId, string homeId, string groupSize, string startDate, string endDate, string tariffName, string weeklyRate, string minNights, string weekdayRate, string weekendRate, string changeoverDay, object userState) {
            if ((this.SetOne2OperationCompleted == null)) {
                this.SetOne2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOne2OperationCompleted);
            }
            this.InvokeAsync("SetOne2", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize,
                        startDate,
                        endDate,
                        tariffName,
                        weeklyRate,
                        minNights,
                        weekdayRate,
                        weekendRate,
                        changeoverDay}, this.SetOne2OperationCompleted, userState);
        }
        
        private void OnSetOne2OperationCompleted(object arg) {
            if ((this.SetOne2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOne2Completed(this, new SetOne2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://holidaylettings.co.uk/webservices/SetAll", RequestNamespace="http://holidaylettings.co.uk/webservices/", ResponseNamespace="http://holidaylettings.co.uk/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceResponse SetAll(string key, string ownerId, string homeId, string groupSize, string[] startDates, string[] endDates, string[] tariffNames, string[] weeklyRates, string[] minNights, string[] weekdayRates, string[] weekendRates) {
            object[] results = this.Invoke("SetAll", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize,
                        startDates,
                        endDates,
                        tariffNames,
                        weeklyRates,
                        minNights,
                        weekdayRates,
                        weekendRates});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetAllAsync(string key, string ownerId, string homeId, string groupSize, string[] startDates, string[] endDates, string[] tariffNames, string[] weeklyRates, string[] minNights, string[] weekdayRates, string[] weekendRates) {
            this.SetAllAsync(key, ownerId, homeId, groupSize, startDates, endDates, tariffNames, weeklyRates, minNights, weekdayRates, weekendRates, null);
        }
        
        /// <remarks/>
        public void SetAllAsync(string key, string ownerId, string homeId, string groupSize, string[] startDates, string[] endDates, string[] tariffNames, string[] weeklyRates, string[] minNights, string[] weekdayRates, string[] weekendRates, object userState) {
            if ((this.SetAllOperationCompleted == null)) {
                this.SetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAllOperationCompleted);
            }
            this.InvokeAsync("SetAll", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize,
                        startDates,
                        endDates,
                        tariffNames,
                        weeklyRates,
                        minNights,
                        weekdayRates,
                        weekendRates}, this.SetAllOperationCompleted, userState);
        }
        
        private void OnSetAllOperationCompleted(object arg) {
            if ((this.SetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAllCompleted(this, new SetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://holidaylettings.co.uk/webservices/SetAll2", RequestNamespace="http://holidaylettings.co.uk/webservices/", ResponseNamespace="http://holidaylettings.co.uk/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceResponse SetAll2(string key, string ownerId, string homeId, string groupSize, string[] startDates, string[] endDates, string[] tariffNames, string[] weeklyRates, string[] minNights, string[] weekdayRates, string[] weekendRates, string[] changeoverDays) {
            object[] results = this.Invoke("SetAll2", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize,
                        startDates,
                        endDates,
                        tariffNames,
                        weeklyRates,
                        minNights,
                        weekdayRates,
                        weekendRates,
                        changeoverDays});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetAll2Async(string key, string ownerId, string homeId, string groupSize, string[] startDates, string[] endDates, string[] tariffNames, string[] weeklyRates, string[] minNights, string[] weekdayRates, string[] weekendRates, string[] changeoverDays) {
            this.SetAll2Async(key, ownerId, homeId, groupSize, startDates, endDates, tariffNames, weeklyRates, minNights, weekdayRates, weekendRates, changeoverDays, null);
        }
        
        /// <remarks/>
        public void SetAll2Async(string key, string ownerId, string homeId, string groupSize, string[] startDates, string[] endDates, string[] tariffNames, string[] weeklyRates, string[] minNights, string[] weekdayRates, string[] weekendRates, string[] changeoverDays, object userState) {
            if ((this.SetAll2OperationCompleted == null)) {
                this.SetAll2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAll2OperationCompleted);
            }
            this.InvokeAsync("SetAll2", new object[] {
                        key,
                        ownerId,
                        homeId,
                        groupSize,
                        startDates,
                        endDates,
                        tariffNames,
                        weeklyRates,
                        minNights,
                        weekdayRates,
                        weekendRates,
                        changeoverDays}, this.SetAll2OperationCompleted, userState);
        }
        
        private void OnSetAll2OperationCompleted(object arg) {
            if ((this.SetAll2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAll2Completed(this, new SetAll2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://holidaylettings.co.uk/webservices/ClearOutOfDate", RequestNamespace="http://holidaylettings.co.uk/webservices/", ResponseNamespace="http://holidaylettings.co.uk/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceResponse ClearOutOfDate(string key, string ownerId, string homeId) {
            object[] results = this.Invoke("ClearOutOfDate", new object[] {
                        key,
                        ownerId,
                        homeId});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ClearOutOfDateAsync(string key, string ownerId, string homeId) {
            this.ClearOutOfDateAsync(key, ownerId, homeId, null);
        }
        
        /// <remarks/>
        public void ClearOutOfDateAsync(string key, string ownerId, string homeId, object userState) {
            if ((this.ClearOutOfDateOperationCompleted == null)) {
                this.ClearOutOfDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearOutOfDateOperationCompleted);
            }
            this.InvokeAsync("ClearOutOfDate", new object[] {
                        key,
                        ownerId,
                        homeId}, this.ClearOutOfDateOperationCompleted, userState);
        }
        
        private void OnClearOutOfDateOperationCompleted(object arg) {
            if ((this.ClearOutOfDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearOutOfDateCompleted(this, new ClearOutOfDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://holidaylettings.co.uk/webservices/")]
    public partial class WebServiceResponse {
        
        private bool successField;
        
        private int errorCodeField;
        
        private string[] messagesField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ClearCompletedEventHandler(object sender, ClearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void SetCurrencyCompletedEventHandler(object sender, SetCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void SetOneCompletedEventHandler(object sender, SetOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void SetOne2CompletedEventHandler(object sender, SetOne2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOne2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOne2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void SetAllCompletedEventHandler(object sender, SetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void SetAll2CompletedEventHandler(object sender, SetAll2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAll2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAll2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ClearOutOfDateCompletedEventHandler(object sender, ClearOutOfDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearOutOfDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearOutOfDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
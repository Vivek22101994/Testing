#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentalInRome.data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AppServerCommonDB")]
	public partial class magaAppServerCommonDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRntChnlHomeAwayManagerTBL(RntChnlHomeAwayManagerTBL instance);
    partial void UpdateRntChnlHomeAwayManagerTBL(RntChnlHomeAwayManagerTBL instance);
    partial void DeleteRntChnlHomeAwayManagerTBL(RntChnlHomeAwayManagerTBL instance);
    #endregion
		
		public magaAppServerCommonDataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ModAppServerCommonDBConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public magaAppServerCommonDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public magaAppServerCommonDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public magaAppServerCommonDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public magaAppServerCommonDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RntChnlHomeAwayManagerTBL> RntChnlHomeAwayManagerTBL
		{
			get
			{
				return this.GetTable<RntChnlHomeAwayManagerTBL>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RntChnlHomeAwayManagerTBL")]
	public partial class RntChnlHomeAwayManagerTBL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _assignedSystemId;
		
		private string _authorizationToken;
		
		private string _InquiryEndpointUrl;
		
		private int _isDemo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnassignedSystemIdChanging(string value);
    partial void OnassignedSystemIdChanged();
    partial void OnauthorizationTokenChanging(string value);
    partial void OnauthorizationTokenChanged();
    partial void OnInquiryEndpointUrlChanging(string value);
    partial void OnInquiryEndpointUrlChanged();
    partial void OnisDemoChanging(int value);
    partial void OnisDemoChanged();
    #endregion
		
		public RntChnlHomeAwayManagerTBL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assignedSystemId", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string assignedSystemId
		{
			get
			{
				return this._assignedSystemId;
			}
			set
			{
				if ((this._assignedSystemId != value))
				{
					this.OnassignedSystemIdChanging(value);
					this.SendPropertyChanging();
					this._assignedSystemId = value;
					this.SendPropertyChanged("assignedSystemId");
					this.OnassignedSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorizationToken", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string authorizationToken
		{
			get
			{
				return this._authorizationToken;
			}
			set
			{
				if ((this._authorizationToken != value))
				{
					this.OnauthorizationTokenChanging(value);
					this.SendPropertyChanging();
					this._authorizationToken = value;
					this.SendPropertyChanged("authorizationToken");
					this.OnauthorizationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InquiryEndpointUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InquiryEndpointUrl
		{
			get
			{
				return this._InquiryEndpointUrl;
			}
			set
			{
				if ((this._InquiryEndpointUrl != value))
				{
					this.OnInquiryEndpointUrlChanging(value);
					this.SendPropertyChanging();
					this._InquiryEndpointUrl = value;
					this.SendPropertyChanged("InquiryEndpointUrl");
					this.OnInquiryEndpointUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDemo", DbType="Int NOT NULL")]
		public int isDemo
		{
			get
			{
				return this._isDemo;
			}
			set
			{
				if ((this._isDemo != value))
				{
					this.OnisDemoChanging(value);
					this.SendPropertyChanging();
					this._isDemo = value;
					this.SendPropertyChanged("isDemo");
					this.OnisDemoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

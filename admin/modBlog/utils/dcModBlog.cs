#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using ModBlog;

namespace ModBlog	
{
	[NamingSettings(RemoveCamelCase = true, RemoveLeadingUnderscores = true, ResolveReservedWords = true, UseDelimitedSQL = true, WordBreak = "_")]
	public partial class DCmodBlog : OpenAccessContext, IDCmodBlogUnitOfWork
	{
		private static string connectionStringName = @"ModBlogDBConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = AttributesMetadataSource.FromContext(typeof(DCmodBlog));
		
		public DCmodBlog()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public DCmodBlog(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCmodBlog(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public DCmodBlog(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCmodBlog(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<dbBlogArticleLN> dbBlogArticleLNs 
		{
			get
			{
				return this.GetAll<dbBlogArticleLN>();
			}
		}
		
		public IQueryable<dbBlogArticleTagRL> dbBlogArticleTagRLs 
		{
			get
			{
				return this.GetAll<dbBlogArticleTagRL>();
			}
		}
		
		public IQueryable<dbBlogArticleTB> dbBlogArticleTBs 
		{
			get
			{
				return this.GetAll<dbBlogArticleTB>();
			}
		}
		
		public IQueryable<dbBlogCategoryLN> dbBlogCategoryLNs 
		{
			get
			{
				return this.GetAll<dbBlogCategoryLN>();
			}
		}
		
		public IQueryable<dbBlogCategoryTB> dbBlogCategoryTBs 
		{
			get
			{
				return this.GetAll<dbBlogCategoryTB>();
			}
		}
		
		public IQueryable<dbBlogCommentTBL> dbBlogCommentTBLs 
		{
			get
			{
				return this.GetAll<dbBlogCommentTBL>();
			}
		}
		
		public IQueryable<dbBlogTagLN> dbBlogTagLNs 
		{
			get
			{
				return this.GetAll<dbBlogTagLN>();
			}
		}
		
		public IQueryable<dbBlogTagTB> dbBlogTagTBs 
		{
			get
			{
				return this.GetAll<dbBlogTagTB>();
			}
		}
		
		public IQueryable<dbBlogCategoryVIEW> dbBlogCategoryVIEWs 
		{
			get
			{
				return this.GetAll<dbBlogCategoryVIEW>();
			}
		}
		
		public IQueryable<dbBlogTagVIEW> dbBlogTagVIEWs 
		{
			get
			{
				return this.GetAll<dbBlogTagVIEW>();
			}
		}
		
		public IQueryable<dbBlogArticleVIEW> dbBlogArticleVIEWs 
		{
			get
			{
				return this.GetAll<dbBlogArticleVIEW>();
			}
		}
		
		public IQueryable<dbBlogArticleCategoryRL> dbBlogArticleCategoryRLs 
		{
			get
			{
				return this.GetAll<dbBlogArticleCategoryRL>();
			}
		}
		
		public IQueryable<dbBlogArticleMediaTBL> dbBlogArticleMediaTBLs 
		{
			get
			{
				return this.GetAll<dbBlogArticleMediaTBL>();
			}
		}
		
		public IQueryable<dbBlogZoneLN> dbBlogZoneLNs 
		{
			get
			{
				return this.GetAll<dbBlogZoneLN>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "mssql";
			backend.ProviderName = "System.Data.SqlClient";
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of DCmodBlog.
		/// </summary>
		/// <param name="config">The BackendConfiguration of DCmodBlog.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IDCmodBlogUnitOfWork : IUnitOfWork
	{
		IQueryable<dbBlogArticleLN> dbBlogArticleLNs
		{
			get;
		}
		IQueryable<dbBlogArticleTagRL> dbBlogArticleTagRLs
		{
			get;
		}
		IQueryable<dbBlogArticleTB> dbBlogArticleTBs
		{
			get;
		}
		IQueryable<dbBlogCategoryLN> dbBlogCategoryLNs
		{
			get;
		}
		IQueryable<dbBlogCategoryTB> dbBlogCategoryTBs
		{
			get;
		}
		IQueryable<dbBlogCommentTBL> dbBlogCommentTBLs
		{
			get;
		}
		IQueryable<dbBlogTagLN> dbBlogTagLNs
		{
			get;
		}
		IQueryable<dbBlogTagTB> dbBlogTagTBs
		{
			get;
		}
		IQueryable<dbBlogCategoryVIEW> dbBlogCategoryVIEWs
		{
			get;
		}
		IQueryable<dbBlogTagVIEW> dbBlogTagVIEWs
		{
			get;
		}
		IQueryable<dbBlogArticleVIEW> dbBlogArticleVIEWs
		{
			get;
		}
		IQueryable<dbBlogArticleCategoryRL> dbBlogArticleCategoryRLs
		{
			get;
		}
		IQueryable<dbBlogArticleMediaTBL> dbBlogArticleMediaTBLs
		{
			get;
		}
		IQueryable<dbBlogZoneLN> dbBlogZoneLNs
		{
			get;
		}
	}
}
namespace ModBlog	
{
	[Table("BlogArticleLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogArticleLN
	{
		private long pidArticle1;
		[Column("pidArticle", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidArticle1")]
		public virtual long pidArticle
		{
			get
			{
				return this.pidArticle1;
			}
			set
			{
				this.pidArticle1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogArticleTagRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogArticleTagRL
	{
		private long pidArticle1;
		[Column("pidArticle", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidArticle1")]
		public virtual long pidArticle
		{
			get
			{
				return this.pidArticle1;
			}
			set
			{
				this.pidArticle1 = value;
			}
		}
		
		private long pidTag1;
		[Column("pidTag", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidTag1")]
		public virtual long pidTag
		{
			get
			{
				return this.pidTag1;
			}
			set
			{
				this.pidTag1 = value;
			}
		}
		
		private int? sequence1;
		[Column("sequence", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("sequence1")]
		public virtual int? sequence
		{
			get
			{
				return this.sequence1;
			}
			set
			{
				this.sequence1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogArticleTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbBlogArticleTB
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private long? pidParentArticle1;
		[Column("pidParentArticle", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidParentArticle1")]
		public virtual long? pidParentArticle
		{
			get
			{
				return this.pidParentArticle1;
			}
			set
			{
				this.pidParentArticle1 = value;
			}
		}
		
		private long? pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidCategory1")]
		public virtual long? pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private DateTime? publicDate1;
		[Column("publicDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("publicDate1")]
		public virtual DateTime? publicDate
		{
			get
			{
				return this.publicDate1;
			}
			set
			{
				this.publicDate1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private int? pidZone1;
		[Column("pidZone", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidZone1")]
		public virtual int? pidZone
		{
			get
			{
				return this.pidZone1;
			}
			set
			{
				this.pidZone1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogCategoryLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogCategoryLN
	{
		private long pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidCategory1")]
		public virtual long pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogCategoryTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbBlogCategoryTB
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private long? pidParentCategory1;
		[Column("pidParentCategory", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidParentCategory1")]
		public virtual long? pidParentCategory
		{
			get
			{
				return this.pidParentCategory1;
			}
			set
			{
				this.pidParentCategory1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogCommentTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbBlogCommentTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string typeTitle1;
		[Column("typeTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("typeTitle1")]
		public virtual string typeTitle
		{
			get
			{
				return this.typeTitle1;
			}
			set
			{
				this.typeTitle1 = value;
			}
		}
		
		private string typeCode1;
		[Column("typeCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("typeCode1")]
		public virtual string typeCode
		{
			get
			{
				return this.typeCode1;
			}
			set
			{
				this.typeCode1 = value;
			}
		}
		
		private int? pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int? pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private long? pidArticle1;
		[Column("pidArticle", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidArticle1")]
		public virtual long? pidArticle
		{
			get
			{
				return this.pidArticle1;
			}
			set
			{
				this.pidArticle1 = value;
			}
		}
		
		private string phoneMobile1;
		[Column("phoneMobile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("phoneMobile1")]
		public virtual string phoneMobile
		{
			get
			{
				return this.phoneMobile1;
			}
			set
			{
				this.phoneMobile1 = value;
			}
		}
		
		private string phone1;
		[Column("phone", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("phone1")]
		public virtual string phone
		{
			get
			{
				return this.phone1;
			}
			set
			{
				this.phone1 = value;
			}
		}
		
		private string nameLast1;
		[Column("nameLast", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameLast1")]
		public virtual string nameLast
		{
			get
			{
				return this.nameLast1;
			}
			set
			{
				this.nameLast1 = value;
			}
		}
		
		private string nameFull1;
		[Column("nameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameFull1")]
		public virtual string nameFull
		{
			get
			{
				return this.nameFull1;
			}
			set
			{
				this.nameFull1 = value;
			}
		}
		
		private string nameFirst1;
		[Column("nameFirst", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameFirst1")]
		public virtual string nameFirst
		{
			get
			{
				return this.nameFirst1;
			}
			set
			{
				this.nameFirst1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string fax1;
		[Column("fax", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("fax1")]
		public virtual string fax
		{
			get
			{
				return this.fax1;
			}
			set
			{
				this.fax1 = value;
			}
		}
		
		private string email1;
		[Column("email", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("email1")]
		public virtual string email
		{
			get
			{
				return this.email1;
			}
			set
			{
				this.email1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private string country1;
		[Column("country", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("country1")]
		public virtual string country
		{
			get
			{
				return this.country1;
			}
			set
			{
				this.country1 = value;
			}
		}
		
		private int? commentVote1;
		[Column("commentVote", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("commentVote1")]
		public virtual int? commentVote
		{
			get
			{
				return this.commentVote1;
			}
			set
			{
				this.commentVote1 = value;
			}
		}
		
		private string commentSubject1;
		[Column("commentSubject", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("commentSubject1")]
		public virtual string commentSubject
		{
			get
			{
				return this.commentSubject1;
			}
			set
			{
				this.commentSubject1 = value;
			}
		}
		
		private DateTime? commentDate1;
		[Column("commentDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("commentDate1")]
		public virtual DateTime? commentDate
		{
			get
			{
				return this.commentDate1;
			}
			set
			{
				this.commentDate1 = value;
			}
		}
		
		private string commentBody1;
		[Column("commentBody", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("commentBody1")]
		public virtual string commentBody
		{
			get
			{
				return this.commentBody1;
			}
			set
			{
				this.commentBody1 = value;
			}
		}
		
		private string browserIP1;
		[Column("browserIP", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("browserIP1")]
		public virtual string browserIP
		{
			get
			{
				return this.browserIP1;
			}
			set
			{
				this.browserIP1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogTagLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogTagLN
	{
		private long pidTag1;
		[Column("pidTag", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidTag1")]
		public virtual long pidTag
		{
			get
			{
				return this.pidTag1;
			}
			set
			{
				this.pidTag1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogTagTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbBlogTagTB
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? isImportant1;
		[Column("isImportant", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isImportant1")]
		public virtual int? isImportant
		{
			get
			{
				return this.isImportant1;
			}
			set
			{
				this.isImportant1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[View("BlogCategoryVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogCategoryVIEW
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
		private long? pidParentCategory1;
		[Column("pidParentCategory", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidParentCategory1")]
		public virtual long? pidParentCategory
		{
			get
			{
				return this.pidParentCategory1;
			}
			set
			{
				this.pidParentCategory1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[View("BlogTagVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogTagVIEW
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int? isImportant1;
		[Column("isImportant", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isImportant1")]
		public virtual int? isImportant
		{
			get
			{
				return this.isImportant1;
			}
			set
			{
				this.isImportant1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[View("BlogArticleVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogArticleVIEW
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
		private long? pidParentArticle1;
		[Column("pidParentArticle", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidParentArticle1")]
		public virtual long? pidParentArticle
		{
			get
			{
				return this.pidParentArticle1;
			}
			set
			{
				this.pidParentArticle1 = value;
			}
		}
		
		private long? pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidCategory1")]
		public virtual long? pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private DateTime? publicDate1;
		[Column("publicDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("publicDate1")]
		public virtual DateTime? publicDate
		{
			get
			{
				return this.publicDate1;
			}
			set
			{
				this.publicDate1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private int? pidZone1;
		[Column("pidZone", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidZone1")]
		public virtual int? pidZone
		{
			get
			{
				return this.pidZone1;
			}
			set
			{
				this.pidZone1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogArticleCategoryRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogArticleCategoryRL
	{
		private long pidArticle1;
		[Column("pidArticle", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidArticle1")]
		public virtual long pidArticle
		{
			get
			{
				return this.pidArticle1;
			}
			set
			{
				this.pidArticle1 = value;
			}
		}
		
		private long pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidCategory1")]
		public virtual long pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private int? sequence1;
		[Column("sequence", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("sequence1")]
		public virtual int? sequence
		{
			get
			{
				return this.sequence1;
			}
			set
			{
				this.sequence1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogArticleMediaTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbBlogArticleMediaTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private long? pidArticle1;
		[Column("pidArticle", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidArticle1")]
		public virtual long? pidArticle
		{
			get
			{
				return this.pidArticle1;
			}
			set
			{
				this.pidArticle1 = value;
			}
		}
		
		private int? sequence1;
		[Column("sequence", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("sequence1")]
		public virtual int? sequence
		{
			get
			{
				return this.sequence1;
			}
			set
			{
				this.sequence1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string img_thumb1;
		[Column("img_thumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("img_thumb1")]
		public virtual string img_thumb
		{
			get
			{
				return this.img_thumb1;
			}
			set
			{
				this.img_thumb1 = value;
			}
		}
		
		private string img_banner1;
		[Column("img_banner", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("img_banner1")]
		public virtual string img_banner
		{
			get
			{
				return this.img_banner1;
			}
			set
			{
				this.img_banner1 = value;
			}
		}
		
		private string video_path1;
		[Column("video_path", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("video_path1")]
		public virtual string video_path
		{
			get
			{
				return this.video_path1;
			}
			set
			{
				this.video_path1 = value;
			}
		}
		
		private string video_embed1;
		[Column("video_embed", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("video_embed1")]
		public virtual string video_embed
		{
			get
			{
				return this.video_embed1;
			}
			set
			{
				this.video_embed1 = value;
			}
		}
		
	}
}
namespace ModBlog	
{
	[Table("BlogZoneLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbBlogZoneLN
	{
		private long pidZone1;
		[Column("pidZone", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidZone1")]
		public virtual long pidZone
		{
			get
			{
				return this.pidZone1;
			}
			set
			{
				this.pidZone1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
	}
}
#pragma warning restore 1591

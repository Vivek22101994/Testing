#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using ModContent;

namespace ModContent	
{
	[NamingSettings(RemoveCamelCase = true, RemoveLeadingUnderscores = true, ResolveReservedWords = true, UseDelimitedSQL = true, WordBreak = "_")]
	public partial class DCmodContent : OpenAccessContext, IDCmodContentUnitOfWork
	{
		private static string connectionStringName = @"ModContentDBConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = AttributesMetadataSource.FromContext(typeof(DCmodContent));
		
		public DCmodContent()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public DCmodContent(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCmodContent(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public DCmodContent(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCmodContent(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<dbContLabelTBL> dbContLabelTBLs 
		{
			get
			{
				return this.GetAll<dbContLabelTBL>();
			}
		}
		
		public IQueryable<dbContLabelVIEW> dbContLabelVIEWs 
		{
			get
			{
				return this.GetAll<dbContLabelVIEW>();
			}
		}
		
		public IQueryable<dbRifContStpVIEW> dbRifContStpVIEWs 
		{
			get
			{
				return this.GetAll<dbRifContStpVIEW>();
			}
		}
		
		public IQueryable<dbRifContStpTB> dbRifContStpTBs 
		{
			get
			{
				return this.GetAll<dbRifContStpTB>();
			}
		}
		
		public IQueryable<dbRifContStpLN> dbRifContStpLNs 
		{
			get
			{
				return this.GetAll<dbRifContStpLN>();
			}
		}
		
		public IQueryable<dbRivContStpVIEW> dbRivContStpVIEWs 
		{
			get
			{
				return this.GetAll<dbRivContStpVIEW>();
			}
		}
		
		public IQueryable<dbRivContStpTB> dbRivContStpTBs 
		{
			get
			{
				return this.GetAll<dbRivContStpTB>();
			}
		}
		
		public IQueryable<dbRivContStpLN> dbRivContStpLNs 
		{
			get
			{
				return this.GetAll<dbRivContStpLN>();
			}
		}
		
		public IQueryable<dbRiKenyaContStpTB> dbRiKenyaContStpTBs 
		{
			get
			{
				return this.GetAll<dbRiKenyaContStpTB>();
			}
		}
		
		public IQueryable<dbRiKenyaContStpLN> dbRiKenyaContStpLNs 
		{
			get
			{
				return this.GetAll<dbRiKenyaContStpLN>();
			}
		}
		
		public IQueryable<dbRiKenyaContStpVIEW> dbRiKenyaContStpVIEWs 
		{
			get
			{
				return this.GetAll<dbRiKenyaContStpVIEW>();
			}
		}
		
		public IQueryable<dbContSysConfigTB> dbContSysConfigTBs 
		{
			get
			{
				return this.GetAll<dbContSysConfigTB>();
			}
		}
		
		public IQueryable<dbContSysConfigLN> dbContSysConfigLNs 
		{
			get
			{
				return this.GetAll<dbContSysConfigLN>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "mssql";
			backend.ProviderName = "System.Data.SqlClient";
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of DCmodContent.
		/// </summary>
		/// <param name="config">The BackendConfiguration of DCmodContent.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IDCmodContentUnitOfWork : IUnitOfWork
	{
		IQueryable<dbContLabelTBL> dbContLabelTBLs
		{
			get;
		}
		IQueryable<dbContLabelVIEW> dbContLabelVIEWs
		{
			get;
		}
		IQueryable<dbRifContStpVIEW> dbRifContStpVIEWs
		{
			get;
		}
		IQueryable<dbRifContStpTB> dbRifContStpTBs
		{
			get;
		}
		IQueryable<dbRifContStpLN> dbRifContStpLNs
		{
			get;
		}
		IQueryable<dbRivContStpVIEW> dbRivContStpVIEWs
		{
			get;
		}
		IQueryable<dbRivContStpTB> dbRivContStpTBs
		{
			get;
		}
		IQueryable<dbRivContStpLN> dbRivContStpLNs
		{
			get;
		}
		IQueryable<dbRiKenyaContStpTB> dbRiKenyaContStpTBs
		{
			get;
		}
		IQueryable<dbRiKenyaContStpLN> dbRiKenyaContStpLNs
		{
			get;
		}
		IQueryable<dbRiKenyaContStpVIEW> dbRiKenyaContStpVIEWs
		{
			get;
		}
		IQueryable<dbContSysConfigTB> dbContSysConfigTBs
		{
			get;
		}
		IQueryable<dbContSysConfigLN> dbContSysConfigLNs
		{
			get;
		}
	}
}
namespace ModContent	
{
	[Table("ContLabelTBL")]
	public partial class dbContLabelTBL
	{
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string id1;
		[Column("id", OpenAccessType = OpenAccessType.Varchar, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("id1")]
		public virtual string id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[View("ContLabelVIEW")]
	public partial class dbContLabelVIEW
	{
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.Clob, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string mTitle1;
		[Column("mTitle", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("mTitle1")]
		public virtual string mTitle
		{
			get
			{
				return this.mTitle1;
			}
			set
			{
				this.mTitle1 = value;
			}
		}
		
		private string id1;
		[Column("id", OpenAccessType = OpenAccessType.Varchar, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("id1")]
		public virtual string id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[View("RifContStpVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRifContStpVIEW
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string pageName1;
		[Column("pageName", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageName1")]
		public virtual string pageName
		{
			get
			{
				return this.pageName1;
			}
			set
			{
				this.pageName1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
		private string menuTitle1;
		[Column("menuTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("menuTitle1")]
		public virtual string menuTitle
		{
			get
			{
				return this.menuTitle1;
			}
			set
			{
				this.menuTitle1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBannerTitle1;
		[Column("imgBannerTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("imgBannerTitle1")]
		public virtual string imgBannerTitle
		{
			get
			{
				return this.imgBannerTitle1;
			}
			set
			{
				this.imgBannerTitle1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string endHead1;
		[Column("endHead", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endHead1")]
		public virtual string endHead
		{
			get
			{
				return this.endHead1;
			}
			set
			{
				this.endHead1 = value;
			}
		}
		
		private string endBody1;
		[Column("endBody", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endBody1")]
		public virtual string endBody
		{
			get
			{
				return this.endBody1;
			}
			set
			{
				this.endBody1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[Table("RifContStpTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRifContStpTB
	{
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private string pageName1;
		[Column("pageName", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageName1")]
		public virtual string pageName
		{
			get
			{
				return this.pageName1;
			}
			set
			{
				this.pageName1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string endHead1;
		[Column("endHead", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endHead1")]
		public virtual string endHead
		{
			get
			{
				return this.endHead1;
			}
			set
			{
				this.endHead1 = value;
			}
		}
		
		private string endBody1;
		[Column("endBody", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endBody1")]
		public virtual string endBody
		{
			get
			{
				return this.endBody1;
			}
			set
			{
				this.endBody1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[Table("RifContStpLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRifContStpLN
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private int pidStp1;
		[Column("pidStp", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidStp1")]
		public virtual int pidStp
		{
			get
			{
				return this.pidStp1;
			}
			set
			{
				this.pidStp1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
		private string menuTitle1;
		[Column("menuTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("menuTitle1")]
		public virtual string menuTitle
		{
			get
			{
				return this.menuTitle1;
			}
			set
			{
				this.menuTitle1 = value;
			}
		}
		
		private string imgBannerTitle1;
		[Column("imgBannerTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("imgBannerTitle1")]
		public virtual string imgBannerTitle
		{
			get
			{
				return this.imgBannerTitle1;
			}
			set
			{
				this.imgBannerTitle1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[View("RivContStpVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRivContStpVIEW
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string pageName1;
		[Column("pageName", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageName1")]
		public virtual string pageName
		{
			get
			{
				return this.pageName1;
			}
			set
			{
				this.pageName1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
		private string menuTitle1;
		[Column("menuTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("menuTitle1")]
		public virtual string menuTitle
		{
			get
			{
				return this.menuTitle1;
			}
			set
			{
				this.menuTitle1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBannerTitle1;
		[Column("imgBannerTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("imgBannerTitle1")]
		public virtual string imgBannerTitle
		{
			get
			{
				return this.imgBannerTitle1;
			}
			set
			{
				this.imgBannerTitle1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string endHead1;
		[Column("endHead", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endHead1")]
		public virtual string endHead
		{
			get
			{
				return this.endHead1;
			}
			set
			{
				this.endHead1 = value;
			}
		}
		
		private string endBody1;
		[Column("endBody", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endBody1")]
		public virtual string endBody
		{
			get
			{
				return this.endBody1;
			}
			set
			{
				this.endBody1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[Table("RivContStpTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRivContStpTB
	{
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private string pageName1;
		[Column("pageName", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageName1")]
		public virtual string pageName
		{
			get
			{
				return this.pageName1;
			}
			set
			{
				this.pageName1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string endHead1;
		[Column("endHead", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endHead1")]
		public virtual string endHead
		{
			get
			{
				return this.endHead1;
			}
			set
			{
				this.endHead1 = value;
			}
		}
		
		private string endBody1;
		[Column("endBody", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endBody1")]
		public virtual string endBody
		{
			get
			{
				return this.endBody1;
			}
			set
			{
				this.endBody1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[Table("RivContStpLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRivContStpLN
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private int pidStp1;
		[Column("pidStp", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidStp1")]
		public virtual int pidStp
		{
			get
			{
				return this.pidStp1;
			}
			set
			{
				this.pidStp1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
		private string menuTitle1;
		[Column("menuTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("menuTitle1")]
		public virtual string menuTitle
		{
			get
			{
				return this.menuTitle1;
			}
			set
			{
				this.menuTitle1 = value;
			}
		}
		
		private string imgBannerTitle1;
		[Column("imgBannerTitle", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("imgBannerTitle1")]
		public virtual string imgBannerTitle
		{
			get
			{
				return this.imgBannerTitle1;
			}
			set
			{
				this.imgBannerTitle1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[Table("RiKenyaContStpTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRiKenyaContStpTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string pageName1;
		[Column("pageName", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageName1")]
		public virtual string pageName
		{
			get
			{
				return this.pageName1;
			}
			set
			{
				this.pageName1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private string endHead1;
		[Column("endHead", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endHead1")]
		public virtual string endHead
		{
			get
			{
				return this.endHead1;
			}
			set
			{
				this.endHead1 = value;
			}
		}
		
		private string endBody1;
		[Column("endBody", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endBody1")]
		public virtual string endBody
		{
			get
			{
				return this.endBody1;
			}
			set
			{
				this.endBody1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[Table("RiKenyaContStpLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRiKenyaContStpLN
	{
		private int pidStp1;
		[Column("pidStp", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidStp1")]
		public virtual int pidStp
		{
			get
			{
				return this.pidStp1;
			}
			set
			{
				this.pidStp1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string menuTitle1;
		[Column("menuTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("menuTitle1")]
		public virtual string menuTitle
		{
			get
			{
				return this.menuTitle1;
			}
			set
			{
				this.menuTitle1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
		private string imgBannerTitle1;
		[Column("imgBannerTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("imgBannerTitle1")]
		public virtual string imgBannerTitle
		{
			get
			{
				return this.imgBannerTitle1;
			}
			set
			{
				this.imgBannerTitle1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[View("RiKenyaContStpVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRiKenyaContStpVIEW
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string pageRewrite1;
		[Column("pageRewrite", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageRewrite1")]
		public virtual string pageRewrite
		{
			get
			{
				return this.pageRewrite1;
			}
			set
			{
				this.pageRewrite1 = value;
			}
		}
		
		private string pagePath1;
		[Column("pagePath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("pagePath1")]
		public virtual string pagePath
		{
			get
			{
				return this.pagePath1;
			}
			set
			{
				this.pagePath1 = value;
			}
		}
		
		private string pageName1;
		[Column("pageName", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pageName1")]
		public virtual string pageName
		{
			get
			{
				return this.pageName1;
			}
			set
			{
				this.pageName1 = value;
			}
		}
		
		private string metaTitle1;
		[Column("metaTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaTitle1")]
		public virtual string metaTitle
		{
			get
			{
				return this.metaTitle1;
			}
			set
			{
				this.metaTitle1 = value;
			}
		}
		
		private string metaKeywords1;
		[Column("metaKeywords", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaKeywords1")]
		public virtual string metaKeywords
		{
			get
			{
				return this.metaKeywords1;
			}
			set
			{
				this.metaKeywords1 = value;
			}
		}
		
		private string metaDescription1;
		[Column("metaDescription", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("metaDescription1")]
		public virtual string metaDescription
		{
			get
			{
				return this.metaDescription1;
			}
			set
			{
				this.metaDescription1 = value;
			}
		}
		
		private string menuTitle1;
		[Column("menuTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("menuTitle1")]
		public virtual string menuTitle
		{
			get
			{
				return this.menuTitle1;
			}
			set
			{
				this.menuTitle1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private string imgBannerTitle1;
		[Column("imgBannerTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("imgBannerTitle1")]
		public virtual string imgBannerTitle
		{
			get
			{
				return this.imgBannerTitle1;
			}
			set
			{
				this.imgBannerTitle1 = value;
			}
		}
		
		private string imgBanner1;
		[Column("imgBanner", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgBanner1")]
		public virtual string imgBanner
		{
			get
			{
				return this.imgBanner1;
			}
			set
			{
				this.imgBanner1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string endHead1;
		[Column("endHead", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endHead1")]
		public virtual string endHead
		{
			get
			{
				return this.endHead1;
			}
			set
			{
				this.endHead1 = value;
			}
		}
		
		private string endBody1;
		[Column("endBody", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("endBody1")]
		public virtual string endBody
		{
			get
			{
				return this.endBody1;
			}
			set
			{
				this.endBody1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string cssFile1;
		[Column("cssFile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("cssFile1")]
		public virtual string cssFile
		{
			get
			{
				return this.cssFile1;
			}
			set
			{
				this.cssFile1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[Table("ContSysConfigTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbContSysConfigTB
	{
		private string name1;
		[Column("name", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("name1")]
		public virtual string name
		{
			get
			{
				return this.name1;
			}
			set
			{
				this.name1 = value;
			}
		}
		
		private string value1;
		[Column("value", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("value1")]
		public virtual string value
		{
			get
			{
				return this.value1;
			}
			set
			{
				this.value1 = value;
			}
		}
		
	}
}
namespace ModContent	
{
	[Table("ContSysConfigLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbContSysConfigLN
	{
		private string pidConfig1;
		[Column("pidConfig", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("pidConfig1")]
		public virtual string pidConfig
		{
			get
			{
				return this.pidConfig1;
			}
			set
			{
				this.pidConfig1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
#pragma warning restore 1591

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using ModRental;

namespace ModRental	
{
	[NamingSettings(SourceStrategy = NamingSourceStrategy.Property, RemoveLeadingUnderscores = true, ResolveReservedWords = true, UseDelimitedSQL = true, WordBreak = "_")]
	public partial class DCchnlExpedia : OpenAccessContext, IDCchnlExpediaUnitOfWork
	{
		private static string connectionStringName = @"ModRentalDBConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = AttributesMetadataSource.FromContext(typeof(DCchnlExpedia));
		
		public DCchnlExpedia()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public DCchnlExpedia(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCchnlExpedia(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public DCchnlExpedia(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCchnlExpedia(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<dbRntChnlExpediaRequestLOG> dbRntChnlExpediaRequestLOGs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRequestLOG>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeTBL> dbRntChnlExpediaRoomTypeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeRatePlanTBL> dbRntChnlExpediaRoomTypeRatePlanTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeRatePlanTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaEstateTBL> dbRntChnlExpediaEstateTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaEstateTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeRateThresholdTBL> dbRntChnlExpediaRoomTypeRateThresholdTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeRateThresholdTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeRatePlanLinkDefinitionTBL> dbRntChnlExpediaRoomTypeRatePlanLinkDefinitionTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeRatePlanLinkDefinitionTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeRatePlanDayOfWeekBookingRestrictionTBL> dbRntChnlExpediaRoomTypeRatePlanDayOfWeekBookingRestrictionTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeRatePlanDayOfWeekBookingRestrictionTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeRatePlanCompensationTBL> dbRntChnlExpediaRoomTypeRatePlanCompensationTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeRatePlanCompensationTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeRatePlanCancelPolicyTBL> dbRntChnlExpediaRoomTypeRatePlanCancelPolicyTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeRatePlanCancelPolicyTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeRatePlanCancelPolicyPenaltyTBL> dbRntChnlExpediaRoomTypeRatePlanCancelPolicyPenaltyTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeRatePlanCancelPolicyPenaltyTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeOccupancyByAgeTBL> dbRntChnlExpediaRoomTypeOccupancyByAgeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeOccupancyByAgeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeBedTypeTBL> dbRntChnlExpediaRoomTypeBedTypeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeBedTypeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaBookingTBL> dbRntChnlExpediaBookingTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaBookingTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaEstateRateChangesRL> dbRntChnlExpediaEstateRateChangesRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaEstateRateChangesRL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaEstateClosedDatesRL> dbRntChnlExpediaEstateClosedDatesRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaEstateClosedDatesRL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRatesTBL> dbRntChnlExpediaRatesTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRatesTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaAvailabilityTBL> dbRntChnlExpediaAvailabilityTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaAvailabilityTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaEstateAllotmentChangeRL> dbRntChnlExpediaEstateAllotmentChangeRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaEstateAllotmentChangeRL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaEstateRoomRL> dbRntChnlExpediaEstateRoomRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaEstateRoomRL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaAssignedEstateRoomRL> dbRntChnlExpediaAssignedEstateRoomRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaAssignedEstateRoomRL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomAmenitiesValuesTBL> dbRntChnlExpediaRoomAmenitiesValuesTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomAmenitiesValuesTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomAmenitiesDetailCodeTBL> dbRntChnlExpediaRoomAmenitiesDetailCodeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomAmenitiesDetailCodeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaPropertyTypeRL> dbRntChnlExpediaPropertyTypeRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaPropertyTypeRL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaLkRoomTypeTBL> dbRntChnlExpediaLkRoomTypeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaLkRoomTypeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaLKRoomAmenitiesTBL> dbRntChnlExpediaLKRoomAmenitiesTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaLKRoomAmenitiesTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaLkPropertyTypeTBL> dbRntChnlExpediaLkPropertyTypeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaLkPropertyTypeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaLkBedsTBL> dbRntChnlExpediaLkBedsTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaLkBedsTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaBedsRL> dbRntChnlExpediaBedsRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaBedsRL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaAmenitiesDetailCodeTBL> dbRntChnlExpediaAmenitiesDetailCodeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaAmenitiesDetailCodeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaRoomTypeRL> dbRntChnlExpediaRoomTypeRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaRoomTypeRL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaLkAmenitiesTBL> dbRntChnlExpediaLkAmenitiesTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaLkAmenitiesTBL>();
			}
		}
		
		public IQueryable<dbRntChnlExpediaHotelTBL> dbRntChnlExpediaHotelTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlExpediaHotelTBL>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "MsSql";
			backend.ProviderName = "System.Data.SqlClient";
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of DCchnlExpedia.
		/// </summary>
		/// <param name="config">The BackendConfiguration of DCchnlExpedia.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IDCchnlExpediaUnitOfWork : IUnitOfWork
	{
		IQueryable<dbRntChnlExpediaRequestLOG> dbRntChnlExpediaRequestLOGs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeTBL> dbRntChnlExpediaRoomTypeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeRatePlanTBL> dbRntChnlExpediaRoomTypeRatePlanTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaEstateTBL> dbRntChnlExpediaEstateTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeRateThresholdTBL> dbRntChnlExpediaRoomTypeRateThresholdTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeRatePlanLinkDefinitionTBL> dbRntChnlExpediaRoomTypeRatePlanLinkDefinitionTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeRatePlanDayOfWeekBookingRestrictionTBL> dbRntChnlExpediaRoomTypeRatePlanDayOfWeekBookingRestrictionTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeRatePlanCompensationTBL> dbRntChnlExpediaRoomTypeRatePlanCompensationTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeRatePlanCancelPolicyTBL> dbRntChnlExpediaRoomTypeRatePlanCancelPolicyTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeRatePlanCancelPolicyPenaltyTBL> dbRntChnlExpediaRoomTypeRatePlanCancelPolicyPenaltyTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeOccupancyByAgeTBL> dbRntChnlExpediaRoomTypeOccupancyByAgeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeBedTypeTBL> dbRntChnlExpediaRoomTypeBedTypeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaBookingTBL> dbRntChnlExpediaBookingTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaEstateRateChangesRL> dbRntChnlExpediaEstateRateChangesRLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaEstateClosedDatesRL> dbRntChnlExpediaEstateClosedDatesRLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRatesTBL> dbRntChnlExpediaRatesTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaAvailabilityTBL> dbRntChnlExpediaAvailabilityTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaEstateAllotmentChangeRL> dbRntChnlExpediaEstateAllotmentChangeRLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaEstateRoomRL> dbRntChnlExpediaEstateRoomRLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaAssignedEstateRoomRL> dbRntChnlExpediaAssignedEstateRoomRLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomAmenitiesValuesTBL> dbRntChnlExpediaRoomAmenitiesValuesTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomAmenitiesDetailCodeTBL> dbRntChnlExpediaRoomAmenitiesDetailCodeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaPropertyTypeRL> dbRntChnlExpediaPropertyTypeRLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaLkRoomTypeTBL> dbRntChnlExpediaLkRoomTypeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaLKRoomAmenitiesTBL> dbRntChnlExpediaLKRoomAmenitiesTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaLkPropertyTypeTBL> dbRntChnlExpediaLkPropertyTypeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaLkBedsTBL> dbRntChnlExpediaLkBedsTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaBedsRL> dbRntChnlExpediaBedsRLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaAmenitiesDetailCodeTBL> dbRntChnlExpediaAmenitiesDetailCodeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaRoomTypeRL> dbRntChnlExpediaRoomTypeRLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaLkAmenitiesTBL> dbRntChnlExpediaLkAmenitiesTBLs
		{
			get;
		}
		IQueryable<dbRntChnlExpediaHotelTBL> dbRntChnlExpediaHotelTBLs
		{
			get;
		}
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRequestLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlExpediaRequestLOG
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private DateTime? logDateTime1;
		[Column("logDateTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDateTime1")]
		public virtual DateTime? logDateTime
		{
			get
			{
				return this.logDateTime1;
			}
			set
			{
				this.logDateTime1 = value;
			}
		}
		
		private string requesUrl1;
		[Column("requesUrl", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requesUrl1")]
		public virtual string requesUrl
		{
			get
			{
				return this.requesUrl1;
			}
			set
			{
				this.requesUrl1 = value;
			}
		}
		
		private string requestType1;
		[Column("requestType", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requestType1")]
		public virtual string requestType
		{
			get
			{
				return this.requestType1;
			}
			set
			{
				this.requestType1 = value;
			}
		}
		
		private string requestContent1;
		[Column("requestContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("requestContent1")]
		public virtual string requestContent
		{
			get
			{
				return this.requestContent1;
			}
			set
			{
				this.requestContent1 = value;
			}
		}
		
		private string responseContent1;
		[Column("responseContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("responseContent1")]
		public virtual string responseContent
		{
			get
			{
				return this.responseContent1;
			}
			set
			{
				this.responseContent1 = value;
			}
		}
		
		private string requestComments1;
		[Column("requestComments", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requestComments1")]
		public virtual string requestComments
		{
			get
			{
				return this.requestComments1;
			}
			set
			{
				this.requestComments1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaRoomTypeTBL
	{
		private string id1;
		[Column("id", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("id1")]
		public virtual string id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int HotelId1;
		[Column("HotelId", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("HotelId1")]
		public virtual int HotelId
		{
			get
			{
				return this.HotelId1;
			}
			set
			{
				this.HotelId1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string name1;
		[Column("name", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("name1")]
		public virtual string name
		{
			get
			{
				return this.name1;
			}
			set
			{
				this.name1 = value;
			}
		}
		
		private int? status1;
		[Column("status", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("status1")]
		public virtual int? status
		{
			get
			{
				return this.status1;
			}
			set
			{
				this.status1 = value;
			}
		}
		
		private string smokingPref1;
		[Column("smokingPref", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("smokingPref1")]
		public virtual string smokingPref
		{
			get
			{
				return this.smokingPref1;
			}
			set
			{
				this.smokingPref1 = value;
			}
		}
		
		private int? maxOccupants1;
		[Column("maxOccupants", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("maxOccupants1")]
		public virtual int? maxOccupants
		{
			get
			{
				return this.maxOccupants1;
			}
			set
			{
				this.maxOccupants1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeRatePlanTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaRoomTypeRatePlanTBL
	{
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string RatePlanId1;
		[Column("RatePlanId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RatePlanId1")]
		public virtual string RatePlanId
		{
			get
			{
				return this.RatePlanId1;
			}
			set
			{
				this.RatePlanId1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string name1;
		[Column("name", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("name1")]
		public virtual string name
		{
			get
			{
				return this.name1;
			}
			set
			{
				this.name1 = value;
			}
		}
		
		private int? status1;
		[Column("status", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("status1")]
		public virtual int? status
		{
			get
			{
				return this.status1;
			}
			set
			{
				this.status1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string distributionModel1;
		[Column("distributionModel", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("distributionModel1")]
		public virtual string distributionModel
		{
			get
			{
				return this.distributionModel1;
			}
			set
			{
				this.distributionModel1 = value;
			}
		}
		
		private string rateAcquisitionType1;
		[Column("rateAcquisitionType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("rateAcquisitionType1")]
		public virtual string rateAcquisitionType
		{
			get
			{
				return this.rateAcquisitionType1;
			}
			set
			{
				this.rateAcquisitionType1 = value;
			}
		}
		
		private string pricingModel1;
		[Column("pricingModel", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pricingModel1")]
		public virtual string pricingModel
		{
			get
			{
				return this.pricingModel1;
			}
			set
			{
				this.pricingModel1 = value;
			}
		}
		
		private bool? depositRequired1;
		[Column("depositRequired", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("depositRequired1")]
		public virtual bool? depositRequired
		{
			get
			{
				return this.depositRequired1;
			}
			set
			{
				this.depositRequired1 = value;
			}
		}
		
		private int? minLOSDefault1;
		[Column("minLOSDefault", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minLOSDefault1")]
		public virtual int? minLOSDefault
		{
			get
			{
				return this.minLOSDefault1;
			}
			set
			{
				this.minLOSDefault1 = value;
			}
		}
		
		private int? maxLOSDefault1;
		[Column("maxLOSDefault", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("maxLOSDefault1")]
		public virtual int? maxLOSDefault
		{
			get
			{
				return this.maxLOSDefault1;
			}
			set
			{
				this.maxLOSDefault1 = value;
			}
		}
		
		private int? minAdvBookDays1;
		[Column("minAdvBookDays", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minAdvBookDays1")]
		public virtual int? minAdvBookDays
		{
			get
			{
				return this.minAdvBookDays1;
			}
			set
			{
				this.minAdvBookDays1 = value;
			}
		}
		
		private int? maxAdvBookDays1;
		[Column("maxAdvBookDays", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("maxAdvBookDays1")]
		public virtual int? maxAdvBookDays
		{
			get
			{
				return this.maxAdvBookDays1;
			}
			set
			{
				this.maxAdvBookDays1 = value;
			}
		}
		
		private bool? mobileOnly1;
		[Column("mobileOnly", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("mobileOnly1")]
		public virtual bool? mobileOnly
		{
			get
			{
				return this.mobileOnly1;
			}
			set
			{
				this.mobileOnly1 = value;
			}
		}
		
		private string createDateTime1;
		[Column("createDateTime", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("createDateTime1")]
		public virtual string createDateTime
		{
			get
			{
				return this.createDateTime1;
			}
			set
			{
				this.createDateTime1 = value;
			}
		}
		
		private string updateDateTime1;
		[Column("updateDateTime", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("updateDateTime1")]
		public virtual string updateDateTime
		{
			get
			{
				return this.updateDateTime1;
			}
			set
			{
				this.updateDateTime1 = value;
			}
		}
		
		private DateTime? rateLinkStart1;
		[Column("rateLinkStart", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("rateLinkStart1")]
		public virtual DateTime? rateLinkStart
		{
			get
			{
				return this.rateLinkStart1;
			}
			set
			{
				this.rateLinkStart1 = value;
			}
		}
		
		private bool? rateLinkExceptions1;
		[Column("rateLinkExceptions", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("rateLinkExceptions1")]
		public virtual bool? rateLinkExceptions
		{
			get
			{
				return this.rateLinkExceptions1;
			}
			set
			{
				this.rateLinkExceptions1 = value;
			}
		}
		
		private DateTime? rateLinkEnd1;
		[Column("rateLinkEnd", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("rateLinkEnd1")]
		public virtual DateTime? rateLinkEnd
		{
			get
			{
				return this.rateLinkEnd1;
			}
			set
			{
				this.rateLinkEnd1 = value;
			}
		}
		
		private int? occupantsForBaseRate1;
		[Column("occupantsForBaseRate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("occupantsForBaseRate1")]
		public virtual int? occupantsForBaseRate
		{
			get
			{
				return this.occupantsForBaseRate1;
			}
			set
			{
				this.occupantsForBaseRate1 = value;
			}
		}
		
		private bool? isCTDLinked1;
		[Column("isCTDLinked", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("isCTDLinked1")]
		public virtual bool? isCTDLinked
		{
			get
			{
				return this.isCTDLinked1;
			}
			set
			{
				this.isCTDLinked1 = value;
			}
		}
		
		private bool? isCTALinked1;
		[Column("isCTALinked", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("isCTALinked1")]
		public virtual bool? isCTALinked
		{
			get
			{
				return this.isCTALinked1;
			}
			set
			{
				this.isCTALinked1 = value;
			}
		}
		
		private bool? isAvailStatusLinked1;
		[Column("isAvailStatusLinked", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("isAvailStatusLinked1")]
		public virtual bool? isAvailStatusLinked
		{
			get
			{
				return this.isAvailStatusLinked1;
			}
			set
			{
				this.isAvailStatusLinked1 = value;
			}
		}
		
		private bool? areMinMaxLOSLinked1;
		[Column("areMinMaxLOSLinked", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("areMinMaxLOSLinked1")]
		public virtual bool? areMinMaxLOSLinked
		{
			get
			{
				return this.areMinMaxLOSLinked1;
			}
			set
			{
				this.areMinMaxLOSLinked1 = value;
			}
		}
		
		private string parentId1;
		[Column("parentId", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("parentId1")]
		public virtual string parentId
		{
			get
			{
				return this.parentId1;
			}
			set
			{
				this.parentId1 = value;
			}
		}
		
		private DateTime? travelDateStart1;
		[Column("travelDateStart", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("travelDateStart1")]
		public virtual DateTime? travelDateStart
		{
			get
			{
				return this.travelDateStart1;
			}
			set
			{
				this.travelDateStart1 = value;
			}
		}
		
		private DateTime? travelDateEnd1;
		[Column("travelDateEnd", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("travelDateEnd1")]
		public virtual DateTime? travelDateEnd
		{
			get
			{
				return this.travelDateEnd1;
			}
			set
			{
				this.travelDateEnd1 = value;
			}
		}
		
		private DateTime? bookDateStart1;
		[Column("bookDateStart", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("bookDateStart1")]
		public virtual DateTime? bookDateStart
		{
			get
			{
				return this.bookDateStart1;
			}
			set
			{
				this.bookDateStart1 = value;
			}
		}
		
		private DateTime? bookDateEnd1;
		[Column("bookDateEnd", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("bookDateEnd1")]
		public virtual DateTime? bookDateEnd
		{
			get
			{
				return this.bookDateEnd1;
			}
			set
			{
				this.bookDateEnd1 = value;
			}
		}
		
		private int rate_changeIsPercentage1;
		[Column("rate_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_changeIsPercentage1")]
		public virtual int rate_changeIsPercentage
		{
			get
			{
				return this.rate_changeIsPercentage1;
			}
			set
			{
				this.rate_changeIsPercentage1 = value;
			}
		}
		
		private int rate_changeIsDiscount1;
		[Column("rate_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_changeIsDiscount1")]
		public virtual int rate_changeIsDiscount
		{
			get
			{
				return this.rate_changeIsDiscount1;
			}
			set
			{
				this.rate_changeIsDiscount1 = value;
			}
		}
		
		private int rate_changeAmount1;
		[Column("rate_changeAmount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_changeAmount1")]
		public virtual int rate_changeAmount
		{
			get
			{
				return this.rate_changeAmount1;
			}
			set
			{
				this.rate_changeAmount1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaEstateTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaEstateTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int HotelId1;
		[Column("HotelId", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("HotelId1")]
		public virtual int HotelId
		{
			get
			{
				return this.HotelId1;
			}
			set
			{
				this.HotelId1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeRateThresholdTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaRoomTypeRateThresholdTBL
	{
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private decimal minAmount1;
		[Column("minAmount", OpenAccessType = OpenAccessType.Decimal, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("minAmount1")]
		public virtual decimal minAmount
		{
			get
			{
				return this.minAmount1;
			}
			set
			{
				this.minAmount1 = value;
			}
		}
		
		private decimal maxAmount1;
		[Column("maxAmount", OpenAccessType = OpenAccessType.Decimal, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("maxAmount1")]
		public virtual decimal maxAmount
		{
			get
			{
				return this.maxAmount1;
			}
			set
			{
				this.maxAmount1 = value;
			}
		}
		
		private string source1;
		[Column("source", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("source1")]
		public virtual string source
		{
			get
			{
				return this.source1;
			}
			set
			{
				this.source1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeRatePlanLinkDefinitionTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntChnlExpediaRoomTypeRatePlanLinkDefinitionTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string RatePlanId1;
		[Column("RatePlanId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RatePlanId1")]
		public virtual string RatePlanId
		{
			get
			{
				return this.RatePlanId1;
			}
			set
			{
				this.RatePlanId1 = value;
			}
		}
		
		private string linkType1;
		[Column("linkType", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("linkType1")]
		public virtual string linkType
		{
			get
			{
				return this.linkType1;
			}
			set
			{
				this.linkType1 = value;
			}
		}
		
		private decimal linkValue1;
		[Column("linkValue", OpenAccessType = OpenAccessType.Decimal, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("linkValue1")]
		public virtual decimal linkValue
		{
			get
			{
				return this.linkValue1;
			}
			set
			{
				this.linkValue1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeRatePlanDayOfWeekBookingRestrictionTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntChnlExpediaRoomTypeRatePlanDayOfWeekBookingRestrictionTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string RatePlanId1;
		[Column("RatePlanId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RatePlanId1")]
		public virtual string RatePlanId
		{
			get
			{
				return this.RatePlanId1;
			}
			set
			{
				this.RatePlanId1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private bool sun1;
		[Column("sun", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("sun1")]
		public virtual bool sun
		{
			get
			{
				return this.sun1;
			}
			set
			{
				this.sun1 = value;
			}
		}
		
		private bool mon1;
		[Column("mon", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("mon1")]
		public virtual bool mon
		{
			get
			{
				return this.mon1;
			}
			set
			{
				this.mon1 = value;
			}
		}
		
		private bool tue1;
		[Column("tue", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("tue1")]
		public virtual bool tue
		{
			get
			{
				return this.tue1;
			}
			set
			{
				this.tue1 = value;
			}
		}
		
		private bool wed1;
		[Column("wed", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("wed1")]
		public virtual bool wed
		{
			get
			{
				return this.wed1;
			}
			set
			{
				this.wed1 = value;
			}
		}
		
		private bool thu1;
		[Column("thu", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("thu1")]
		public virtual bool thu
		{
			get
			{
				return this.thu1;
			}
			set
			{
				this.thu1 = value;
			}
		}
		
		private bool fri1;
		[Column("fri", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("fri1")]
		public virtual bool fri
		{
			get
			{
				return this.fri1;
			}
			set
			{
				this.fri1 = value;
			}
		}
		
		private bool sat1;
		[Column("sat", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("sat1")]
		public virtual bool sat
		{
			get
			{
				return this.sat1;
			}
			set
			{
				this.sat1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeRatePlanCompensationTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntChnlExpediaRoomTypeRatePlanCompensationTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string RatePlanId1;
		[Column("RatePlanId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RatePlanId1")]
		public virtual string RatePlanId
		{
			get
			{
				return this.RatePlanId1;
			}
			set
			{
				this.RatePlanId1 = value;
			}
		}
		
		private bool _default1;
		[Column("default", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_default1")]
		public virtual bool _default
		{
			get
			{
				return this._default1;
			}
			set
			{
				this._default1 = value;
			}
		}
		
		private decimal percent1;
		[Column("percent", OpenAccessType = OpenAccessType.Decimal, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("percent1")]
		public virtual decimal percent
		{
			get
			{
				return this.percent1;
			}
			set
			{
				this.percent1 = value;
			}
		}
		
		private decimal? minAmount1;
		[Column("minAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("minAmount1")]
		public virtual decimal? minAmount
		{
			get
			{
				return this.minAmount1;
			}
			set
			{
				this.minAmount1 = value;
			}
		}
		
		private DateTime? from1;
		[Column("from", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("from1")]
		public virtual DateTime? from
		{
			get
			{
				return this.from1;
			}
			set
			{
				this.from1 = value;
			}
		}
		
		private DateTime? to1;
		[Column("to", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("to1")]
		public virtual DateTime? to
		{
			get
			{
				return this.to1;
			}
			set
			{
				this.to1 = value;
			}
		}
		
		private bool? sun1;
		[Column("sun", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("sun1")]
		public virtual bool? sun
		{
			get
			{
				return this.sun1;
			}
			set
			{
				this.sun1 = value;
			}
		}
		
		private bool? mon1;
		[Column("mon", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("mon1")]
		public virtual bool? mon
		{
			get
			{
				return this.mon1;
			}
			set
			{
				this.mon1 = value;
			}
		}
		
		private bool? tue1;
		[Column("tue", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("tue1")]
		public virtual bool? tue
		{
			get
			{
				return this.tue1;
			}
			set
			{
				this.tue1 = value;
			}
		}
		
		private bool? wed1;
		[Column("wed", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("wed1")]
		public virtual bool? wed
		{
			get
			{
				return this.wed1;
			}
			set
			{
				this.wed1 = value;
			}
		}
		
		private bool? thu1;
		[Column("thu", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("thu1")]
		public virtual bool? thu
		{
			get
			{
				return this.thu1;
			}
			set
			{
				this.thu1 = value;
			}
		}
		
		private bool? fri1;
		[Column("fri", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("fri1")]
		public virtual bool? fri
		{
			get
			{
				return this.fri1;
			}
			set
			{
				this.fri1 = value;
			}
		}
		
		private bool? sat1;
		[Column("sat", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("sat1")]
		public virtual bool? sat
		{
			get
			{
				return this.sat1;
			}
			set
			{
				this.sat1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeRatePlanCancelPolicyTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntChnlExpediaRoomTypeRatePlanCancelPolicyTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string RatePlanId1;
		[Column("RatePlanId", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RatePlanId1")]
		public virtual string RatePlanId
		{
			get
			{
				return this.RatePlanId1;
			}
			set
			{
				this.RatePlanId1 = value;
			}
		}
		
		private bool _default1;
		[Column("default", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_default1")]
		public virtual bool _default
		{
			get
			{
				return this._default1;
			}
			set
			{
				this._default1 = value;
			}
		}
		
		private DateTime? startDate1;
		[Column("startDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("startDate1")]
		public virtual DateTime? startDate
		{
			get
			{
				return this.startDate1;
			}
			set
			{
				this.startDate1 = value;
			}
		}
		
		private DateTime? endDate1;
		[Column("endDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("endDate1")]
		public virtual DateTime? endDate
		{
			get
			{
				return this.endDate1;
			}
			set
			{
				this.endDate1 = value;
			}
		}
		
		private int? cancelWindow1;
		[Column("cancelWindow", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cancelWindow1")]
		public virtual int? cancelWindow
		{
			get
			{
				return this.cancelWindow1;
			}
			set
			{
				this.cancelWindow1 = value;
			}
		}
		
		private bool? nonRefundable1;
		[Column("nonRefundable", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("nonRefundable1")]
		public virtual bool? nonRefundable
		{
			get
			{
				return this.nonRefundable1;
			}
			set
			{
				this.nonRefundable1 = value;
			}
		}
		
		private string createDateTime1;
		[Column("createDateTime", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("createDateTime1")]
		public virtual string createDateTime
		{
			get
			{
				return this.createDateTime1;
			}
			set
			{
				this.createDateTime1 = value;
			}
		}
		
		private string updateDateTime1;
		[Column("updateDateTime", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("updateDateTime1")]
		public virtual string updateDateTime
		{
			get
			{
				return this.updateDateTime1;
			}
			set
			{
				this.updateDateTime1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeRatePlanCancelPolicyPenaltyTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntChnlExpediaRoomTypeRatePlanCancelPolicyPenaltyTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private Guid CancelPolicyUid1;
		[Column("CancelPolicyUid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("CancelPolicyUid1")]
		public virtual Guid CancelPolicyUid
		{
			get
			{
				return this.CancelPolicyUid1;
			}
			set
			{
				this.CancelPolicyUid1 = value;
			}
		}
		
		private bool? insideWindow1;
		[Column("insideWindow", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("insideWindow1")]
		public virtual bool? insideWindow
		{
			get
			{
				return this.insideWindow1;
			}
			set
			{
				this.insideWindow1 = value;
			}
		}
		
		private decimal? flatFee1;
		[Column("flatFee", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("flatFee1")]
		public virtual decimal? flatFee
		{
			get
			{
				return this.flatFee1;
			}
			set
			{
				this.flatFee1 = value;
			}
		}
		
		private string perStayFee1;
		[Column("perStayFee", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("perStayFee1")]
		public virtual string perStayFee
		{
			get
			{
				return this.perStayFee1;
			}
			set
			{
				this.perStayFee1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeOccupancyByAgeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaRoomTypeOccupancyByAgeTBL
	{
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string ageCategory1;
		[Column("ageCategory", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("ageCategory1")]
		public virtual string ageCategory
		{
			get
			{
				return this.ageCategory1;
			}
			set
			{
				this.ageCategory1 = value;
			}
		}
		
		private int minAge1;
		[Column("minAge", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minAge1")]
		public virtual int minAge
		{
			get
			{
				return this.minAge1;
			}
			set
			{
				this.minAge1 = value;
			}
		}
		
		private int maxOccupants1;
		[Column("maxOccupants", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("maxOccupants1")]
		public virtual int maxOccupants
		{
			get
			{
				return this.maxOccupants1;
			}
			set
			{
				this.maxOccupants1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeBedTypeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaRoomTypeBedTypeTBL
	{
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string BedTypeId1;
		[Column("BedTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("BedTypeId1")]
		public virtual string BedTypeId
		{
			get
			{
				return this.BedTypeId1;
			}
			set
			{
				this.BedTypeId1 = value;
			}
		}
		
		private string name1;
		[Column("name", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("name1")]
		public virtual string name
		{
			get
			{
				return this.name1;
			}
			set
			{
				this.name1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaBookingTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaBookingTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private long? reservationId1;
		[Column("reservationId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("reservationId1")]
		public virtual long? reservationId
		{
			get
			{
				return this.reservationId1;
			}
			set
			{
				this.reservationId1 = value;
			}
		}
		
		private int HotelId1;
		[Column("HotelId", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("HotelId1")]
		public virtual int HotelId
		{
			get
			{
				return this.HotelId1;
			}
			set
			{
				this.HotelId1 = value;
			}
		}
		
		private string roomTypeID1;
		[Column("roomTypeID", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("roomTypeID1")]
		public virtual string roomTypeID
		{
			get
			{
				return this.roomTypeID1;
			}
			set
			{
				this.roomTypeID1 = value;
			}
		}
		
		private string ratePlanID1;
		[Column("ratePlanID", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("ratePlanID1")]
		public virtual string ratePlanID
		{
			get
			{
				return this.ratePlanID1;
			}
			set
			{
				this.ratePlanID1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private DateTime? createDateTime1;
		[Column("createDateTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createDateTime1")]
		public virtual DateTime? createDateTime
		{
			get
			{
				return this.createDateTime1;
			}
			set
			{
				this.createDateTime1 = value;
			}
		}
		
		private string source1;
		[Column("source", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("source1")]
		public virtual string source
		{
			get
			{
				return this.source1;
			}
			set
			{
				this.source1 = value;
			}
		}
		
		private string status1;
		[Column("status", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("status1")]
		public virtual string status
		{
			get
			{
				return this.status1;
			}
			set
			{
				this.status1 = value;
			}
		}
		
		private string confirmNumber1;
		[Column("confirmNumber", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("confirmNumber1")]
		public virtual string confirmNumber
		{
			get
			{
				return this.confirmNumber1;
			}
			set
			{
				this.confirmNumber1 = value;
			}
		}
		
		private string specialRequests1;
		[Column("specialRequests", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("specialRequests1")]
		public virtual string specialRequests
		{
			get
			{
				return this.specialRequests1;
			}
			set
			{
				this.specialRequests1 = value;
			}
		}
		
		private string specialRequestCodes1;
		[Column("specialRequestCodes", OpenAccessType = OpenAccessType.StringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "varchar(max)")]
		[Storage("specialRequestCodes1")]
		public virtual string specialRequestCodes
		{
			get
			{
				return this.specialRequestCodes1;
			}
			set
			{
				this.specialRequestCodes1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaEstateRateChangesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaEstateRateChangesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string RatePlanId1;
		[Column("RatePlanId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RatePlanId1")]
		public virtual string RatePlanId
		{
			get
			{
				return this.RatePlanId1;
			}
			set
			{
				this.RatePlanId1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private int? rate_changeAmount1;
		[Column("rate_changeAmount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_changeAmount1")]
		public virtual int? rate_changeAmount
		{
			get
			{
				return this.rate_changeAmount1;
			}
			set
			{
				this.rate_changeAmount1 = value;
			}
		}
		
		private int? rate_changeIsDiscount1;
		[Column("rate_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_changeIsDiscount1")]
		public virtual int? rate_changeIsDiscount
		{
			get
			{
				return this.rate_changeIsDiscount1;
			}
			set
			{
				this.rate_changeIsDiscount1 = value;
			}
		}
		
		private int? rate_changeIsPercentage1;
		[Column("rate_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_changeIsPercentage1")]
		public virtual int? rate_changeIsPercentage
		{
			get
			{
				return this.rate_changeIsPercentage1;
			}
			set
			{
				this.rate_changeIsPercentage1 = value;
			}
		}
		
		private int? rate_chnageDay11;
		[Column("rate_chnageDay1", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_chnageDay11")]
		public virtual int? rate_chnageDay1
		{
			get
			{
				return this.rate_chnageDay11;
			}
			set
			{
				this.rate_chnageDay11 = value;
			}
		}
		
		private int? rate_chnageDay21;
		[Column("rate_chnageDay2", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_chnageDay21")]
		public virtual int? rate_chnageDay2
		{
			get
			{
				return this.rate_chnageDay21;
			}
			set
			{
				this.rate_chnageDay21 = value;
			}
		}
		
		private int? rate_chnageDay31;
		[Column("rate_chnageDay3", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_chnageDay31")]
		public virtual int? rate_chnageDay3
		{
			get
			{
				return this.rate_chnageDay31;
			}
			set
			{
				this.rate_chnageDay31 = value;
			}
		}
		
		private int? rate_chnageDay41;
		[Column("rate_chnageDay4", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_chnageDay41")]
		public virtual int? rate_chnageDay4
		{
			get
			{
				return this.rate_chnageDay41;
			}
			set
			{
				this.rate_chnageDay41 = value;
			}
		}
		
		private int? rate_chnageDay51;
		[Column("rate_chnageDay5", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_chnageDay51")]
		public virtual int? rate_chnageDay5
		{
			get
			{
				return this.rate_chnageDay51;
			}
			set
			{
				this.rate_chnageDay51 = value;
			}
		}
		
		private int? rate_chnageDay61;
		[Column("rate_chnageDay6", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_chnageDay61")]
		public virtual int? rate_chnageDay6
		{
			get
			{
				return this.rate_chnageDay61;
			}
			set
			{
				this.rate_chnageDay61 = value;
			}
		}
		
		private int? rate_chnageDay71;
		[Column("rate_chnageDay7", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rate_chnageDay71")]
		public virtual int? rate_chnageDay7
		{
			get
			{
				return this.rate_chnageDay71;
			}
			set
			{
				this.rate_chnageDay71 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaEstateClosedDatesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaEstateClosedDatesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private string RatePlanId1;
		[Column("RatePlanId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RatePlanId1")]
		public virtual string RatePlanId
		{
			get
			{
				return this.RatePlanId1;
			}
			set
			{
				this.RatePlanId1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private int? isClosed1;
		[Column("isClosed", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isClosed1")]
		public virtual int? isClosed
		{
			get
			{
				return this.isClosed1;
			}
			set
			{
				this.isClosed1 = value;
			}
		}
		
		private int? minStay1;
		[Column("minStay", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minStay1")]
		public virtual int? minStay
		{
			get
			{
				return this.minStay1;
			}
			set
			{
				this.minStay1 = value;
			}
		}
		
		private int? maxStay1;
		[Column("maxStay", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("maxStay1")]
		public virtual int? maxStay
		{
			get
			{
				return this.maxStay1;
			}
			set
			{
				this.maxStay1 = value;
			}
		}
		
		private int? isClosedOnArrival1;
		[Column("isClosedOnArrival", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isClosedOnArrival1")]
		public virtual int? isClosedOnArrival
		{
			get
			{
				return this.isClosedOnArrival1;
			}
			set
			{
				this.isClosedOnArrival1 = value;
			}
		}
		
		private int? isClosedOnDeparture1;
		[Column("isClosedOnDeparture", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isClosedOnDeparture1")]
		public virtual int? isClosedOnDeparture
		{
			get
			{
				return this.isClosedOnDeparture1;
			}
			set
			{
				this.isClosedOnDeparture1 = value;
			}
		}
		
		private int? isDay11;
		[Column("isDay1", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDay11")]
		public virtual int? isDay1
		{
			get
			{
				return this.isDay11;
			}
			set
			{
				this.isDay11 = value;
			}
		}
		
		private int? isDay21;
		[Column("isDay2", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDay21")]
		public virtual int? isDay2
		{
			get
			{
				return this.isDay21;
			}
			set
			{
				this.isDay21 = value;
			}
		}
		
		private int? isDay31;
		[Column("isDay3", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDay31")]
		public virtual int? isDay3
		{
			get
			{
				return this.isDay31;
			}
			set
			{
				this.isDay31 = value;
			}
		}
		
		private int? isDay41;
		[Column("isDay4", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDay41")]
		public virtual int? isDay4
		{
			get
			{
				return this.isDay41;
			}
			set
			{
				this.isDay41 = value;
			}
		}
		
		private int? isDay51;
		[Column("isDay5", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDay51")]
		public virtual int? isDay5
		{
			get
			{
				return this.isDay51;
			}
			set
			{
				this.isDay51 = value;
			}
		}
		
		private int? isDay61;
		[Column("isDay6", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDay61")]
		public virtual int? isDay6
		{
			get
			{
				return this.isDay61;
			}
			set
			{
				this.isDay61 = value;
			}
		}
		
		private int? isDay71;
		[Column("isDay7", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDay71")]
		public virtual int? isDay7
		{
			get
			{
				return this.isDay71;
			}
			set
			{
				this.isDay71 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRatesTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaRatesTBL
	{
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private string RatePlanId1;
		[Column("RatePlanId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RatePlanId1")]
		public virtual string RatePlanId
		{
			get
			{
				return this.RatePlanId1;
			}
			set
			{
				this.RatePlanId1 = value;
			}
		}
		
		private DateTime date1;
		[Column("date", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("date1")]
		public virtual DateTime date
		{
			get
			{
				return this.date1;
			}
			set
			{
				this.date1 = value;
			}
		}
		
		private string price1;
		[Column("price", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("price1")]
		public virtual string price
		{
			get
			{
				return this.price1;
			}
			set
			{
				this.price1 = value;
			}
		}
		
		private int? minLos1;
		[Column("minLos", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minLos1")]
		public virtual int? minLos
		{
			get
			{
				return this.minLos1;
			}
			set
			{
				this.minLos1 = value;
			}
		}
		
		private int? maxLos1;
		[Column("maxLos", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("maxLos1")]
		public virtual int? maxLos
		{
			get
			{
				return this.maxLos1;
			}
			set
			{
				this.maxLos1 = value;
			}
		}
		
		private bool? isClosed1;
		[Column("isClosed", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("isClosed1")]
		public virtual bool? isClosed
		{
			get
			{
				return this.isClosed1;
			}
			set
			{
				this.isClosed1 = value;
			}
		}
		
		private bool? isClosedOnArrival1;
		[Column("isClosedOnArrival", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("isClosedOnArrival1")]
		public virtual bool? isClosedOnArrival
		{
			get
			{
				return this.isClosedOnArrival1;
			}
			set
			{
				this.isClosedOnArrival1 = value;
			}
		}
		
		private bool? isClosedOnDeparture1;
		[Column("isClosedOnDeparture", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("isClosedOnDeparture1")]
		public virtual bool? isClosedOnDeparture
		{
			get
			{
				return this.isClosedOnDeparture1;
			}
			set
			{
				this.isClosedOnDeparture1 = value;
			}
		}
		
		private string currency1;
		[Column("currency", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("currency1")]
		public virtual string currency
		{
			get
			{
				return this.currency1;
			}
			set
			{
				this.currency1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaAvailabilityTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaAvailabilityTBL
	{
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private DateTime date1;
		[Column("date", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("date1")]
		public virtual DateTime date
		{
			get
			{
				return this.date1;
			}
			set
			{
				this.date1 = value;
			}
		}
		
		private int? baseAllocation1;
		[Column("baseAllocation", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("baseAllocation1")]
		public virtual int? baseAllocation
		{
			get
			{
				return this.baseAllocation1;
			}
			set
			{
				this.baseAllocation1 = value;
			}
		}
		
		private int? flexibleAllocation1;
		[Column("flexibleAllocation", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("flexibleAllocation1")]
		public virtual int? flexibleAllocation
		{
			get
			{
				return this.flexibleAllocation1;
			}
			set
			{
				this.flexibleAllocation1 = value;
			}
		}
		
		private int? totalInventoryAvailable1;
		[Column("totalInventoryAvailable", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("totalInventoryAvailable1")]
		public virtual int? totalInventoryAvailable
		{
			get
			{
				return this.totalInventoryAvailable1;
			}
			set
			{
				this.totalInventoryAvailable1 = value;
			}
		}
		
		private int? totalInventorySold1;
		[Column("totalInventorySold", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("totalInventorySold1")]
		public virtual int? totalInventorySold
		{
			get
			{
				return this.totalInventorySold1;
			}
			set
			{
				this.totalInventorySold1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaEstateAllotmentChangeRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaEstateAllotmentChangeRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
		private int? Units1;
		[Column("Units", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("Units1")]
		public virtual int? Units
		{
			get
			{
				return this.Units1;
			}
			set
			{
				this.Units1 = value;
			}
		}
		
		private int? change1;
		[Column("change", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("change1")]
		public virtual int? change
		{
			get
			{
				return this.change1;
			}
			set
			{
				this.change1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaEstateRoomRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaEstateRoomRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaAssignedEstateRoomRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaAssignedEstateRoomRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string RoomTypeId1;
		[Column("RoomTypeId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("RoomTypeId1")]
		public virtual string RoomTypeId
		{
			get
			{
				return this.RoomTypeId1;
			}
			set
			{
				this.RoomTypeId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomAmenitiesValuesTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlExpediaRoomAmenitiesValuesTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidAmenity1;
		[Column("pidAmenity", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidAmenity1")]
		public virtual int? pidAmenity
		{
			get
			{
				return this.pidAmenity1;
			}
			set
			{
				this.pidAmenity1 = value;
			}
		}
		
		private int? valueStart1;
		[Column("valueStart", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("valueStart1")]
		public virtual int? valueStart
		{
			get
			{
				return this.valueStart1;
			}
			set
			{
				this.valueStart1 = value;
			}
		}
		
		private int? valueEnd1;
		[Column("valueEnd", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("valueEnd1")]
		public virtual int? valueEnd
		{
			get
			{
				return this.valueEnd1;
			}
			set
			{
				this.valueEnd1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomAmenitiesDetailCodeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlExpediaRoomAmenitiesDetailCodeTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidAmenity1;
		[Column("pidAmenity", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidAmenity1")]
		public virtual int? pidAmenity
		{
			get
			{
				return this.pidAmenity1;
			}
			set
			{
				this.pidAmenity1 = value;
			}
		}
		
		private string DetailCode1;
		[Column("DetailCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("DetailCode1")]
		public virtual string DetailCode
		{
			get
			{
				return this.DetailCode1;
			}
			set
			{
				this.DetailCode1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaPropertyTypeRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaPropertyTypeRL
	{
		private int pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCategory1")]
		public virtual int pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private string pidExpediaCategory1;
		[Column("pidExpediaCategory", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("pidExpediaCategory1")]
		public virtual string pidExpediaCategory
		{
			get
			{
				return this.pidExpediaCategory1;
			}
			set
			{
				this.pidExpediaCategory1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaLkRoomTypeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaLkRoomTypeTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaLKRoomAmenitiesTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlExpediaLKRoomAmenitiesTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string name1;
		[Column("name", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("name1")]
		public virtual string name
		{
			get
			{
				return this.name1;
			}
			set
			{
				this.name1 = value;
			}
		}
		
		private int? isDetailCodeRequired1;
		[Column("isDetailCodeRequired", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDetailCodeRequired1")]
		public virtual int? isDetailCodeRequired
		{
			get
			{
				return this.isDetailCodeRequired1;
			}
			set
			{
				this.isDetailCodeRequired1 = value;
			}
		}
		
		private int? refId1;
		[Column("refId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("refId1")]
		public virtual int? refId
		{
			get
			{
				return this.refId1;
			}
			set
			{
				this.refId1 = value;
			}
		}
		
		private int? pidDetailCode1;
		[Column("pidDetailCode", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidDetailCode1")]
		public virtual int? pidDetailCode
		{
			get
			{
				return this.pidDetailCode1;
			}
			set
			{
				this.pidDetailCode1 = value;
			}
		}
		
		private int? pidValue1;
		[Column("pidValue", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidValue1")]
		public virtual int? pidValue
		{
			get
			{
				return this.pidValue1;
			}
			set
			{
				this.pidValue1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaLkPropertyTypeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaLkPropertyTypeTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaLkBedsTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaLkBedsTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaBedsRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaBedsRL
	{
		private int pidFeature1;
		[Column("pidFeature", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidFeature1")]
		public virtual int pidFeature
		{
			get
			{
				return this.pidFeature1;
			}
			set
			{
				this.pidFeature1 = value;
			}
		}
		
		private string pidExpediaBed1;
		[Column("pidExpediaBed", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("pidExpediaBed1")]
		public virtual string pidExpediaBed
		{
			get
			{
				return this.pidExpediaBed1;
			}
			set
			{
				this.pidExpediaBed1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaAmenitiesDetailCodeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlExpediaAmenitiesDetailCodeTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidAmenity1;
		[Column("pidAmenity", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidAmenity1")]
		public virtual int? pidAmenity
		{
			get
			{
				return this.pidAmenity1;
			}
			set
			{
				this.pidAmenity1 = value;
			}
		}
		
		private string DetailCode1;
		[Column("DetailCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("DetailCode1")]
		public virtual string DetailCode
		{
			get
			{
				return this.DetailCode1;
			}
			set
			{
				this.DetailCode1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaRoomTypeRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlExpediaRoomTypeRL
	{
		private int pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCategory1")]
		public virtual int pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private string pidExpediaRoomCategory1;
		[Column("pidExpediaRoomCategory", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("pidExpediaRoomCategory1")]
		public virtual string pidExpediaRoomCategory
		{
			get
			{
				return this.pidExpediaRoomCategory1;
			}
			set
			{
				this.pidExpediaRoomCategory1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaLkAmenitiesTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlExpediaLkAmenitiesTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string name1;
		[Column("name", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("name1")]
		public virtual string name
		{
			get
			{
				return this.name1;
			}
			set
			{
				this.name1 = value;
			}
		}
		
		private int? isDetailCodeRequired1;
		[Column("isDetailCodeRequired", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDetailCodeRequired1")]
		public virtual int? isDetailCodeRequired
		{
			get
			{
				return this.isDetailCodeRequired1;
			}
			set
			{
				this.isDetailCodeRequired1 = value;
			}
		}
		
		private int? refId1;
		[Column("refId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("refId1")]
		public virtual int? refId
		{
			get
			{
				return this.refId1;
			}
			set
			{
				this.refId1 = value;
			}
		}
		
		private int? pidDetailCode1;
		[Column("pidDetailCode", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidDetailCode1")]
		public virtual int? pidDetailCode
		{
			get
			{
				return this.pidDetailCode1;
			}
			set
			{
				this.pidDetailCode1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlExpediaHotelTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlExpediaHotelTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int HotelId1;
		[Column("HotelId", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("HotelId1")]
		public virtual int HotelId
		{
			get
			{
				return this.HotelId1;
			}
			set
			{
				this.HotelId1 = value;
			}
		}
		
		private string name1;
		[Column("name", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("name1")]
		public virtual string name
		{
			get
			{
				return this.name1;
			}
			set
			{
				this.name1 = value;
			}
		}
		
		private string city1;
		[Column("city", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("city1")]
		public virtual string city
		{
			get
			{
				return this.city1;
			}
			set
			{
				this.city1 = value;
			}
		}
		
		private string username1;
		[Column("username", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("username1")]
		public virtual string username
		{
			get
			{
				return this.username1;
			}
			set
			{
				this.username1 = value;
			}
		}
		
		private string password1;
		[Column("password", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("password1")]
		public virtual string password
		{
			get
			{
				return this.password1;
			}
			set
			{
				this.password1 = value;
			}
		}
		
		private int isDemo1;
		[Column("isDemo", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isDemo1")]
		public virtual int isDemo
		{
			get
			{
				return this.isDemo1;
			}
			set
			{
				this.isDemo1 = value;
			}
		}
		
		private int isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private int? pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int? pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string status1;
		[Column("status", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 300, Scale = 0, SqlType = "nvarchar")]
		[Storage("status1")]
		public virtual string status
		{
			get
			{
				return this.status1;
			}
			set
			{
				this.status1 = value;
			}
		}
		
		private string message1;
		[Column("message", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("message1")]
		public virtual string message
		{
			get
			{
				return this.message1;
			}
			set
			{
				this.message1 = value;
			}
		}
		
	}
}
#pragma warning restore 1591

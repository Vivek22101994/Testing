#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using ModRental;

namespace ModRental	
{
	[NamingSettings(RemoveCamelCase = true, RemoveLeadingUnderscores = true, ResolveReservedWords = true, UseDelimitedSQL = true, WordBreak = "_")]
	public partial class DCmodRental : OpenAccessContext, IDCmodRentalUnitOfWork
	{
		private static string connectionStringName = @"ModRentalDBConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = AttributesMetadataSource.FromContext(typeof(DCmodRental));
		
		public DCmodRental()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public DCmodRental(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCmodRental(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public DCmodRental(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCmodRental(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<dbRntProblemTBL> dbRntProblemTBLs 
		{
			get
			{
				return this.GetAll<dbRntProblemTBL>();
			}
		}
		
		public IQueryable<dbRntDiscountTypeTBL> dbRntDiscountTypeTBLs 
		{
			get
			{
				return this.GetAll<dbRntDiscountTypeTBL>();
			}
		}
		
		public IQueryable<dbRntAgentMonthlyReportTBL> dbRntAgentMonthlyReportTBLs 
		{
			get
			{
				return this.GetAll<dbRntAgentMonthlyReportTBL>();
			}
		}
		
		public IQueryable<dbRntEstateLOG> dbRntEstateLOGs 
		{
			get
			{
				return this.GetAll<dbRntEstateLOG>();
			}
		}
		
		public IQueryable<dbRntExtrasSubCategoryTB> dbRntExtrasSubCategoryTBs 
		{
			get
			{
				return this.GetAll<dbRntExtrasSubCategoryTB>();
			}
		}
		
		public IQueryable<dbRntExtrasSubCategoryLN> dbRntExtrasSubCategoryLNs 
		{
			get
			{
				return this.GetAll<dbRntExtrasSubCategoryLN>();
			}
		}
		
		public IQueryable<dbRntExtrasPackTB> dbRntExtrasPackTBs 
		{
			get
			{
				return this.GetAll<dbRntExtrasPackTB>();
			}
		}
		
		public IQueryable<dbRntExtrasPackRL> dbRntExtrasPackRLs 
		{
			get
			{
				return this.GetAll<dbRntExtrasPackRL>();
			}
		}
		
		public IQueryable<dbRntExtrasPackLN> dbRntExtrasPackLNs 
		{
			get
			{
				return this.GetAll<dbRntExtrasPackLN>();
			}
		}
		
		public IQueryable<dbRntExtrasMediaRL> dbRntExtrasMediaRLs 
		{
			get
			{
				return this.GetAll<dbRntExtrasMediaRL>();
			}
		}
		
		public IQueryable<dbRntExtrasCategoryTB> dbRntExtrasCategoryTBs 
		{
			get
			{
				return this.GetAll<dbRntExtrasCategoryTB>();
			}
		}
		
		public IQueryable<dbRntExtrasCategoryLN> dbRntExtrasCategoryLNs 
		{
			get
			{
				return this.GetAll<dbRntExtrasCategoryLN>();
			}
		}
		
		public IQueryable<dbRntEstateExtrasRL> dbRntEstateExtrasRLs 
		{
			get
			{
				return this.GetAll<dbRntEstateExtrasRL>();
			}
		}
		
		public IQueryable<dbRntExtrasMacroCategoryTB> dbRntExtrasMacroCategoryTBs 
		{
			get
			{
				return this.GetAll<dbRntExtrasMacroCategoryTB>();
			}
		}
		
		public IQueryable<dbRntExtrasMacroCategoryLN> dbRntExtrasMacroCategoryLNs 
		{
			get
			{
				return this.GetAll<dbRntExtrasMacroCategoryLN>();
			}
		}
		
		public IQueryable<dbRntEstateExtrasLN> dbRntEstateExtrasLNs 
		{
			get
			{
				return this.GetAll<dbRntEstateExtrasLN>();
			}
		}
		
		public IQueryable<dbRntEstateExtrasPeriodTBL> dbRntEstateExtrasPeriodTBLs 
		{
			get
			{
				return this.GetAll<dbRntEstateExtrasPeriodTBL>();
			}
		}
		
		public IQueryable<dbRntExtraPriceTypesTB> dbRntExtraPriceTypesTBs 
		{
			get
			{
				return this.GetAll<dbRntExtraPriceTypesTB>();
			}
		}
		
		public IQueryable<dbRntExtraPriceTypesLN> dbRntExtraPriceTypesLNs 
		{
			get
			{
				return this.GetAll<dbRntExtraPriceTypesLN>();
			}
		}
		
		public IQueryable<dbRntDiscountPromoCodeTBL> dbRntDiscountPromoCodeTBLs 
		{
			get
			{
				return this.GetAll<dbRntDiscountPromoCodeTBL>();
			}
		}
		
		public IQueryable<dbRntReservationExtrasTMP> dbRntReservationExtrasTMPs 
		{
			get
			{
				return this.GetAll<dbRntReservationExtrasTMP>();
			}
		}
		
		public IQueryable<dbRntExtraOwnerTBL> dbRntExtraOwnerTBLs 
		{
			get
			{
				return this.GetAll<dbRntExtraOwnerTBL>();
			}
		}
		
		public IQueryable<dbRntEstateExtrasTB> dbRntEstateExtrasTBs 
		{
			get
			{
				return this.GetAll<dbRntEstateExtrasTB>();
			}
		}
		
		public IQueryable<dbRntExtrasPriceTBL> dbRntExtrasPriceTBLs 
		{
			get
			{
				return this.GetAll<dbRntExtrasPriceTBL>();
			}
		}
		
		public IQueryable<dbRntExtraOwnerLN> dbRntExtraOwnerLNs 
		{
			get
			{
				return this.GetAll<dbRntExtraOwnerLN>();
			}
		}
		
		public IQueryable<dbRntExtrasRequest> dbRntExtrasRequests 
		{
			get
			{
				return this.GetAll<dbRntExtrasRequest>();
			}
		}
		
		public IQueryable<dbRntEstateExtrasVIEW> dbRntEstateExtrasVIEWs 
		{
			get
			{
				return this.GetAll<dbRntEstateExtrasVIEW>();
			}
		}
		
		public IQueryable<dbRntReservationExtras> dbRntReservationExtras 
		{
			get
			{
				return this.GetAll<dbRntReservationExtras>();
			}
		}
		
		public IQueryable<dbRntSeasonGroupTBL> dbRntSeasonGroupTBLs 
		{
			get
			{
				return this.GetAll<dbRntSeasonGroupTBL>();
			}
		}
		
		public IQueryable<dbRntSeasonDatesTBL> dbRntSeasonDatesTBLs 
		{
			get
			{
				return this.GetAll<dbRntSeasonDatesTBL>();
			}
		}
		
		public IQueryable<dbRntChannelManagerTBL> dbRntChannelManagerTBLs 
		{
			get
			{
				return this.GetAll<dbRntChannelManagerTBL>();
			}
		}
		
		public IQueryable<dbRntChannelManagerEstateRL> dbRntChannelManagerEstateRLs 
		{
			get
			{
				return this.GetAll<dbRntChannelManagerEstateRL>();
			}
		}
		
		public IQueryable<dbRntAgentContractPricesTBL> dbRntAgentContractPricesTBLs 
		{
			get
			{
				return this.GetAll<dbRntAgentContractPricesTBL>();
			}
		}
		
		public IQueryable<dbRntEstateAgentContractRL> dbRntEstateAgentContractRLs 
		{
			get
			{
				return this.GetAll<dbRntEstateAgentContractRL>();
			}
		}
		
		public IQueryable<dbRntReservationLOG> dbRntReservationLOGs 
		{
			get
			{
				return this.GetAll<dbRntReservationLOG>();
			}
		}
		
		public IQueryable<dbRntBcomRequestLOG> dbRntBcomRequestLOGs 
		{
			get
			{
				return this.GetAll<dbRntBcomRequestLOG>();
			}
		}
		
		public IQueryable<dbRntBcomEstateRatesRL> dbRntBcomEstateRatesRLs 
		{
			get
			{
				return this.GetAll<dbRntBcomEstateRatesRL>();
			}
		}
		
		public IQueryable<dbRntBcomEstateRateChangesRL> dbRntBcomEstateRateChangesRLs 
		{
			get
			{
				return this.GetAll<dbRntBcomEstateRateChangesRL>();
			}
		}
		
		public IQueryable<dbRntBcomEstateClosedDatesRL> dbRntBcomEstateClosedDatesRLs 
		{
			get
			{
				return this.GetAll<dbRntBcomEstateClosedDatesRL>();
			}
		}
		
		public IQueryable<dbRntIcalImportLOG> dbRntIcalImportLOGs 
		{
			get
			{
				return this.GetAll<dbRntIcalImportLOG>();
			}
		}
		
		public IQueryable<dbRntIcalImportErrorLOG> dbRntIcalImportErrorLOGs 
		{
			get
			{
				return this.GetAll<dbRntIcalImportErrorLOG>();
			}
		}
		
		public IQueryable<dbRntChnlHolidayRequestLOG> dbRntChnlHolidayRequestLOGs 
		{
			get
			{
				return this.GetAll<dbRntChnlHolidayRequestLOG>();
			}
		}
		
		public IQueryable<dbRntChnlHolidayOwnerTBL> dbRntChnlHolidayOwnerTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlHolidayOwnerTBL>();
			}
		}
		
		public IQueryable<dbRntChnlHolidayEstateTB> dbRntChnlHolidayEstateTBs 
		{
			get
			{
				return this.GetAll<dbRntChnlHolidayEstateTB>();
			}
		}
		
		public IQueryable<dbRntChnlHolidayEstateRateChangesRL> dbRntChnlHolidayEstateRateChangesRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlHolidayEstateRateChangesRL>();
			}
		}
		
		public IQueryable<dbRntChnlHolidayEstateClosedDatesRL> dbRntChnlHolidayEstateClosedDatesRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlHolidayEstateClosedDatesRL>();
			}
		}
		
		public IQueryable<dbRntAgentPriceChangeLimitTBL> dbRntAgentPriceChangeLimitTBLs 
		{
			get
			{
				return this.GetAll<dbRntAgentPriceChangeLimitTBL>();
			}
		}
		
		public IQueryable<dbRntReservationLastUpdatedLOG> dbRntReservationLastUpdatedLOGs 
		{
			get
			{
				return this.GetAll<dbRntReservationLastUpdatedLOG>();
			}
		}
		
		public IQueryable<dbRntEstateMediaTAG> dbRntEstateMediaTAGs 
		{
			get
			{
				return this.GetAll<dbRntEstateMediaTAG>();
			}
		}
		
		public IQueryable<dbRntBcomHotelTBL> dbRntBcomHotelTBLs 
		{
			get
			{
				return this.GetAll<dbRntBcomHotelTBL>();
			}
		}
		
		public IQueryable<dbRntAgentEstateRL> dbRntAgentEstateRLs 
		{
			get
			{
				return this.GetAll<dbRntAgentEstateRL>();
			}
		}
		
		public IQueryable<dbRntAgentWLPaymentRL> dbRntAgentWLPaymentRLs 
		{
			get
			{
				return this.GetAll<dbRntAgentWLPaymentRL>();
			}
		}
		
		public IQueryable<dbRntEstateInternsTB> dbRntEstateInternsTBs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsTB>();
			}
		}
		
		public IQueryable<dbRntEstateInternsSubTypeTB> dbRntEstateInternsSubTypeTBs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsSubTypeTB>();
			}
		}
		
		public IQueryable<dbRntEstateInternsFeatureTB> dbRntEstateInternsFeatureTBs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsFeatureTB>();
			}
		}
		
		public IQueryable<dbRntEstateInternsFeatureRL> dbRntEstateInternsFeatureRLs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsFeatureRL>();
			}
		}
		
		public IQueryable<dbRntEstateInternsSubTypeVIEW> dbRntEstateInternsSubTypeVIEWs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsSubTypeVIEW>();
			}
		}
		
		public IQueryable<dbRntEstateInternsSubTypeLN> dbRntEstateInternsSubTypeLNs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsSubTypeLN>();
			}
		}
		
		public IQueryable<dbRntEstateInternsLN> dbRntEstateInternsLNs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsLN>();
			}
		}
		
		public IQueryable<dbRntEstateInternsVIEW> dbRntEstateInternsVIEWs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsVIEW>();
			}
		}
		
		public IQueryable<dbRntEstateInternsFeatureVIEW> dbRntEstateInternsFeatureVIEWs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsFeatureVIEW>();
			}
		}
		
		public IQueryable<dbRntEstateInternsFeatureLN> dbRntEstateInternsFeatureLNs 
		{
			get
			{
				return this.GetAll<dbRntEstateInternsFeatureLN>();
			}
		}
		
		public IQueryable<dbRntEstateCommentsTBL> dbRntEstateCommentsTBLs 
		{
			get
			{
				return this.GetAll<dbRntEstateCommentsTBL>();
			}
		}
		
		public IQueryable<dbRntReservationTMP> dbRntReservationTMPs 
		{
			get
			{
				return this.GetAll<dbRntReservationTMP>();
			}
		}
		
		public IQueryable<dbRntAgentContractTBL> dbRntAgentContractTBLs 
		{
			get
			{
				return this.GetAll<dbRntAgentContractTBL>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbRequestLOG> dbRntChnlAirbnbRequestLOGs 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbRequestLOG>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbMediaTBL> dbRntChnlAirbnbMediaTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbMediaTBL>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbLkPropertyTypeTBL> dbRntChnlAirbnbLkPropertyTypeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbLkPropertyTypeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbLkAmenityTBL> dbRntChnlAirbnbLkAmenityTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbLkAmenityTBL>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbLkAmenityCatTBL> dbRntChnlAirbnbLkAmenityCatTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbLkAmenityCatTBL>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbEstateTBL> dbRntChnlAirbnbEstateTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbEstateTBL>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbEstateSyncRL> dbRntChnlAirbnbEstateSyncRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbEstateSyncRL>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbEstateStatusRL> dbRntChnlAirbnbEstateStatusRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbEstateStatusRL>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbAuthenticationCode> dbRntChnlAirbnbAuthenticationCodes 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbAuthenticationCode>();
			}
		}
		
		public IQueryable<dbRntChnlAirbnbAccessToken> dbRntChnlAirbnbAccessTokens 
		{
			get
			{
				return this.GetAll<dbRntChnlAirbnbAccessToken>();
			}
		}
		
		public IQueryable<dbRntAgentTBL> dbRntAgentTBLs 
		{
			get
			{
				return this.GetAll<dbRntAgentTBL>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "mssql";
			backend.ProviderName = "System.Data.SqlClient";
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of DCmodRental.
		/// </summary>
		/// <param name="config">The BackendConfiguration of DCmodRental.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IDCmodRentalUnitOfWork : IUnitOfWork
	{
		IQueryable<dbRntProblemTBL> dbRntProblemTBLs
		{
			get;
		}
		IQueryable<dbRntDiscountTypeTBL> dbRntDiscountTypeTBLs
		{
			get;
		}
		IQueryable<dbRntAgentMonthlyReportTBL> dbRntAgentMonthlyReportTBLs
		{
			get;
		}
		IQueryable<dbRntEstateLOG> dbRntEstateLOGs
		{
			get;
		}
		IQueryable<dbRntExtrasSubCategoryTB> dbRntExtrasSubCategoryTBs
		{
			get;
		}
		IQueryable<dbRntExtrasSubCategoryLN> dbRntExtrasSubCategoryLNs
		{
			get;
		}
		IQueryable<dbRntExtrasPackTB> dbRntExtrasPackTBs
		{
			get;
		}
		IQueryable<dbRntExtrasPackRL> dbRntExtrasPackRLs
		{
			get;
		}
		IQueryable<dbRntExtrasPackLN> dbRntExtrasPackLNs
		{
			get;
		}
		IQueryable<dbRntExtrasMediaRL> dbRntExtrasMediaRLs
		{
			get;
		}
		IQueryable<dbRntExtrasCategoryTB> dbRntExtrasCategoryTBs
		{
			get;
		}
		IQueryable<dbRntExtrasCategoryLN> dbRntExtrasCategoryLNs
		{
			get;
		}
		IQueryable<dbRntEstateExtrasRL> dbRntEstateExtrasRLs
		{
			get;
		}
		IQueryable<dbRntExtrasMacroCategoryTB> dbRntExtrasMacroCategoryTBs
		{
			get;
		}
		IQueryable<dbRntExtrasMacroCategoryLN> dbRntExtrasMacroCategoryLNs
		{
			get;
		}
		IQueryable<dbRntEstateExtrasLN> dbRntEstateExtrasLNs
		{
			get;
		}
		IQueryable<dbRntEstateExtrasPeriodTBL> dbRntEstateExtrasPeriodTBLs
		{
			get;
		}
		IQueryable<dbRntExtraPriceTypesTB> dbRntExtraPriceTypesTBs
		{
			get;
		}
		IQueryable<dbRntExtraPriceTypesLN> dbRntExtraPriceTypesLNs
		{
			get;
		}
		IQueryable<dbRntDiscountPromoCodeTBL> dbRntDiscountPromoCodeTBLs
		{
			get;
		}
		IQueryable<dbRntReservationExtrasTMP> dbRntReservationExtrasTMPs
		{
			get;
		}
		IQueryable<dbRntExtraOwnerTBL> dbRntExtraOwnerTBLs
		{
			get;
		}
		IQueryable<dbRntEstateExtrasTB> dbRntEstateExtrasTBs
		{
			get;
		}
		IQueryable<dbRntExtrasPriceTBL> dbRntExtrasPriceTBLs
		{
			get;
		}
		IQueryable<dbRntExtraOwnerLN> dbRntExtraOwnerLNs
		{
			get;
		}
		IQueryable<dbRntExtrasRequest> dbRntExtrasRequests
		{
			get;
		}
		IQueryable<dbRntEstateExtrasVIEW> dbRntEstateExtrasVIEWs
		{
			get;
		}
		IQueryable<dbRntReservationExtras> dbRntReservationExtras
		{
			get;
		}
		IQueryable<dbRntSeasonGroupTBL> dbRntSeasonGroupTBLs
		{
			get;
		}
		IQueryable<dbRntSeasonDatesTBL> dbRntSeasonDatesTBLs
		{
			get;
		}
		IQueryable<dbRntChannelManagerTBL> dbRntChannelManagerTBLs
		{
			get;
		}
		IQueryable<dbRntChannelManagerEstateRL> dbRntChannelManagerEstateRLs
		{
			get;
		}
		IQueryable<dbRntAgentContractPricesTBL> dbRntAgentContractPricesTBLs
		{
			get;
		}
		IQueryable<dbRntEstateAgentContractRL> dbRntEstateAgentContractRLs
		{
			get;
		}
		IQueryable<dbRntReservationLOG> dbRntReservationLOGs
		{
			get;
		}
		IQueryable<dbRntBcomRequestLOG> dbRntBcomRequestLOGs
		{
			get;
		}
		IQueryable<dbRntBcomEstateRatesRL> dbRntBcomEstateRatesRLs
		{
			get;
		}
		IQueryable<dbRntBcomEstateRateChangesRL> dbRntBcomEstateRateChangesRLs
		{
			get;
		}
		IQueryable<dbRntBcomEstateClosedDatesRL> dbRntBcomEstateClosedDatesRLs
		{
			get;
		}
		IQueryable<dbRntIcalImportLOG> dbRntIcalImportLOGs
		{
			get;
		}
		IQueryable<dbRntIcalImportErrorLOG> dbRntIcalImportErrorLOGs
		{
			get;
		}
		IQueryable<dbRntChnlHolidayRequestLOG> dbRntChnlHolidayRequestLOGs
		{
			get;
		}
		IQueryable<dbRntChnlHolidayOwnerTBL> dbRntChnlHolidayOwnerTBLs
		{
			get;
		}
		IQueryable<dbRntChnlHolidayEstateTB> dbRntChnlHolidayEstateTBs
		{
			get;
		}
		IQueryable<dbRntChnlHolidayEstateRateChangesRL> dbRntChnlHolidayEstateRateChangesRLs
		{
			get;
		}
		IQueryable<dbRntChnlHolidayEstateClosedDatesRL> dbRntChnlHolidayEstateClosedDatesRLs
		{
			get;
		}
		IQueryable<dbRntAgentPriceChangeLimitTBL> dbRntAgentPriceChangeLimitTBLs
		{
			get;
		}
		IQueryable<dbRntReservationLastUpdatedLOG> dbRntReservationLastUpdatedLOGs
		{
			get;
		}
		IQueryable<dbRntEstateMediaTAG> dbRntEstateMediaTAGs
		{
			get;
		}
		IQueryable<dbRntBcomHotelTBL> dbRntBcomHotelTBLs
		{
			get;
		}
		IQueryable<dbRntAgentEstateRL> dbRntAgentEstateRLs
		{
			get;
		}
		IQueryable<dbRntAgentWLPaymentRL> dbRntAgentWLPaymentRLs
		{
			get;
		}
		IQueryable<dbRntEstateInternsTB> dbRntEstateInternsTBs
		{
			get;
		}
		IQueryable<dbRntEstateInternsSubTypeTB> dbRntEstateInternsSubTypeTBs
		{
			get;
		}
		IQueryable<dbRntEstateInternsFeatureTB> dbRntEstateInternsFeatureTBs
		{
			get;
		}
		IQueryable<dbRntEstateInternsFeatureRL> dbRntEstateInternsFeatureRLs
		{
			get;
		}
		IQueryable<dbRntEstateInternsSubTypeVIEW> dbRntEstateInternsSubTypeVIEWs
		{
			get;
		}
		IQueryable<dbRntEstateInternsSubTypeLN> dbRntEstateInternsSubTypeLNs
		{
			get;
		}
		IQueryable<dbRntEstateInternsLN> dbRntEstateInternsLNs
		{
			get;
		}
		IQueryable<dbRntEstateInternsVIEW> dbRntEstateInternsVIEWs
		{
			get;
		}
		IQueryable<dbRntEstateInternsFeatureVIEW> dbRntEstateInternsFeatureVIEWs
		{
			get;
		}
		IQueryable<dbRntEstateInternsFeatureLN> dbRntEstateInternsFeatureLNs
		{
			get;
		}
		IQueryable<dbRntEstateCommentsTBL> dbRntEstateCommentsTBLs
		{
			get;
		}
		IQueryable<dbRntReservationTMP> dbRntReservationTMPs
		{
			get;
		}
		IQueryable<dbRntAgentContractTBL> dbRntAgentContractTBLs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbRequestLOG> dbRntChnlAirbnbRequestLOGs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbMediaTBL> dbRntChnlAirbnbMediaTBLs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbLkPropertyTypeTBL> dbRntChnlAirbnbLkPropertyTypeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbLkAmenityTBL> dbRntChnlAirbnbLkAmenityTBLs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbLkAmenityCatTBL> dbRntChnlAirbnbLkAmenityCatTBLs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbEstateTBL> dbRntChnlAirbnbEstateTBLs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbEstateSyncRL> dbRntChnlAirbnbEstateSyncRLs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbEstateStatusRL> dbRntChnlAirbnbEstateStatusRLs
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbAuthenticationCode> dbRntChnlAirbnbAuthenticationCodes
		{
			get;
		}
		IQueryable<dbRntChnlAirbnbAccessToken> dbRntChnlAirbnbAccessTokens
		{
			get;
		}
		IQueryable<dbRntAgentTBL> dbRntAgentTBLs
		{
			get;
		}
	}
}
namespace ModRental	
{
	[Table("RntProblemTBL")]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntProblemTBL
	{
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? sequence1;
		[Column("sequence", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("sequence1")]
		public virtual int? sequence
		{
			get
			{
				return this.sequence1;
			}
			set
			{
				this.sequence1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntDiscountTypeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntDiscountTypeTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private decimal? fase9_discount1;
		[Column("fase9_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase9_discount1")]
		public virtual decimal? fase9_discount
		{
			get
			{
				return this.fase9_discount1;
			}
			set
			{
				this.fase9_discount1 = value;
			}
		}
		
		private decimal? fase8_discount1;
		[Column("fase8_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase8_discount1")]
		public virtual decimal? fase8_discount
		{
			get
			{
				return this.fase8_discount1;
			}
			set
			{
				this.fase8_discount1 = value;
			}
		}
		
		private decimal? fase7_discount1;
		[Column("fase7_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase7_discount1")]
		public virtual decimal? fase7_discount
		{
			get
			{
				return this.fase7_discount1;
			}
			set
			{
				this.fase7_discount1 = value;
			}
		}
		
		private decimal? fase6_discount1;
		[Column("fase6_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase6_discount1")]
		public virtual decimal? fase6_discount
		{
			get
			{
				return this.fase6_discount1;
			}
			set
			{
				this.fase6_discount1 = value;
			}
		}
		
		private decimal? fase5_discount1;
		[Column("fase5_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase5_discount1")]
		public virtual decimal? fase5_discount
		{
			get
			{
				return this.fase5_discount1;
			}
			set
			{
				this.fase5_discount1 = value;
			}
		}
		
		private decimal? fase4_discount1;
		[Column("fase4_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase4_discount1")]
		public virtual decimal? fase4_discount
		{
			get
			{
				return this.fase4_discount1;
			}
			set
			{
				this.fase4_discount1 = value;
			}
		}
		
		private decimal? fase3_discount1;
		[Column("fase3_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase3_discount1")]
		public virtual decimal? fase3_discount
		{
			get
			{
				return this.fase3_discount1;
			}
			set
			{
				this.fase3_discount1 = value;
			}
		}
		
		private decimal? fase2_discount1;
		[Column("fase2_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase2_discount1")]
		public virtual decimal? fase2_discount
		{
			get
			{
				return this.fase2_discount1;
			}
			set
			{
				this.fase2_discount1 = value;
			}
		}
		
		private decimal? fase10_discount1;
		[Column("fase10_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase10_discount1")]
		public virtual decimal? fase10_discount
		{
			get
			{
				return this.fase10_discount1;
			}
			set
			{
				this.fase10_discount1 = value;
			}
		}
		
		private decimal? fase1_discount1;
		[Column("fase1_discount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("fase1_discount1")]
		public virtual decimal? fase1_discount
		{
			get
			{
				return this.fase1_discount1;
			}
			set
			{
				this.fase1_discount1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private int? fase9_start1;
		[Column("fase9_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase9_start1")]
		public virtual int? fase9_start
		{
			get
			{
				return this.fase9_start1;
			}
			set
			{
				this.fase9_start1 = value;
			}
		}
		
		private int? fase9_end1;
		[Column("fase9_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase9_end1")]
		public virtual int? fase9_end
		{
			get
			{
				return this.fase9_end1;
			}
			set
			{
				this.fase9_end1 = value;
			}
		}
		
		private int? fase8_start1;
		[Column("fase8_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase8_start1")]
		public virtual int? fase8_start
		{
			get
			{
				return this.fase8_start1;
			}
			set
			{
				this.fase8_start1 = value;
			}
		}
		
		private int? fase8_end1;
		[Column("fase8_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase8_end1")]
		public virtual int? fase8_end
		{
			get
			{
				return this.fase8_end1;
			}
			set
			{
				this.fase8_end1 = value;
			}
		}
		
		private int? fase7_start1;
		[Column("fase7_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase7_start1")]
		public virtual int? fase7_start
		{
			get
			{
				return this.fase7_start1;
			}
			set
			{
				this.fase7_start1 = value;
			}
		}
		
		private int? fase7_end1;
		[Column("fase7_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase7_end1")]
		public virtual int? fase7_end
		{
			get
			{
				return this.fase7_end1;
			}
			set
			{
				this.fase7_end1 = value;
			}
		}
		
		private int? fase6_start1;
		[Column("fase6_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase6_start1")]
		public virtual int? fase6_start
		{
			get
			{
				return this.fase6_start1;
			}
			set
			{
				this.fase6_start1 = value;
			}
		}
		
		private int? fase6_end1;
		[Column("fase6_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase6_end1")]
		public virtual int? fase6_end
		{
			get
			{
				return this.fase6_end1;
			}
			set
			{
				this.fase6_end1 = value;
			}
		}
		
		private int? fase5_start1;
		[Column("fase5_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase5_start1")]
		public virtual int? fase5_start
		{
			get
			{
				return this.fase5_start1;
			}
			set
			{
				this.fase5_start1 = value;
			}
		}
		
		private int? fase5_end1;
		[Column("fase5_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase5_end1")]
		public virtual int? fase5_end
		{
			get
			{
				return this.fase5_end1;
			}
			set
			{
				this.fase5_end1 = value;
			}
		}
		
		private int? fase4_start1;
		[Column("fase4_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase4_start1")]
		public virtual int? fase4_start
		{
			get
			{
				return this.fase4_start1;
			}
			set
			{
				this.fase4_start1 = value;
			}
		}
		
		private int? fase4_end1;
		[Column("fase4_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase4_end1")]
		public virtual int? fase4_end
		{
			get
			{
				return this.fase4_end1;
			}
			set
			{
				this.fase4_end1 = value;
			}
		}
		
		private int? fase3_start1;
		[Column("fase3_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase3_start1")]
		public virtual int? fase3_start
		{
			get
			{
				return this.fase3_start1;
			}
			set
			{
				this.fase3_start1 = value;
			}
		}
		
		private int? fase3_end1;
		[Column("fase3_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase3_end1")]
		public virtual int? fase3_end
		{
			get
			{
				return this.fase3_end1;
			}
			set
			{
				this.fase3_end1 = value;
			}
		}
		
		private int? fase2_start1;
		[Column("fase2_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase2_start1")]
		public virtual int? fase2_start
		{
			get
			{
				return this.fase2_start1;
			}
			set
			{
				this.fase2_start1 = value;
			}
		}
		
		private int? fase2_end1;
		[Column("fase2_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase2_end1")]
		public virtual int? fase2_end
		{
			get
			{
				return this.fase2_end1;
			}
			set
			{
				this.fase2_end1 = value;
			}
		}
		
		private int? fase10_start1;
		[Column("fase10_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase10_start1")]
		public virtual int? fase10_start
		{
			get
			{
				return this.fase10_start1;
			}
			set
			{
				this.fase10_start1 = value;
			}
		}
		
		private int? fase10_end1;
		[Column("fase10_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase10_end1")]
		public virtual int? fase10_end
		{
			get
			{
				return this.fase10_end1;
			}
			set
			{
				this.fase10_end1 = value;
			}
		}
		
		private int? fase1_start1;
		[Column("fase1_start", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase1_start1")]
		public virtual int? fase1_start
		{
			get
			{
				return this.fase1_start1;
			}
			set
			{
				this.fase1_start1 = value;
			}
		}
		
		private int? fase1_end1;
		[Column("fase1_end", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("fase1_end1")]
		public virtual int? fase1_end
		{
			get
			{
				return this.fase1_end1;
			}
			set
			{
				this.fase1_end1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntAgentMonthlyReportTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntAgentMonthlyReportTBL
	{
		private int reportYear1;
		[Column("reportYear", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("reportYear1")]
		public virtual int reportYear
		{
			get
			{
				return this.reportYear1;
			}
			set
			{
				this.reportYear1 = value;
			}
		}
		
		private int reportMonth1;
		[Column("reportMonth", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("reportMonth1")]
		public virtual int reportMonth
		{
			get
			{
				return this.reportMonth1;
			}
			set
			{
				this.reportMonth1 = value;
			}
		}
		
		private DateTime? reportClosedDate1;
		[Column("reportClosedDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("reportClosedDate1")]
		public virtual DateTime? reportClosedDate
		{
			get
			{
				return this.reportClosedDate1;
			}
			set
			{
				this.reportClosedDate1 = value;
			}
		}
		
		private long pidAgent1;
		[Column("pidAgent", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidAgent1")]
		public virtual long pidAgent
		{
			get
			{
				return this.pidAgent1;
			}
			set
			{
				this.pidAgent1 = value;
			}
		}
		
		private string notesInner1;
		[Column("notesInner", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesInner1")]
		public virtual string notesInner
		{
			get
			{
				return this.notesInner1;
			}
			set
			{
				this.notesInner1 = value;
			}
		}
		
		private string notesClient1;
		[Column("notesClient", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesClient1")]
		public virtual string notesClient
		{
			get
			{
				return this.notesClient1;
			}
			set
			{
				this.notesClient1 = value;
			}
		}
		
		private int? countReservationsTotal1;
		[Column("countReservationsTotal", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("countReservationsTotal1")]
		public virtual int? countReservationsTotal
		{
			get
			{
				return this.countReservationsTotal1;
			}
			set
			{
				this.countReservationsTotal1 = value;
			}
		}
		
		private decimal? cashToPayBack1;
		[Column("cashToPayBack", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashToPayBack1")]
		public virtual decimal? cashToPayBack
		{
			get
			{
				return this.cashToPayBack1;
			}
			set
			{
				this.cashToPayBack1 = value;
			}
		}
		
		private decimal? cashReservationsTotal1;
		[Column("cashReservationsTotal", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashReservationsTotal1")]
		public virtual decimal? cashReservationsTotal
		{
			get
			{
				return this.cashReservationsTotal1;
			}
			set
			{
				this.cashReservationsTotal1 = value;
			}
		}
		
		private decimal? cashDiscountNotPayed1;
		[Column("cashDiscountNotPayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashDiscountNotPayed1")]
		public virtual decimal? cashDiscountNotPayed
		{
			get
			{
				return this.cashDiscountNotPayed1;
			}
			set
			{
				this.cashDiscountNotPayed1 = value;
			}
		}
		
		private decimal? cashCommissionsTotal1;
		[Column("cashCommissionsTotal", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashCommissionsTotal1")]
		public virtual decimal? cashCommissionsTotal
		{
			get
			{
				return this.cashCommissionsTotal1;
			}
			set
			{
				this.cashCommissionsTotal1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string reportClosedUserNameFull1;
		[Column("reportClosedUserNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("reportClosedUserNameFull1")]
		public virtual string reportClosedUserNameFull
		{
			get
			{
				return this.reportClosedUserNameFull1;
			}
			set
			{
				this.reportClosedUserNameFull1 = value;
			}
		}
		
		private int? reportClosedUserID1;
		[Column("reportClosedUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("reportClosedUserID1")]
		public virtual int? reportClosedUserID
		{
			get
			{
				return this.reportClosedUserID1;
			}
			set
			{
				this.reportClosedUserID1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntEstateLOG
	{
		private string valueBefore1;
		[Column("valueBefore", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("valueBefore1")]
		public virtual string valueBefore
		{
			get
			{
				return this.valueBefore1;
			}
			set
			{
				this.valueBefore1 = value;
			}
		}
		
		private string valueAfter1;
		[Column("valueAfter", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("valueAfter1")]
		public virtual string valueAfter
		{
			get
			{
				return this.valueAfter1;
			}
			set
			{
				this.valueAfter1 = value;
			}
		}
		
		private string userName1;
		[Column("userName", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("userName1")]
		public virtual string userName
		{
			get
			{
				return this.userName1;
			}
			set
			{
				this.userName1 = value;
			}
		}
		
		private int? userID1;
		[Column("userID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("userID1")]
		public virtual int? userID
		{
			get
			{
				return this.userID1;
			}
			set
			{
				this.userID1 = value;
			}
		}
		
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private DateTime? logDate1;
		[Column("logDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDate1")]
		public virtual DateTime? logDate
		{
			get
			{
				return this.logDate1;
			}
			set
			{
				this.logDate1 = value;
			}
		}
		
		private int? estateID1;
		[Column("estateID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("estateID1")]
		public virtual int? estateID
		{
			get
			{
				return this.estateID1;
			}
			set
			{
				this.estateID1 = value;
			}
		}
		
		private string estateCode1;
		[Column("estateCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("estateCode1")]
		public virtual string estateCode
		{
			get
			{
				return this.estateCode1;
			}
			set
			{
				this.estateCode1 = value;
			}
		}
		
		private string changeField1;
		[Column("changeField", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("changeField1")]
		public virtual string changeField
		{
			get
			{
				return this.changeField1;
			}
			set
			{
				this.changeField1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasSubCategoryTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtrasSubCategoryTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCategory1")]
		public virtual int? pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private int isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasSubCategoryLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntExtrasSubCategoryLN
	{
		private int pidSubCategory1;
		[Column("pidSubCategory", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidSubCategory1")]
		public virtual int pidSubCategory
		{
			get
			{
				return this.pidSubCategory1;
			}
			set
			{
				this.pidSubCategory1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasPackTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtrasPackTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private int isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasPackRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntExtrasPackRL
	{
		private int pidExtras1;
		[Column("pidExtras", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidExtras1")]
		public virtual int pidExtras
		{
			get
			{
				return this.pidExtras1;
			}
			set
			{
				this.pidExtras1 = value;
			}
		}
		
		private int pidPack1;
		[Column("pidPack", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidPack1")]
		public virtual int pidPack
		{
			get
			{
				return this.pidPack1;
			}
			set
			{
				this.pidPack1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasPackLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntExtrasPackLN
	{
		private int pidPack1;
		[Column("pidPack", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidPack1")]
		public virtual int pidPack
		{
			get
			{
				return this.pidPack1;
			}
			set
			{
				this.pidPack1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasMediaRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtrasMediaRL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pid_estate_extra1;
		[Column("pid_estate_extra", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_estate_extra1")]
		public virtual int? pid_estate_extra
		{
			get
			{
				return this.pid_estate_extra1;
			}
			set
			{
				this.pid_estate_extra1 = value;
			}
		}
		
		private int? sequence1;
		[Column("sequence", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("sequence1")]
		public virtual int? sequence
		{
			get
			{
				return this.sequence1;
			}
			set
			{
				this.sequence1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string img_thumb1;
		[Column("img_thumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("img_thumb1")]
		public virtual string img_thumb
		{
			get
			{
				return this.img_thumb1;
			}
			set
			{
				this.img_thumb1 = value;
			}
		}
		
		private string img_banner1;
		[Column("img_banner", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("img_banner1")]
		public virtual string img_banner
		{
			get
			{
				return this.img_banner1;
			}
			set
			{
				this.img_banner1 = value;
			}
		}
		
		private string video_path1;
		[Column("video_path", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("video_path1")]
		public virtual string video_path
		{
			get
			{
				return this.video_path1;
			}
			set
			{
				this.video_path1 = value;
			}
		}
		
		private string video_embed1;
		[Column("video_embed", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("video_embed1")]
		public virtual string video_embed
		{
			get
			{
				return this.video_embed1;
			}
			set
			{
				this.video_embed1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasCategoryTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtrasCategoryTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private int isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private int? pidMacroCategory1;
		[Column("pidMacroCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidMacroCategory1")]
		public virtual int? pidMacroCategory
		{
			get
			{
				return this.pidMacroCategory1;
			}
			set
			{
				this.pidMacroCategory1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasCategoryLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntExtrasCategoryLN
	{
		private int pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCategory1")]
		public virtual int pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateExtrasRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateExtrasRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private int pidEstateExtras1;
		[Column("pidEstateExtras", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstateExtras1")]
		public virtual int pidEstateExtras
		{
			get
			{
				return this.pidEstateExtras1;
			}
			set
			{
				this.pidEstateExtras1 = value;
			}
		}
		
		private string priceType1;
		[Column("priceType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("priceType1")]
		public virtual string priceType
		{
			get
			{
				return this.priceType1;
			}
			set
			{
				this.priceType1 = value;
			}
		}
		
		private decimal? priceAmount1;
		[Column("priceAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("priceAmount1")]
		public virtual decimal? priceAmount
		{
			get
			{
				return this.priceAmount1;
			}
			set
			{
				this.priceAmount1 = value;
			}
		}
		
		private string optionValue1;
		[Column("optionValue", OpenAccessType = OpenAccessType.StringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("optionValue1")]
		public virtual string optionValue
		{
			get
			{
				return this.optionValue1;
			}
			set
			{
				this.optionValue1 = value;
			}
		}
		
		private int? isFixed1;
		[Column("isFixed", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isFixed1")]
		public virtual int? isFixed
		{
			get
			{
				return this.isFixed1;
			}
			set
			{
				this.isFixed1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasMacroCategoryTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtrasMacroCategoryTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private int isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasMacroCategoryLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntExtrasMacroCategoryLN
	{
		private int pidMacroCategory1;
		[Column("pidMacroCategory", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidMacroCategory1")]
		public virtual int pidMacroCategory
		{
			get
			{
				return this.pidMacroCategory1;
			}
			set
			{
				this.pidMacroCategory1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateExtrasLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateExtrasLN
	{
		private int pidEstateExtras1;
		[Column("pidEstateExtras", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstateExtras1")]
		public virtual int pidEstateExtras
		{
			get
			{
				return this.pidEstateExtras1;
			}
			set
			{
				this.pidEstateExtras1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string sommario1;
		[Column("sommario", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("sommario1")]
		public virtual string sommario
		{
			get
			{
				return this.sommario1;
			}
			set
			{
				this.sommario1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateExtrasPeriodTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntEstateExtrasPeriodTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? service_id1;
		[Column("service_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("service_id1")]
		public virtual int? service_id
		{
			get
			{
				return this.service_id1;
			}
			set
			{
				this.service_id1 = value;
			}
		}
		
		private DateTime? dtstart1;
		[Column("dtstart", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtstart1")]
		public virtual DateTime? dtstart
		{
			get
			{
				return this.dtstart1;
			}
			set
			{
				this.dtstart1 = value;
			}
		}
		
		private DateTime? dtend1;
		[Column("dtend", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtend1")]
		public virtual DateTime? dtend
		{
			get
			{
				return this.dtend1;
			}
			set
			{
				this.dtend1 = value;
			}
		}
		
		private string closingday1;
		[Column("closingday", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("closingday1")]
		public virtual string closingday
		{
			get
			{
				return this.closingday1;
			}
			set
			{
				this.closingday1 = value;
			}
		}
		
		private decimal? priceAmount1;
		[Column("priceAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("priceAmount1")]
		public virtual decimal? priceAmount
		{
			get
			{
				return this.priceAmount1;
			}
			set
			{
				this.priceAmount1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtraPriceTypesTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtraPriceTypesTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int pidExtra1;
		[Column("pidExtra", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidExtra1")]
		public virtual int pidExtra
		{
			get
			{
				return this.pidExtra1;
			}
			set
			{
				this.pidExtra1 = value;
			}
		}
		
		private int isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtraPriceTypesLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntExtraPriceTypesLN
	{
		private int pidPriceType1;
		[Column("pidPriceType", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidPriceType1")]
		public virtual int pidPriceType
		{
			get
			{
				return this.pidPriceType1;
			}
			set
			{
				this.pidPriceType1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntDiscountPromoCodeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntDiscountPromoCodeTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private decimal? discountAmount1;
		[Column("discountAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("discountAmount1")]
		public virtual decimal? discountAmount
		{
			get
			{
				return this.discountAmount1;
			}
			set
			{
				this.discountAmount1 = value;
			}
		}
		
		private int? discountIsPercentage1;
		[Column("discountIsPercentage", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("discountIsPercentage1")]
		public virtual int? discountIsPercentage
		{
			get
			{
				return this.discountIsPercentage1;
			}
			set
			{
				this.discountIsPercentage1 = value;
			}
		}
		
		private DateTime? validDateFrom1;
		[Column("validDateFrom", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("validDateFrom1")]
		public virtual DateTime? validDateFrom
		{
			get
			{
				return this.validDateFrom1;
			}
			set
			{
				this.validDateFrom1 = value;
			}
		}
		
		private DateTime? validDateTo1;
		[Column("validDateTo", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("validDateTo1")]
		public virtual DateTime? validDateTo
		{
			get
			{
				return this.validDateTo1;
			}
			set
			{
				this.validDateTo1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private int? lastUpdateUserId1;
		[Column("lastUpdateUserId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("lastUpdateUserId1")]
		public virtual int? lastUpdateUserId
		{
			get
			{
				return this.lastUpdateUserId1;
			}
			set
			{
				this.lastUpdateUserId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntReservationExtrasTMP")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntReservationExtrasTMP
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private int? numPersAdult1;
		[Column("numPersAdult", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("numPersAdult1")]
		public virtual int? numPersAdult
		{
			get
			{
				return this.numPersAdult1;
			}
			set
			{
				this.numPersAdult1 = value;
			}
		}
		
		private int? numPersChild1;
		[Column("numPersChild", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("numPersChild1")]
		public virtual int? numPersChild
		{
			get
			{
				return this.numPersChild1;
			}
			set
			{
				this.numPersChild1 = value;
			}
		}
		
		private string numPersChildAges1;
		[Column("numPersChildAges", OpenAccessType = OpenAccessType.StringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "varchar(max)")]
		[Storage("numPersChildAges1")]
		public virtual string numPersChildAges
		{
			get
			{
				return this.numPersChildAges1;
			}
			set
			{
				this.numPersChildAges1 = value;
			}
		}
		
		private int? pidExtras1;
		[Column("pidExtras", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidExtras1")]
		public virtual int? pidExtras
		{
			get
			{
				return this.pidExtras1;
			}
			set
			{
				this.pidExtras1 = value;
			}
		}
		
		private int? pidPriceType1;
		[Column("pidPriceType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidPriceType1")]
		public virtual int? pidPriceType
		{
			get
			{
				return this.pidPriceType1;
			}
			set
			{
				this.pidPriceType1 = value;
			}
		}
		
		private decimal? Price1;
		[Column("Price", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("Price1")]
		public virtual decimal? Price
		{
			get
			{
				return this.Price1;
			}
			set
			{
				this.Price1 = value;
			}
		}
		
		private decimal? Commission1;
		[Column("Commission", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("Commission1")]
		public virtual decimal? Commission
		{
			get
			{
				return this.Commission1;
			}
			set
			{
				this.Commission1 = value;
			}
		}
		
		private DateTime? inDate1;
		[Column("inDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("inDate1")]
		public virtual DateTime? inDate
		{
			get
			{
				return this.inDate1;
			}
			set
			{
				this.inDate1 = value;
			}
		}
		
		private string inDetails1;
		[Column("inDetails", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("inDetails1")]
		public virtual string inDetails
		{
			get
			{
				return this.inDetails1;
			}
			set
			{
				this.inDetails1 = value;
			}
		}
		
		private DateTime? outDate1;
		[Column("outDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("outDate1")]
		public virtual DateTime? outDate
		{
			get
			{
				return this.outDate1;
			}
			set
			{
				this.outDate1 = value;
			}
		}
		
		private string outDetails1;
		[Column("outDetails", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("outDetails1")]
		public virtual string outDetails
		{
			get
			{
				return this.outDetails1;
			}
			set
			{
				this.outDetails1 = value;
			}
		}
		
		private long? bookingId1;
		[Column("bookingId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("bookingId1")]
		public virtual long? bookingId
		{
			get
			{
				return this.bookingId1;
			}
			set
			{
				this.bookingId1 = value;
			}
		}
		
		private long? pidReservation1;
		[Column("pidReservation", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidReservation1")]
		public virtual long? pidReservation
		{
			get
			{
				return this.pidReservation1;
			}
			set
			{
				this.pidReservation1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtraOwnerTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtraOwnerTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private Guid? uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsNullable = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid? uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private int? pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int? pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private int? pidReferer1;
		[Column("pidReferer", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidReferer1")]
		public virtual int? pidReferer
		{
			get
			{
				return this.pidReferer1;
			}
			set
			{
				this.pidReferer1 = value;
			}
		}
		
		private int? pidPaymentType1;
		[Column("pidPaymentType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidPaymentType1")]
		public virtual int? pidPaymentType
		{
			get
			{
				return this.pidPaymentType1;
			}
			set
			{
				this.pidPaymentType1 = value;
			}
		}
		
		private int? pidDiscountType1;
		[Column("pidDiscountType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidDiscountType1")]
		public virtual int? pidDiscountType
		{
			get
			{
				return this.pidDiscountType1;
			}
			set
			{
				this.pidDiscountType1 = value;
			}
		}
		
		private int? payDiscountNotPayed1;
		[Column("payDiscountNotPayed", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("payDiscountNotPayed1")]
		public virtual int? payDiscountNotPayed
		{
			get
			{
				return this.payDiscountNotPayed1;
			}
			set
			{
				this.payDiscountNotPayed1 = value;
			}
		}
		
		private int? payFullPayment1;
		[Column("payFullPayment", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("payFullPayment1")]
		public virtual int? payFullPayment
		{
			get
			{
				return this.payFullPayment1;
			}
			set
			{
				this.payFullPayment1 = value;
			}
		}
		
		private int? hasAcceptedContract1;
		[Column("hasAcceptedContract", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("hasAcceptedContract1")]
		public virtual int? hasAcceptedContract
		{
			get
			{
				return this.hasAcceptedContract1;
			}
			set
			{
				this.hasAcceptedContract1 = value;
			}
		}
		
		private string typeCode1;
		[Column("typeCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("typeCode1")]
		public virtual string typeCode
		{
			get
			{
				return this.typeCode1;
			}
			set
			{
				this.typeCode1 = value;
			}
		}
		
		private string typeTitle1;
		[Column("typeTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("typeTitle1")]
		public virtual string typeTitle
		{
			get
			{
				return this.typeTitle1;
			}
			set
			{
				this.typeTitle1 = value;
			}
		}
		
		private string nameCompany1;
		[Column("nameCompany", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameCompany1")]
		public virtual string nameCompany
		{
			get
			{
				return this.nameCompany1;
			}
			set
			{
				this.nameCompany1 = value;
			}
		}
		
		private string nameHonor1;
		[Column("nameHonor", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameHonor1")]
		public virtual string nameHonor
		{
			get
			{
				return this.nameHonor1;
			}
			set
			{
				this.nameHonor1 = value;
			}
		}
		
		private string nameFull1;
		[Column("nameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameFull1")]
		public virtual string nameFull
		{
			get
			{
				return this.nameFull1;
			}
			set
			{
				this.nameFull1 = value;
			}
		}
		
		private string nameFirst1;
		[Column("nameFirst", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameFirst1")]
		public virtual string nameFirst
		{
			get
			{
				return this.nameFirst1;
			}
			set
			{
				this.nameFirst1 = value;
			}
		}
		
		private string nameLast1;
		[Column("nameLast", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameLast1")]
		public virtual string nameLast
		{
			get
			{
				return this.nameLast1;
			}
			set
			{
				this.nameLast1 = value;
			}
		}
		
		private string docType1;
		[Column("docType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docType1")]
		public virtual string docType
		{
			get
			{
				return this.docType1;
			}
			set
			{
				this.docType1 = value;
			}
		}
		
		private string docNum1;
		[Column("docNum", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docNum1")]
		public virtual string docNum
		{
			get
			{
				return this.docNum1;
			}
			set
			{
				this.docNum1 = value;
			}
		}
		
		private string docIssuePlace1;
		[Column("docIssuePlace", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docIssuePlace1")]
		public virtual string docIssuePlace
		{
			get
			{
				return this.docIssuePlace1;
			}
			set
			{
				this.docIssuePlace1 = value;
			}
		}
		
		private DateTime? docIssueDate1;
		[Column("docIssueDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docIssueDate1")]
		public virtual DateTime? docIssueDate
		{
			get
			{
				return this.docIssueDate1;
			}
			set
			{
				this.docIssueDate1 = value;
			}
		}
		
		private DateTime? docExpiryDate1;
		[Column("docExpiryDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docExpiryDate1")]
		public virtual DateTime? docExpiryDate
		{
			get
			{
				return this.docExpiryDate1;
			}
			set
			{
				this.docExpiryDate1 = value;
			}
		}
		
		private string docVat1;
		[Column("docVat", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docVat1")]
		public virtual string docVat
		{
			get
			{
				return this.docVat1;
			}
			set
			{
				this.docVat1 = value;
			}
		}
		
		private int? docVat_isEuReg1;
		[Column("docVat_isEuReg", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docVat_isEuReg1")]
		public virtual int? docVat_isEuReg
		{
			get
			{
				return this.docVat_isEuReg1;
			}
			set
			{
				this.docVat_isEuReg1 = value;
			}
		}
		
		private string docCf1;
		[Column("docCf", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docCf1")]
		public virtual string docCf
		{
			get
			{
				return this.docCf1;
			}
			set
			{
				this.docCf1 = value;
			}
		}
		
		private DateTime? birthDate1;
		[Column("birthDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("birthDate1")]
		public virtual DateTime? birthDate
		{
			get
			{
				return this.birthDate1;
			}
			set
			{
				this.birthDate1 = value;
			}
		}
		
		private string birthPlace1;
		[Column("birthPlace", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("birthPlace1")]
		public virtual string birthPlace
		{
			get
			{
				return this.birthPlace1;
			}
			set
			{
				this.birthPlace1 = value;
			}
		}
		
		private string locCountry1;
		[Column("locCountry", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("locCountry1")]
		public virtual string locCountry
		{
			get
			{
				return this.locCountry1;
			}
			set
			{
				this.locCountry1 = value;
			}
		}
		
		private string locState1;
		[Column("locState", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("locState1")]
		public virtual string locState
		{
			get
			{
				return this.locState1;
			}
			set
			{
				this.locState1 = value;
			}
		}
		
		private string locCity1;
		[Column("locCity", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("locCity1")]
		public virtual string locCity
		{
			get
			{
				return this.locCity1;
			}
			set
			{
				this.locCity1 = value;
			}
		}
		
		private string locAddress1;
		[Column("locAddress", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("locAddress1")]
		public virtual string locAddress
		{
			get
			{
				return this.locAddress1;
			}
			set
			{
				this.locAddress1 = value;
			}
		}
		
		private string locZipCode1;
		[Column("locZipCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "varchar")]
		[Storage("locZipCode1")]
		public virtual string locZipCode
		{
			get
			{
				return this.locZipCode1;
			}
			set
			{
				this.locZipCode1 = value;
			}
		}
		
		private string contactEmail1;
		[Column("contactEmail", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactEmail1")]
		public virtual string contactEmail
		{
			get
			{
				return this.contactEmail1;
			}
			set
			{
				this.contactEmail1 = value;
			}
		}
		
		private string contactEmailInvoice1;
		[Column("contactEmailInvoice", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactEmailInvoice1")]
		public virtual string contactEmailInvoice
		{
			get
			{
				return this.contactEmailInvoice1;
			}
			set
			{
				this.contactEmailInvoice1 = value;
			}
		}
		
		private string contactPhone1;
		[Column("contactPhone", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactPhone1")]
		public virtual string contactPhone
		{
			get
			{
				return this.contactPhone1;
			}
			set
			{
				this.contactPhone1 = value;
			}
		}
		
		private string contactPhoneMobile1;
		[Column("contactPhoneMobile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactPhoneMobile1")]
		public virtual string contactPhoneMobile
		{
			get
			{
				return this.contactPhoneMobile1;
			}
			set
			{
				this.contactPhoneMobile1 = value;
			}
		}
		
		private string contactFax1;
		[Column("contactFax", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactFax1")]
		public virtual string contactFax
		{
			get
			{
				return this.contactFax1;
			}
			set
			{
				this.contactFax1 = value;
			}
		}
		
		private string contactWebSite1;
		[Column("contactWebSite", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactWebSite1")]
		public virtual string contactWebSite
		{
			get
			{
				return this.contactWebSite1;
			}
			set
			{
				this.contactWebSite1 = value;
			}
		}
		
		private string contactComeFrom1;
		[Column("contactComeFrom", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("contactComeFrom1")]
		public virtual string contactComeFrom
		{
			get
			{
				return this.contactComeFrom1;
			}
			set
			{
				this.contactComeFrom1 = value;
			}
		}
		
		private string authUsr1;
		[Column("authUsr", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("authUsr1")]
		public virtual string authUsr
		{
			get
			{
				return this.authUsr1;
			}
			set
			{
				this.authUsr1 = value;
			}
		}
		
		private string authPwd1;
		[Column("authPwd", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("authPwd1")]
		public virtual string authPwd
		{
			get
			{
				return this.authPwd1;
			}
			set
			{
				this.authPwd1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private string notesClient1;
		[Column("notesClient", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesClient1")]
		public virtual string notesClient
		{
			get
			{
				return this.notesClient1;
			}
			set
			{
				this.notesClient1 = value;
			}
		}
		
		private string notesInner1;
		[Column("notesInner", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesInner1")]
		public virtual string notesInner
		{
			get
			{
				return this.notesInner1;
			}
			set
			{
				this.notesInner1 = value;
			}
		}
		
		private string notesInvoice1;
		[Column("notesInvoice", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesInvoice1")]
		public virtual string notesInvoice
		{
			get
			{
				return this.notesInvoice1;
			}
			set
			{
				this.notesInvoice1 = value;
			}
		}
		
		private decimal? cashDiscount1;
		[Column("cashDiscount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashDiscount1")]
		public virtual decimal? cashDiscount
		{
			get
			{
				return this.cashDiscount1;
			}
			set
			{
				this.cashDiscount1 = value;
			}
		}
		
		private decimal? cashTaxFree1;
		[Column("cashTaxFree", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTaxFree1")]
		public virtual decimal? cashTaxFree
		{
			get
			{
				return this.cashTaxFree1;
			}
			set
			{
				this.cashTaxFree1 = value;
			}
		}
		
		private decimal? cashTaxAmount1;
		[Column("cashTaxAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTaxAmount1")]
		public virtual decimal? cashTaxAmount
		{
			get
			{
				return this.cashTaxAmount1;
			}
			set
			{
				this.cashTaxAmount1 = value;
			}
		}
		
		private decimal? cashTotalAmount1;
		[Column("cashTotalAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTotalAmount1")]
		public virtual decimal? cashTotalAmount
		{
			get
			{
				return this.cashTotalAmount1;
			}
			set
			{
				this.cashTotalAmount1 = value;
			}
		}
		
		private decimal? cashPayed1;
		[Column("cashPayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashPayed1")]
		public virtual decimal? cashPayed
		{
			get
			{
				return this.cashPayed1;
			}
			set
			{
				this.cashPayed1 = value;
			}
		}
		
		private DateTime? cashPayedDateTime1;
		[Column("cashPayedDateTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("cashPayedDateTime1")]
		public virtual DateTime? cashPayedDateTime
		{
			get
			{
				return this.cashPayedDateTime1;
			}
			set
			{
				this.cashPayedDateTime1 = value;
			}
		}
		
		private string cashPayedTxnID1;
		[Column("cashPayedTxnID", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("cashPayedTxnID1")]
		public virtual string cashPayedTxnID
		{
			get
			{
				return this.cashPayedTxnID1;
			}
			set
			{
				this.cashPayedTxnID1 = value;
			}
		}
		
		private int? mailSentCount1;
		[Column("mailSentCount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("mailSentCount1")]
		public virtual int? mailSentCount
		{
			get
			{
				return this.mailSentCount1;
			}
			set
			{
				this.mailSentCount1 = value;
			}
		}
		
		private DateTime? mailSentLast1;
		[Column("mailSentLast", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("mailSentLast1")]
		public virtual DateTime? mailSentLast
		{
			get
			{
				return this.mailSentLast1;
			}
			set
			{
				this.mailSentLast1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateExtrasTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntEstateExtrasTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string priceType1;
		[Column("priceType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("priceType1")]
		public virtual string priceType
		{
			get
			{
				return this.priceType1;
			}
			set
			{
				this.priceType1 = value;
			}
		}
		
		private decimal? priceAmount1;
		[Column("priceAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("priceAmount1")]
		public virtual decimal? priceAmount
		{
			get
			{
				return this.priceAmount1;
			}
			set
			{
				this.priceAmount1 = value;
			}
		}
		
		private int? isRequired1;
		[Column("isRequired", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isRequired1")]
		public virtual int? isRequired
		{
			get
			{
				return this.isRequired1;
			}
			set
			{
				this.isRequired1 = value;
			}
		}
		
		private int? isInstantPayment1;
		[Column("isInstantPayment", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isInstantPayment1")]
		public virtual int? isInstantPayment
		{
			get
			{
				return this.isInstantPayment1;
			}
			set
			{
				this.isInstantPayment1 = value;
			}
		}
		
		private int? isInInvoice1;
		[Column("isInInvoice", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isInInvoice1")]
		public virtual int? isInInvoice
		{
			get
			{
				return this.isInInvoice1;
			}
			set
			{
				this.isInInvoice1 = value;
			}
		}
		
		private int? hasPeriodLimits1;
		[Column("hasPeriodLimits", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("hasPeriodLimits1")]
		public virtual int? hasPeriodLimits
		{
			get
			{
				return this.hasPeriodLimits1;
			}
			set
			{
				this.hasPeriodLimits1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private int? innerType1;
		[Column("innerType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("innerType1")]
		public virtual int? innerType
		{
			get
			{
				return this.innerType1;
			}
			set
			{
				this.innerType1 = value;
			}
		}
		
		private int? innerCategory1;
		[Column("innerCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("innerCategory1")]
		public virtual int? innerCategory
		{
			get
			{
				return this.innerCategory1;
			}
			set
			{
				this.innerCategory1 = value;
			}
		}
		
		private string innerNotes1;
		[Column("innerNotes", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("innerNotes1")]
		public virtual string innerNotes
		{
			get
			{
				return this.innerNotes1;
			}
			set
			{
				this.innerNotes1 = value;
			}
		}
		
		private int? isImportant1;
		[Column("isImportant", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isImportant1")]
		public virtual int? isImportant
		{
			get
			{
				return this.isImportant1;
			}
			set
			{
				this.isImportant1 = value;
			}
		}
		
		private int? isInFilters1;
		[Column("isInFilters", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isInFilters1")]
		public virtual int? isInFilters
		{
			get
			{
				return this.isInFilters1;
			}
			set
			{
				this.isInFilters1 = value;
			}
		}
		
		private int? pidCity1;
		[Column("pidCity", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCity1")]
		public virtual int? pidCity
		{
			get
			{
				return this.pidCity1;
			}
			set
			{
				this.pidCity1 = value;
			}
		}
		
		private int? isInResArea1;
		[Column("isInResArea", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isInResArea1")]
		public virtual int? isInResArea
		{
			get
			{
				return this.isInResArea1;
			}
			set
			{
				this.isInResArea1 = value;
			}
		}
		
		private int? pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCategory1")]
		public virtual int? pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private int? pidSubCategory1;
		[Column("pidSubCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidSubCategory1")]
		public virtual int? pidSubCategory
		{
			get
			{
				return this.pidSubCategory1;
			}
			set
			{
				this.pidSubCategory1 = value;
			}
		}
		
		private int? isForAllApartment1;
		[Column("isForAllApartment", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isForAllApartment1")]
		public virtual int? isForAllApartment
		{
			get
			{
				return this.isForAllApartment1;
			}
			set
			{
				this.isForAllApartment1 = value;
			}
		}
		
		private int? pidMacroCategory1;
		[Column("pidMacroCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidMacroCategory1")]
		public virtual int? pidMacroCategory
		{
			get
			{
				return this.pidMacroCategory1;
			}
			set
			{
				this.pidMacroCategory1 = value;
			}
		}
		
		private int? pidOwner1;
		[Column("pidOwner", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidOwner1")]
		public virtual int? pidOwner
		{
			get
			{
				return this.pidOwner1;
			}
			set
			{
				this.pidOwner1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasPriceTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtrasPriceTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidExtras1;
		[Column("pidExtras", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidExtras1")]
		public virtual int? pidExtras
		{
			get
			{
				return this.pidExtras1;
			}
			set
			{
				this.pidExtras1 = value;
			}
		}
		
		private int? minPax1;
		[Column("minPax", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minPax1")]
		public virtual int? minPax
		{
			get
			{
				return this.minPax1;
			}
			set
			{
				this.minPax1 = value;
			}
		}
		
		private int? maxPax1;
		[Column("maxPax", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("maxPax1")]
		public virtual int? maxPax
		{
			get
			{
				return this.maxPax1;
			}
			set
			{
				this.maxPax1 = value;
			}
		}
		
		private int? Hours1;
		[Column("Hours", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("Hours1")]
		public virtual int? Hours
		{
			get
			{
				return this.Hours1;
			}
			set
			{
				this.Hours1 = value;
			}
		}
		
		private int? Days1;
		[Column("Days", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("Days1")]
		public virtual int? Days
		{
			get
			{
				return this.Days1;
			}
			set
			{
				this.Days1 = value;
			}
		}
		
		private decimal? Price1;
		[Column("Price", OpenAccessType = OpenAccessType.Numeric, IsNullable = true, Length = 10, Scale = 2, SqlType = "numeric")]
		[Storage("Price1")]
		public virtual decimal? Price
		{
			get
			{
				return this.Price1;
			}
			set
			{
				this.Price1 = value;
			}
		}
		
		private string priceType1;
		[Column("priceType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("priceType1")]
		public virtual string priceType
		{
			get
			{
				return this.priceType1;
			}
			set
			{
				this.priceType1 = value;
			}
		}
		
		private string paymentType1;
		[Column("paymentType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("paymentType1")]
		public virtual string paymentType
		{
			get
			{
				return this.paymentType1;
			}
			set
			{
				this.paymentType1 = value;
			}
		}
		
		private int? pidMacroCategory1;
		[Column("pidMacroCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidMacroCategory1")]
		public virtual int? pidMacroCategory
		{
			get
			{
				return this.pidMacroCategory1;
			}
			set
			{
				this.pidMacroCategory1 = value;
			}
		}
		
		private decimal? actualPrice1;
		[Column("actualPrice", OpenAccessType = OpenAccessType.Numeric, IsNullable = true, Length = 10, Scale = 2, SqlType = "numeric")]
		[Storage("actualPrice1")]
		public virtual decimal? actualPrice
		{
			get
			{
				return this.actualPrice1;
			}
			set
			{
				this.actualPrice1 = value;
			}
		}
		
		private decimal? actualPriceChild1;
		[Column("actualPriceChild", OpenAccessType = OpenAccessType.Numeric, IsNullable = true, Length = 10, Scale = 2, SqlType = "numeric")]
		[Storage("actualPriceChild1")]
		public virtual decimal? actualPriceChild
		{
			get
			{
				return this.actualPriceChild1;
			}
			set
			{
				this.actualPriceChild1 = value;
			}
		}
		
		private decimal Commission1;
		[Column("Commission", OpenAccessType = OpenAccessType.Numeric, Length = 10, Scale = 2, SqlType = "numeric")]
		[Storage("Commission1")]
		public virtual decimal Commission
		{
			get
			{
				return this.Commission1;
			}
			set
			{
				this.Commission1 = value;
			}
		}
		
		private int? CommissionType1;
		[Column("CommissionType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("CommissionType1")]
		public virtual int? CommissionType
		{
			get
			{
				return this.CommissionType1;
			}
			set
			{
				this.CommissionType1 = value;
			}
		}
		
		private decimal? costPrice1;
		[Column("costPrice", OpenAccessType = OpenAccessType.Numeric, IsNullable = true, Length = 10, Scale = 2, SqlType = "numeric")]
		[Storage("costPrice1")]
		public virtual decimal? costPrice
		{
			get
			{
				return this.costPrice1;
			}
			set
			{
				this.costPrice1 = value;
			}
		}
		
		private decimal? costPriceChild1;
		[Column("costPriceChild", OpenAccessType = OpenAccessType.Numeric, IsNullable = true, Length = 10, Scale = 2, SqlType = "numeric")]
		[Storage("costPriceChild1")]
		public virtual decimal? costPriceChild
		{
			get
			{
				return this.costPriceChild1;
			}
			set
			{
				this.costPriceChild1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtraOwnerLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntExtraOwnerLN
	{
		private int pidExtraOwner1;
		[Column("pidExtraOwner", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidExtraOwner1")]
		public virtual int pidExtraOwner
		{
			get
			{
				return this.pidExtraOwner1;
			}
			set
			{
				this.pidExtraOwner1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string Policy1;
		[Column("Policy", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("Policy1")]
		public virtual string Policy
		{
			get
			{
				return this.Policy1;
			}
			set
			{
				this.Policy1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntExtrasRequest")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntExtrasRequest
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private long? pidReservation1;
		[Column("pidReservation", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidReservation1")]
		public virtual long? pidReservation
		{
			get
			{
				return this.pidReservation1;
			}
			set
			{
				this.pidReservation1 = value;
			}
		}
		
		private int? pidExtra1;
		[Column("pidExtra", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidExtra1")]
		public virtual int? pidExtra
		{
			get
			{
				return this.pidExtra1;
			}
			set
			{
				this.pidExtra1 = value;
			}
		}
		
		private string note1;
		[Column("note", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("note1")]
		public virtual string note
		{
			get
			{
				return this.note1;
			}
			set
			{
				this.note1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[View("RntEstateExtrasVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateExtrasVIEW
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string subTitle1;
		[Column("subTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("subTitle1")]
		public virtual string subTitle
		{
			get
			{
				return this.subTitle1;
			}
			set
			{
				this.subTitle1 = value;
			}
		}
		
		private string priceType1;
		[Column("priceType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("priceType1")]
		public virtual string priceType
		{
			get
			{
				return this.priceType1;
			}
			set
			{
				this.priceType1 = value;
			}
		}
		
		private decimal? priceAmount1;
		[Column("priceAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("priceAmount1")]
		public virtual decimal? priceAmount
		{
			get
			{
				return this.priceAmount1;
			}
			set
			{
				this.priceAmount1 = value;
			}
		}
		
		private int? pidSubCategory1;
		[Column("pidSubCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidSubCategory1")]
		public virtual int? pidSubCategory
		{
			get
			{
				return this.pidSubCategory1;
			}
			set
			{
				this.pidSubCategory1 = value;
			}
		}
		
		private int? pidMacroCategory1;
		[Column("pidMacroCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidMacroCategory1")]
		public virtual int? pidMacroCategory
		{
			get
			{
				return this.pidMacroCategory1;
			}
			set
			{
				this.pidMacroCategory1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private int? pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCategory1")]
		public virtual int? pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private int? isRequired1;
		[Column("isRequired", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isRequired1")]
		public virtual int? isRequired
		{
			get
			{
				return this.isRequired1;
			}
			set
			{
				this.isRequired1 = value;
			}
		}
		
		private int? isInstantPayment1;
		[Column("isInstantPayment", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isInstantPayment1")]
		public virtual int? isInstantPayment
		{
			get
			{
				return this.isInstantPayment1;
			}
			set
			{
				this.isInstantPayment1 = value;
			}
		}
		
		private int? isInInvoice1;
		[Column("isInInvoice", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isInInvoice1")]
		public virtual int? isInInvoice
		{
			get
			{
				return this.isInInvoice1;
			}
			set
			{
				this.isInInvoice1 = value;
			}
		}
		
		private int? isInFilters1;
		[Column("isInFilters", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isInFilters1")]
		public virtual int? isInFilters
		{
			get
			{
				return this.isInFilters1;
			}
			set
			{
				this.isInFilters1 = value;
			}
		}
		
		private int? isImportant1;
		[Column("isImportant", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isImportant1")]
		public virtual int? isImportant
		{
			get
			{
				return this.isImportant1;
			}
			set
			{
				this.isImportant1 = value;
			}
		}
		
		private int? innerType1;
		[Column("innerType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("innerType1")]
		public virtual int? innerType
		{
			get
			{
				return this.innerType1;
			}
			set
			{
				this.innerType1 = value;
			}
		}
		
		private string innerNotes1;
		[Column("innerNotes", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("innerNotes1")]
		public virtual string innerNotes
		{
			get
			{
				return this.innerNotes1;
			}
			set
			{
				this.innerNotes1 = value;
			}
		}
		
		private int? innerCategory1;
		[Column("innerCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("innerCategory1")]
		public virtual int? innerCategory
		{
			get
			{
				return this.innerCategory1;
			}
			set
			{
				this.innerCategory1 = value;
			}
		}
		
		private string imgThumb1;
		[Column("imgThumb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgThumb1")]
		public virtual string imgThumb
		{
			get
			{
				return this.imgThumb1;
			}
			set
			{
				this.imgThumb1 = value;
			}
		}
		
		private string imgPreview1;
		[Column("imgPreview", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgPreview1")]
		public virtual string imgPreview
		{
			get
			{
				return this.imgPreview1;
			}
			set
			{
				this.imgPreview1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? hasPeriodLimits1;
		[Column("hasPeriodLimits", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("hasPeriodLimits1")]
		public virtual int? hasPeriodLimits
		{
			get
			{
				return this.hasPeriodLimits1;
			}
			set
			{
				this.hasPeriodLimits1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntReservationExtras")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntReservationExtras
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private long? pidReservation1;
		[Column("pidReservation", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidReservation1")]
		public virtual long? pidReservation
		{
			get
			{
				return this.pidReservation1;
			}
			set
			{
				this.pidReservation1 = value;
			}
		}
		
		private decimal? TotalPrice1;
		[Column("TotalPrice", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("TotalPrice1")]
		public virtual decimal? TotalPrice
		{
			get
			{
				return this.TotalPrice1;
			}
			set
			{
				this.TotalPrice1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private int? is_paid1;
		[Column("is_paid", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("is_paid1")]
		public virtual int? is_paid
		{
			get
			{
				return this.is_paid1;
			}
			set
			{
				this.is_paid1 = value;
			}
		}
		
		private decimal? PayNow1;
		[Column("PayNow", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("PayNow1")]
		public virtual decimal? PayNow
		{
			get
			{
				return this.PayNow1;
			}
			set
			{
				this.PayNow1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntSeasonGroupTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntSeasonGroupTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntSeasonDatesTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntSeasonDatesTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int pidSeasonGroup1;
		[Column("pidSeasonGroup", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidSeasonGroup1")]
		public virtual int pidSeasonGroup
		{
			get
			{
				return this.pidSeasonGroup1;
			}
			set
			{
				this.pidSeasonGroup1 = value;
			}
		}
		
		private int pidPeriod1;
		[Column("pidPeriod", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidPeriod1")]
		public virtual int pidPeriod
		{
			get
			{
				return this.pidPeriod1;
			}
			set
			{
				this.pidPeriod1 = value;
			}
		}
		
		private DateTime dtStart1;
		[Column("dtStart", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtStart1")]
		public virtual DateTime dtStart
		{
			get
			{
				return this.dtStart1;
			}
			set
			{
				this.dtStart1 = value;
			}
		}
		
		private DateTime dtEnd1;
		[Column("dtEnd", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtEnd1")]
		public virtual DateTime dtEnd
		{
			get
			{
				return this.dtEnd1;
			}
			set
			{
				this.dtEnd1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChannelManagerTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChannelManagerTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private long? pidAgent1;
		[Column("pidAgent", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidAgent1")]
		public virtual long? pidAgent
		{
			get
			{
				return this.pidAgent1;
			}
			set
			{
				this.pidAgent1 = value;
			}
		}
		
		private string imgLogo1;
		[Column("imgLogo", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("imgLogo1")]
		public virtual string imgLogo
		{
			get
			{
				return this.imgLogo1;
			}
			set
			{
				this.imgLogo1 = value;
			}
		}
		
		private string filePdf1;
		[Column("filePdf", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("filePdf1")]
		public virtual string filePdf
		{
			get
			{
				return this.filePdf1;
			}
			set
			{
				this.filePdf1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChannelManagerEstateRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChannelManagerEstateRL
	{
		private string pidChannelManager1;
		[Column("pidChannelManager", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pidChannelManager1")]
		public virtual string pidChannelManager
		{
			get
			{
				return this.pidChannelManager1;
			}
			set
			{
				this.pidChannelManager1 = value;
			}
		}
		
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string iCalImportUrl1;
		[Column("iCalImportUrl", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("iCalImportUrl1")]
		public virtual string iCalImportUrl
		{
			get
			{
				return this.iCalImportUrl1;
			}
			set
			{
				this.iCalImportUrl1 = value;
			}
		}
		
		private int? iCalImportEnabled1;
		[Column("iCalImportEnabled", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("iCalImportEnabled1")]
		public virtual int? iCalImportEnabled
		{
			get
			{
				return this.iCalImportEnabled1;
			}
			set
			{
				this.iCalImportEnabled1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntAgentContractPricesTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntAgentContractPricesTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private long pidAgentContract1;
		[Column("pidAgentContract", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidAgentContract1")]
		public virtual long pidAgentContract
		{
			get
			{
				return this.pidAgentContract1;
			}
			set
			{
				this.pidAgentContract1 = value;
			}
		}
		
		private DateTime dtStart1;
		[Column("dtStart", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtStart1")]
		public virtual DateTime dtStart
		{
			get
			{
				return this.dtStart1;
			}
			set
			{
				this.dtStart1 = value;
			}
		}
		
		private DateTime dtEnd1;
		[Column("dtEnd", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtEnd1")]
		public virtual DateTime dtEnd
		{
			get
			{
				return this.dtEnd1;
			}
			set
			{
				this.dtEnd1 = value;
			}
		}
		
		private decimal commissionAmount1;
		[Column("commissionAmount", OpenAccessType = OpenAccessType.Decimal, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("commissionAmount1")]
		public virtual decimal commissionAmount
		{
			get
			{
				return this.commissionAmount1;
			}
			set
			{
				this.commissionAmount1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateAgentContractRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateAgentContractRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private int pidAgent1;
		[Column("pidAgent", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidAgent1")]
		public virtual int pidAgent
		{
			get
			{
				return this.pidAgent1;
			}
			set
			{
				this.pidAgent1 = value;
			}
		}
		
		private long pidAgentContract1;
		[Column("pidAgentContract", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidAgentContract1")]
		public virtual long pidAgentContract
		{
			get
			{
				return this.pidAgentContract1;
			}
			set
			{
				this.pidAgentContract1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntReservationLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntReservationLOG
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private DateTime? logDate1;
		[Column("logDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDate1")]
		public virtual DateTime? logDate
		{
			get
			{
				return this.logDate1;
			}
			set
			{
				this.logDate1 = value;
			}
		}
		
		private int? userID1;
		[Column("userID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("userID1")]
		public virtual int? userID
		{
			get
			{
				return this.userID1;
			}
			set
			{
				this.userID1 = value;
			}
		}
		
		private string userName1;
		[Column("userName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("userName1")]
		public virtual string userName
		{
			get
			{
				return this.userName1;
			}
			set
			{
				this.userName1 = value;
			}
		}
		
		private long? resID1;
		[Column("resID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("resID1")]
		public virtual long? resID
		{
			get
			{
				return this.resID1;
			}
			set
			{
				this.resID1 = value;
			}
		}
		
		private string resCode1;
		[Column("resCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("resCode1")]
		public virtual string resCode
		{
			get
			{
				return this.resCode1;
			}
			set
			{
				this.resCode1 = value;
			}
		}
		
		private string changeField1;
		[Column("changeField", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("changeField1")]
		public virtual string changeField
		{
			get
			{
				return this.changeField1;
			}
			set
			{
				this.changeField1 = value;
			}
		}
		
		private string valueBefore1;
		[Column("valueBefore", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("valueBefore1")]
		public virtual string valueBefore
		{
			get
			{
				return this.valueBefore1;
			}
			set
			{
				this.valueBefore1 = value;
			}
		}
		
		private string valueAfter1;
		[Column("valueAfter", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("valueAfter1")]
		public virtual string valueAfter
		{
			get
			{
				return this.valueAfter1;
			}
			set
			{
				this.valueAfter1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntBcomRequestLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntBcomRequestLOG
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private DateTime? logDateTime1;
		[Column("logDateTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDateTime1")]
		public virtual DateTime? logDateTime
		{
			get
			{
				return this.logDateTime1;
			}
			set
			{
				this.logDateTime1 = value;
			}
		}
		
		private string requesUrl1;
		[Column("requesUrl", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("requesUrl1")]
		public virtual string requesUrl
		{
			get
			{
				return this.requesUrl1;
			}
			set
			{
				this.requesUrl1 = value;
			}
		}
		
		private string requestType1;
		[Column("requestType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("requestType1")]
		public virtual string requestType
		{
			get
			{
				return this.requestType1;
			}
			set
			{
				this.requestType1 = value;
			}
		}
		
		private string requestContent1;
		[Column("requestContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("requestContent1")]
		public virtual string requestContent
		{
			get
			{
				return this.requestContent1;
			}
			set
			{
				this.requestContent1 = value;
			}
		}
		
		private string responseContent1;
		[Column("responseContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("responseContent1")]
		public virtual string responseContent
		{
			get
			{
				return this.responseContent1;
			}
			set
			{
				this.responseContent1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntBcomEstateRatesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntBcomEstateRatesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private int priceType1;
		[Column("priceType", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("priceType1")]
		public virtual int priceType
		{
			get
			{
				return this.priceType1;
			}
			set
			{
				this.priceType1 = value;
			}
		}
		
		private int rateType1;
		[Column("rateType", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rateType1")]
		public virtual int rateType
		{
			get
			{
				return this.rateType1;
			}
			set
			{
				this.rateType1 = value;
			}
		}
		
		private int changeAmount1;
		[Column("changeAmount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeAmount1")]
		public virtual int changeAmount
		{
			get
			{
				return this.changeAmount1;
			}
			set
			{
				this.changeAmount1 = value;
			}
		}
		
		private int changeIsDiscount1;
		[Column("changeIsDiscount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeIsDiscount1")]
		public virtual int changeIsDiscount
		{
			get
			{
				return this.changeIsDiscount1;
			}
			set
			{
				this.changeIsDiscount1 = value;
			}
		}
		
		private int changeIsPercentage1;
		[Column("changeIsPercentage", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeIsPercentage1")]
		public virtual int changeIsPercentage
		{
			get
			{
				return this.changeIsPercentage1;
			}
			set
			{
				this.changeIsPercentage1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntBcomEstateRateChangesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntBcomEstateRateChangesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private int priceType1;
		[Column("priceType", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("priceType1")]
		public virtual int priceType
		{
			get
			{
				return this.priceType1;
			}
			set
			{
				this.priceType1 = value;
			}
		}
		
		private int rateType1;
		[Column("rateType", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("rateType1")]
		public virtual int rateType
		{
			get
			{
				return this.rateType1;
			}
			set
			{
				this.rateType1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private int changeAmount1;
		[Column("changeAmount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeAmount1")]
		public virtual int changeAmount
		{
			get
			{
				return this.changeAmount1;
			}
			set
			{
				this.changeAmount1 = value;
			}
		}
		
		private int changeIsDiscount1;
		[Column("changeIsDiscount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeIsDiscount1")]
		public virtual int changeIsDiscount
		{
			get
			{
				return this.changeIsDiscount1;
			}
			set
			{
				this.changeIsDiscount1 = value;
			}
		}
		
		private int changeIsPercentage1;
		[Column("changeIsPercentage", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeIsPercentage1")]
		public virtual int changeIsPercentage
		{
			get
			{
				return this.changeIsPercentage1;
			}
			set
			{
				this.changeIsPercentage1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntBcomEstateClosedDatesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntBcomEstateClosedDatesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private int isClosed1;
		[Column("isClosed", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isClosed1")]
		public virtual int isClosed
		{
			get
			{
				return this.isClosed1;
			}
			set
			{
				this.isClosed1 = value;
			}
		}
		
		private int minStay1;
		[Column("minStay", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minStay1")]
		public virtual int minStay
		{
			get
			{
				return this.minStay1;
			}
			set
			{
				this.minStay1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntIcalImportLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntIcalImportLOG
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private DateTime logDateTime1;
		[Column("logDateTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDateTime1")]
		public virtual DateTime logDateTime
		{
			get
			{
				return this.logDateTime1;
			}
			set
			{
				this.logDateTime1 = value;
			}
		}
		
		private int? pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int? pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private int? errorCount1;
		[Column("errorCount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("errorCount1")]
		public virtual int? errorCount
		{
			get
			{
				return this.errorCount1;
			}
			set
			{
				this.errorCount1 = value;
			}
		}
		
		private string iCalType1;
		[Column("iCalType", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("iCalType1")]
		public virtual string iCalType
		{
			get
			{
				return this.iCalType1;
			}
			set
			{
				this.iCalType1 = value;
			}
		}
		
		private string iCalUrl1;
		[Column("iCalUrl", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("iCalUrl1")]
		public virtual string iCalUrl
		{
			get
			{
				return this.iCalUrl1;
			}
			set
			{
				this.iCalUrl1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntIcalImportErrorLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntIcalImportErrorLOG
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private Guid logUid1;
		[Column("logUid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("logUid1")]
		public virtual Guid logUid
		{
			get
			{
				return this.logUid1;
			}
			set
			{
				this.logUid1 = value;
			}
		}
		
		private DateTime logDateTime1;
		[Column("logDateTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDateTime1")]
		public virtual DateTime logDateTime
		{
			get
			{
				return this.logDateTime1;
			}
			set
			{
				this.logDateTime1 = value;
			}
		}
		
		private string iCalComment1;
		[Column("iCalComment", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("iCalComment1")]
		public virtual string iCalComment
		{
			get
			{
				return this.iCalComment1;
			}
			set
			{
				this.iCalComment1 = value;
			}
		}
		
		private DateTime? iCalDtStart1;
		[Column("iCalDtStart", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("iCalDtStart1")]
		public virtual DateTime? iCalDtStart
		{
			get
			{
				return this.iCalDtStart1;
			}
			set
			{
				this.iCalDtStart1 = value;
			}
		}
		
		private DateTime? iCalDtEnd1;
		[Column("iCalDtEnd", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("iCalDtEnd1")]
		public virtual DateTime? iCalDtEnd
		{
			get
			{
				return this.iCalDtEnd1;
			}
			set
			{
				this.iCalDtEnd1 = value;
			}
		}
		
		private long? reservationId1;
		[Column("reservationId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("reservationId1")]
		public virtual long? reservationId
		{
			get
			{
				return this.reservationId1;
			}
			set
			{
				this.reservationId1 = value;
			}
		}
		
		private int? reservationStateId1;
		[Column("reservationStateId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("reservationStateId1")]
		public virtual int? reservationStateId
		{
			get
			{
				return this.reservationStateId1;
			}
			set
			{
				this.reservationStateId1 = value;
			}
		}
		
		private string reservationStateName1;
		[Column("reservationStateName", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("reservationStateName1")]
		public virtual string reservationStateName
		{
			get
			{
				return this.reservationStateName1;
			}
			set
			{
				this.reservationStateName1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlHolidayRequestLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlHolidayRequestLOG
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private DateTime? logDateTime1;
		[Column("logDateTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDateTime1")]
		public virtual DateTime? logDateTime
		{
			get
			{
				return this.logDateTime1;
			}
			set
			{
				this.logDateTime1 = value;
			}
		}
		
		private string requesUrl1;
		[Column("requesUrl", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requesUrl1")]
		public virtual string requesUrl
		{
			get
			{
				return this.requesUrl1;
			}
			set
			{
				this.requesUrl1 = value;
			}
		}
		
		private string requestType1;
		[Column("requestType", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requestType1")]
		public virtual string requestType
		{
			get
			{
				return this.requestType1;
			}
			set
			{
				this.requestType1 = value;
			}
		}
		
		private string requestContent1;
		[Column("requestContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("requestContent1")]
		public virtual string requestContent
		{
			get
			{
				return this.requestContent1;
			}
			set
			{
				this.requestContent1 = value;
			}
		}
		
		private string responseContent1;
		[Column("responseContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("responseContent1")]
		public virtual string responseContent
		{
			get
			{
				return this.responseContent1;
			}
			set
			{
				this.responseContent1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlHolidayOwnerTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlHolidayOwnerTBL
	{
		private long ownerId1;
		[Column("ownerId", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("ownerId1")]
		public virtual long ownerId
		{
			get
			{
				return this.ownerId1;
			}
			set
			{
				this.ownerId1 = value;
			}
		}
		
		private string username1;
		[Column("username", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("username1")]
		public virtual string username
		{
			get
			{
				return this.username1;
			}
			set
			{
				this.username1 = value;
			}
		}
		
		private string password1;
		[Column("password", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("password1")]
		public virtual string password
		{
			get
			{
				return this.password1;
			}
			set
			{
				this.password1 = value;
			}
		}
		
		private string ownerKey1;
		[Column("ownerKey", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("ownerKey1")]
		public virtual string ownerKey
		{
			get
			{
				return this.ownerKey1;
			}
			set
			{
				this.ownerKey1 = value;
			}
		}
		
		private string photosEmail1;
		[Column("photosEmail", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("photosEmail1")]
		public virtual string photosEmail
		{
			get
			{
				return this.photosEmail1;
			}
			set
			{
				this.photosEmail1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlHolidayEstateTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlHolidayEstateTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private long? ownerId1;
		[Column("ownerId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("ownerId1")]
		public virtual long? ownerId
		{
			get
			{
				return this.ownerId1;
			}
			set
			{
				this.ownerId1 = value;
			}
		}
		
		private string homeId1;
		[Column("homeId", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("homeId1")]
		public virtual string homeId
		{
			get
			{
				return this.homeId1;
			}
			set
			{
				this.homeId1 = value;
			}
		}
		
		private string homeName1;
		[Column("homeName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("homeName1")]
		public virtual string homeName
		{
			get
			{
				return this.homeName1;
			}
			set
			{
				this.homeName1 = value;
			}
		}
		
		private string homeSummary1;
		[Column("homeSummary", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 300, Scale = 0, SqlType = "nvarchar")]
		[Storage("homeSummary1")]
		public virtual string homeSummary
		{
			get
			{
				return this.homeSummary1;
			}
			set
			{
				this.homeSummary1 = value;
			}
		}
		
		private string homeDescription1;
		[Column("homeDescription", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("homeDescription1")]
		public virtual string homeDescription
		{
			get
			{
				return this.homeDescription1;
			}
			set
			{
				this.homeDescription1 = value;
			}
		}
		
		private string homeType1;
		[Column("homeType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("homeType1")]
		public virtual string homeType
		{
			get
			{
				return this.homeType1;
			}
			set
			{
				this.homeType1 = value;
			}
		}
		
		private int? pid_city1;
		[Column("pid_city", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_city1")]
		public virtual int? pid_city
		{
			get
			{
				return this.pid_city1;
			}
			set
			{
				this.pid_city1 = value;
			}
		}
		
		private int? pid_zone1;
		[Column("pid_zone", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_zone1")]
		public virtual int? pid_zone
		{
			get
			{
				return this.pid_zone1;
			}
			set
			{
				this.pid_zone1 = value;
			}
		}
		
		private int? pid_type1;
		[Column("pid_type", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_type1")]
		public virtual int? pid_type
		{
			get
			{
				return this.pid_type1;
			}
			set
			{
				this.pid_type1 = value;
			}
		}
		
		private int? num_bed_single1;
		[Column("num_bed_single", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_bed_single1")]
		public virtual int? num_bed_single
		{
			get
			{
				return this.num_bed_single1;
			}
			set
			{
				this.num_bed_single1 = value;
			}
		}
		
		private int? num_bed_double1;
		[Column("num_bed_double", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_bed_double1")]
		public virtual int? num_bed_double
		{
			get
			{
				return this.num_bed_double1;
			}
			set
			{
				this.num_bed_double1 = value;
			}
		}
		
		private int? num_bed_sofa1;
		[Column("num_bed_sofa", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_bed_sofa1")]
		public virtual int? num_bed_sofa
		{
			get
			{
				return this.num_bed_sofa1;
			}
			set
			{
				this.num_bed_sofa1 = value;
			}
		}
		
		private int? num_sofa_single1;
		[Column("num_sofa_single", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_sofa_single1")]
		public virtual int? num_sofa_single
		{
			get
			{
				return this.num_sofa_single1;
			}
			set
			{
				this.num_sofa_single1 = value;
			}
		}
		
		private int? num_sofa_double1;
		[Column("num_sofa_double", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_sofa_double1")]
		public virtual int? num_sofa_double
		{
			get
			{
				return this.num_sofa_double1;
			}
			set
			{
				this.num_sofa_double1 = value;
			}
		}
		
		private int? num_cot1;
		[Column("num_cot", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_cot1")]
		public virtual int? num_cot
		{
			get
			{
				return this.num_cot1;
			}
			set
			{
				this.num_cot1 = value;
			}
		}
		
		private int? num_persons_adult1;
		[Column("num_persons_adult", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_persons_adult1")]
		public virtual int? num_persons_adult
		{
			get
			{
				return this.num_persons_adult1;
			}
			set
			{
				this.num_persons_adult1 = value;
			}
		}
		
		private int? num_persons_child1;
		[Column("num_persons_child", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_persons_child1")]
		public virtual int? num_persons_child
		{
			get
			{
				return this.num_persons_child1;
			}
			set
			{
				this.num_persons_child1 = value;
			}
		}
		
		private int? num_persons_min1;
		[Column("num_persons_min", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_persons_min1")]
		public virtual int? num_persons_min
		{
			get
			{
				return this.num_persons_min1;
			}
			set
			{
				this.num_persons_min1 = value;
			}
		}
		
		private int? num_persons_max1;
		[Column("num_persons_max", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_persons_max1")]
		public virtual int? num_persons_max
		{
			get
			{
				return this.num_persons_max1;
			}
			set
			{
				this.num_persons_max1 = value;
			}
		}
		
		private int? num_rooms_bed1;
		[Column("num_rooms_bed", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_rooms_bed1")]
		public virtual int? num_rooms_bed
		{
			get
			{
				return this.num_rooms_bed1;
			}
			set
			{
				this.num_rooms_bed1 = value;
			}
		}
		
		private int? num_rooms_bath1;
		[Column("num_rooms_bath", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_rooms_bath1")]
		public virtual int? num_rooms_bath
		{
			get
			{
				return this.num_rooms_bath1;
			}
			set
			{
				this.num_rooms_bath1 = value;
			}
		}
		
		private int? num_family_bath1;
		[Column("num_family_bath", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_family_bath1")]
		public virtual int? num_family_bath
		{
			get
			{
				return this.num_family_bath1;
			}
			set
			{
				this.num_family_bath1 = value;
			}
		}
		
		private int? num_shower_rooms1;
		[Column("num_shower_rooms", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_shower_rooms1")]
		public virtual int? num_shower_rooms
		{
			get
			{
				return this.num_shower_rooms1;
			}
			set
			{
				this.num_shower_rooms1 = value;
			}
		}
		
		private int? num_en_suite1;
		[Column("num_en_suite", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_en_suite1")]
		public virtual int? num_en_suite
		{
			get
			{
				return this.num_en_suite1;
			}
			set
			{
				this.num_en_suite1 = value;
			}
		}
		
		private int? num_rooms_total1;
		[Column("num_rooms_total", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_rooms_total1")]
		public virtual int? num_rooms_total
		{
			get
			{
				return this.num_rooms_total1;
			}
			set
			{
				this.num_rooms_total1 = value;
			}
		}
		
		private int? num_lounge_seats1;
		[Column("num_lounge_seats", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_lounge_seats1")]
		public virtual int? num_lounge_seats
		{
			get
			{
				return this.num_lounge_seats1;
			}
			set
			{
				this.num_lounge_seats1 = value;
			}
		}
		
		private int? num_dining_seats1;
		[Column("num_dining_seats", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_dining_seats1")]
		public virtual int? num_dining_seats
		{
			get
			{
				return this.num_dining_seats1;
			}
			set
			{
				this.num_dining_seats1 = value;
			}
		}
		
		private int? nights_min1;
		[Column("nights_min", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("nights_min1")]
		public virtual int? nights_min
		{
			get
			{
				return this.nights_min1;
			}
			set
			{
				this.nights_min1 = value;
			}
		}
		
		private int? nights_max1;
		[Column("nights_max", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("nights_max1")]
		public virtual int? nights_max
		{
			get
			{
				return this.nights_max1;
			}
			set
			{
				this.nights_max1 = value;
			}
		}
		
		private string allow_pets1;
		[Column("allow_pets", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 20, Scale = 0, SqlType = "varchar")]
		[Storage("allow_pets1")]
		public virtual string allow_pets
		{
			get
			{
				return this.allow_pets1;
			}
			set
			{
				this.allow_pets1 = value;
			}
		}
		
		private int? allow_smoking1;
		[Column("allow_smoking", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("allow_smoking1")]
		public virtual int? allow_smoking
		{
			get
			{
				return this.allow_smoking1;
			}
			set
			{
				this.allow_smoking1 = value;
			}
		}
		
		private int? available_corporate1;
		[Column("available_corporate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("available_corporate1")]
		public virtual int? available_corporate
		{
			get
			{
				return this.available_corporate1;
			}
			set
			{
				this.available_corporate1 = value;
			}
		}
		
		private int? available_henstag1;
		[Column("available_henstag", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("available_henstag1")]
		public virtual int? available_henstag
		{
			get
			{
				return this.available_henstag1;
			}
			set
			{
				this.available_henstag1 = value;
			}
		}
		
		private int? available_house_swap1;
		[Column("available_house_swap", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("available_house_swap1")]
		public virtual int? available_house_swap
		{
			get
			{
				return this.available_house_swap1;
			}
			set
			{
				this.available_house_swap1 = value;
			}
		}
		
		private int? available_longlet1;
		[Column("available_longlet", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("available_longlet1")]
		public virtual int? available_longlet
		{
			get
			{
				return this.available_longlet1;
			}
			set
			{
				this.available_longlet1 = value;
			}
		}
		
		private int? available_shortbreak1;
		[Column("available_shortbreak", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("available_shortbreak1")]
		public virtual int? available_shortbreak
		{
			get
			{
				return this.available_shortbreak1;
			}
			set
			{
				this.available_shortbreak1 = value;
			}
		}
		
		private string guestbook1;
		[Column("guestbook", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("guestbook1")]
		public virtual string guestbook
		{
			get
			{
				return this.guestbook1;
			}
			set
			{
				this.guestbook1 = value;
			}
		}
		
		private string restricted_mobility1;
		[Column("restricted_mobility", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("restricted_mobility1")]
		public virtual string restricted_mobility
		{
			get
			{
				return this.restricted_mobility1;
			}
			set
			{
				this.restricted_mobility1 = value;
			}
		}
		
		private string suitable_children1;
		[Column("suitable_children", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("suitable_children1")]
		public virtual string suitable_children
		{
			get
			{
				return this.suitable_children1;
			}
			set
			{
				this.suitable_children1 = value;
			}
		}
		
		private string wheelchair_users1;
		[Column("wheelchair_users", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("wheelchair_users1")]
		public virtual string wheelchair_users
		{
			get
			{
				return this.wheelchair_users1;
			}
			set
			{
				this.wheelchair_users1 = value;
			}
		}
		
		private bool? has_air_condition1;
		[Column("has_air_condition", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_air_condition1")]
		public virtual bool? has_air_condition
		{
			get
			{
				return this.has_air_condition1;
			}
			set
			{
				this.has_air_condition1 = value;
			}
		}
		
		private bool? has_terrace1;
		[Column("has_terrace", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_terrace1")]
		public virtual bool? has_terrace
		{
			get
			{
				return this.has_terrace1;
			}
			set
			{
				this.has_terrace1 = value;
			}
		}
		
		private bool? has_parking1;
		[Column("has_parking", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_parking1")]
		public virtual bool? has_parking
		{
			get
			{
				return this.has_parking1;
			}
			set
			{
				this.has_parking1 = value;
			}
		}
		
		private bool? has_barbecue1;
		[Column("has_barbecue", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_barbecue1")]
		public virtual bool? has_barbecue
		{
			get
			{
				return this.has_barbecue1;
			}
			set
			{
				this.has_barbecue1 = value;
			}
		}
		
		private bool? has_boat1;
		[Column("has_boat", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_boat1")]
		public virtual bool? has_boat
		{
			get
			{
				return this.has_boat1;
			}
			set
			{
				this.has_boat1 = value;
			}
		}
		
		private bool? has_central_heating1;
		[Column("has_central_heating", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_central_heating1")]
		public virtual bool? has_central_heating
		{
			get
			{
				return this.has_central_heating1;
			}
			set
			{
				this.has_central_heating1 = value;
			}
		}
		
		private bool? has_climbing_frame1;
		[Column("has_climbing_frame", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_climbing_frame1")]
		public virtual bool? has_climbing_frame
		{
			get
			{
				return this.has_climbing_frame1;
			}
			set
			{
				this.has_climbing_frame1 = value;
			}
		}
		
		private bool? has_cloth_dryer1;
		[Column("has_cloth_dryer", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_cloth_dryer1")]
		public virtual bool? has_cloth_dryer
		{
			get
			{
				return this.has_cloth_dryer1;
			}
			set
			{
				this.has_cloth_dryer1 = value;
			}
		}
		
		private bool? has_cooker1;
		[Column("has_cooker", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_cooker1")]
		public virtual bool? has_cooker
		{
			get
			{
				return this.has_cooker1;
			}
			set
			{
				this.has_cooker1 = value;
			}
		}
		
		private bool? has_dish_washer1;
		[Column("has_dish_washer", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_dish_washer1")]
		public virtual bool? has_dish_washer
		{
			get
			{
				return this.has_dish_washer1;
			}
			set
			{
				this.has_dish_washer1 = value;
			}
		}
		
		private bool? has_dvd1;
		[Column("has_dvd", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_dvd1")]
		public virtual bool? has_dvd
		{
			get
			{
				return this.has_dvd1;
			}
			set
			{
				this.has_dvd1 = value;
			}
		}
		
		private bool? has_cd1;
		[Column("has_cd", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_cd1")]
		public virtual bool? has_cd
		{
			get
			{
				return this.has_cd1;
			}
			set
			{
				this.has_cd1 = value;
			}
		}
		
		private bool? has_fax1;
		[Column("has_fax", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_fax1")]
		public virtual bool? has_fax
		{
			get
			{
				return this.has_fax1;
			}
			set
			{
				this.has_fax1 = value;
			}
		}
		
		private bool? has_fireplace1;
		[Column("has_fireplace", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_fireplace1")]
		public virtual bool? has_fireplace
		{
			get
			{
				return this.has_fireplace1;
			}
			set
			{
				this.has_fireplace1 = value;
			}
		}
		
		private bool? has_freezer1;
		[Column("has_freezer", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_freezer1")]
		public virtual bool? has_freezer
		{
			get
			{
				return this.has_freezer1;
			}
			set
			{
				this.has_freezer1 = value;
			}
		}
		
		private bool? has_fridge1;
		[Column("has_fridge", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_fridge1")]
		public virtual bool? has_fridge
		{
			get
			{
				return this.has_fridge1;
			}
			set
			{
				this.has_fridge1 = value;
			}
		}
		
		private bool? has_games_room1;
		[Column("has_games_room", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_games_room1")]
		public virtual bool? has_games_room
		{
			get
			{
				return this.has_games_room1;
			}
			set
			{
				this.has_games_room1 = value;
			}
		}
		
		private bool? has_gym1;
		[Column("has_gym", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_gym1")]
		public virtual bool? has_gym
		{
			get
			{
				return this.has_gym1;
			}
			set
			{
				this.has_gym1 = value;
			}
		}
		
		private bool? has_hair_dryer1;
		[Column("has_hair_dryer", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_hair_dryer1")]
		public virtual bool? has_hair_dryer
		{
			get
			{
				return this.has_hair_dryer1;
			}
			set
			{
				this.has_hair_dryer1 = value;
			}
		}
		
		private bool? has_high_chair1;
		[Column("has_high_chair", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_high_chair1")]
		public virtual bool? has_high_chair
		{
			get
			{
				return this.has_high_chair1;
			}
			set
			{
				this.has_high_chair1 = value;
			}
		}
		
		private bool? has_internet_access1;
		[Column("has_internet_access", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_internet_access1")]
		public virtual bool? has_internet_access
		{
			get
			{
				return this.has_internet_access1;
			}
			set
			{
				this.has_internet_access1 = value;
			}
		}
		
		private bool? has_iron1;
		[Column("has_iron", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_iron1")]
		public virtual bool? has_iron
		{
			get
			{
				return this.has_iron1;
			}
			set
			{
				this.has_iron1 = value;
			}
		}
		
		private bool? has_jacuzzi_hot_tub1;
		[Column("has_jacuzzi_hot_tub", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_jacuzzi_hot_tub1")]
		public virtual bool? has_jacuzzi_hot_tub
		{
			get
			{
				return this.has_jacuzzi_hot_tub1;
			}
			set
			{
				this.has_jacuzzi_hot_tub1 = value;
			}
		}
		
		private bool? has_kettle1;
		[Column("has_kettle", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_kettle1")]
		public virtual bool? has_kettle
		{
			get
			{
				return this.has_kettle1;
			}
			set
			{
				this.has_kettle1 = value;
			}
		}
		
		private bool? has_microwave1;
		[Column("has_microwave", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_microwave1")]
		public virtual bool? has_microwave
		{
			get
			{
				return this.has_microwave1;
			}
			set
			{
				this.has_microwave1 = value;
			}
		}
		
		private bool? has_pingpong1;
		[Column("has_pingpong", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_pingpong1")]
		public virtual bool? has_pingpong
		{
			get
			{
				return this.has_pingpong1;
			}
			set
			{
				this.has_pingpong1 = value;
			}
		}
		
		private bool? has_pool_for_children1;
		[Column("has_pool_for_children", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_pool_for_children1")]
		public virtual bool? has_pool_for_children
		{
			get
			{
				return this.has_pool_for_children1;
			}
			set
			{
				this.has_pool_for_children1 = value;
			}
		}
		
		private bool? has_pool_private_indoor1;
		[Column("has_pool_private_indoor", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_pool_private_indoor1")]
		public virtual bool? has_pool_private_indoor
		{
			get
			{
				return this.has_pool_private_indoor1;
			}
			set
			{
				this.has_pool_private_indoor1 = value;
			}
		}
		
		private bool? has_private_outdoor_heated1;
		[Column("has_private_outdoor_heated", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_private_outdoor_heated1")]
		public virtual bool? has_private_outdoor_heated
		{
			get
			{
				return this.has_private_outdoor_heated1;
			}
			set
			{
				this.has_private_outdoor_heated1 = value;
			}
		}
		
		private bool? has_private_outdoor_unheated1;
		[Column("has_private_outdoor_unheated", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_private_outdoor_unheated1")]
		public virtual bool? has_private_outdoor_unheated
		{
			get
			{
				return this.has_private_outdoor_unheated1;
			}
			set
			{
				this.has_private_outdoor_unheated1 = value;
			}
		}
		
		private bool? has_shared_outdoor_heated1;
		[Column("has_shared_outdoor_heated", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_shared_outdoor_heated1")]
		public virtual bool? has_shared_outdoor_heated
		{
			get
			{
				return this.has_shared_outdoor_heated1;
			}
			set
			{
				this.has_shared_outdoor_heated1 = value;
			}
		}
		
		private bool? has_shared_outdoor_unheated1;
		[Column("has_shared_outdoor_unheated", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_shared_outdoor_unheated1")]
		public virtual bool? has_shared_outdoor_unheated
		{
			get
			{
				return this.has_shared_outdoor_unheated1;
			}
			set
			{
				this.has_shared_outdoor_unheated1 = value;
			}
		}
		
		private bool? has_shared_indoor1;
		[Column("has_shared_indoor", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_shared_indoor1")]
		public virtual bool? has_shared_indoor
		{
			get
			{
				return this.has_shared_indoor1;
			}
			set
			{
				this.has_shared_indoor1 = value;
			}
		}
		
		private bool? has_pool_snooker1;
		[Column("has_pool_snooker", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_pool_snooker1")]
		public virtual bool? has_pool_snooker
		{
			get
			{
				return this.has_pool_snooker1;
			}
			set
			{
				this.has_pool_snooker1 = value;
			}
		}
		
		private bool? has_private_fishing1;
		[Column("has_private_fishing", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_private_fishing1")]
		public virtual bool? has_private_fishing
		{
			get
			{
				return this.has_private_fishing1;
			}
			set
			{
				this.has_private_fishing1 = value;
			}
		}
		
		private bool? has_private_garden1;
		[Column("has_private_garden", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_private_garden1")]
		public virtual bool? has_private_garden
		{
			get
			{
				return this.has_private_garden1;
			}
			set
			{
				this.has_private_garden1 = value;
			}
		}
		
		private bool? has_private_tennis_court1;
		[Column("has_private_tennis_court", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_private_tennis_court1")]
		public virtual bool? has_private_tennis_court
		{
			get
			{
				return this.has_private_tennis_court1;
			}
			set
			{
				this.has_private_tennis_court1 = value;
			}
		}
		
		private bool? has_safe1;
		[Column("has_safe", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_safe1")]
		public virtual bool? has_safe
		{
			get
			{
				return this.has_safe1;
			}
			set
			{
				this.has_safe1 = value;
			}
		}
		
		private bool? has_satelite_tv1;
		[Column("has_satelite_tv", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_satelite_tv1")]
		public virtual bool? has_satelite_tv
		{
			get
			{
				return this.has_satelite_tv1;
			}
			set
			{
				this.has_satelite_tv1 = value;
			}
		}
		
		private bool? has_sauna1;
		[Column("has_sauna", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_sauna1")]
		public virtual bool? has_sauna
		{
			get
			{
				return this.has_sauna1;
			}
			set
			{
				this.has_sauna1 = value;
			}
		}
		
		private bool? has_sea_view1;
		[Column("has_sea_view", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_sea_view1")]
		public virtual bool? has_sea_view
		{
			get
			{
				return this.has_sea_view1;
			}
			set
			{
				this.has_sea_view1 = value;
			}
		}
		
		private bool? has_shared_garden1;
		[Column("has_shared_garden", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_shared_garden1")]
		public virtual bool? has_shared_garden
		{
			get
			{
				return this.has_shared_garden1;
			}
			set
			{
				this.has_shared_garden1 = value;
			}
		}
		
		private bool? has_shared_tennis_court1;
		[Column("has_shared_tennis_court", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_shared_tennis_court1")]
		public virtual bool? has_shared_tennis_court
		{
			get
			{
				return this.has_shared_tennis_court1;
			}
			set
			{
				this.has_shared_tennis_court1 = value;
			}
		}
		
		private bool? has_solanium_roof_terrace1;
		[Column("has_solanium_roof_terrace", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_solanium_roof_terrace1")]
		public virtual bool? has_solanium_roof_terrace
		{
			get
			{
				return this.has_solanium_roof_terrace1;
			}
			set
			{
				this.has_solanium_roof_terrace1 = value;
			}
		}
		
		private bool? has_stereo1;
		[Column("has_stereo", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_stereo1")]
		public virtual bool? has_stereo
		{
			get
			{
				return this.has_stereo1;
			}
			set
			{
				this.has_stereo1 = value;
			}
		}
		
		private bool? has_swwing_set1;
		[Column("has_swwing_set", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_swwing_set1")]
		public virtual bool? has_swwing_set
		{
			get
			{
				return this.has_swwing_set1;
			}
			set
			{
				this.has_swwing_set1 = value;
			}
		}
		
		private bool? has_telephone1;
		[Column("has_telephone", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_telephone1")]
		public virtual bool? has_telephone
		{
			get
			{
				return this.has_telephone1;
			}
			set
			{
				this.has_telephone1 = value;
			}
		}
		
		private bool? has_tv1;
		[Column("has_tv", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_tv1")]
		public virtual bool? has_tv
		{
			get
			{
				return this.has_tv1;
			}
			set
			{
				this.has_tv1 = value;
			}
		}
		
		private bool? has_toaster1;
		[Column("has_toaster", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_toaster1")]
		public virtual bool? has_toaster
		{
			get
			{
				return this.has_toaster1;
			}
			set
			{
				this.has_toaster1 = value;
			}
		}
		
		private bool? has_trampoline1;
		[Column("has_trampoline", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_trampoline1")]
		public virtual bool? has_trampoline
		{
			get
			{
				return this.has_trampoline1;
			}
			set
			{
				this.has_trampoline1 = value;
			}
		}
		
		private bool? has_video1;
		[Column("has_video", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_video1")]
		public virtual bool? has_video
		{
			get
			{
				return this.has_video1;
			}
			set
			{
				this.has_video1 = value;
			}
		}
		
		private bool? has_washing_machine1;
		[Column("has_washing_machine", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_washing_machine1")]
		public virtual bool? has_washing_machine
		{
			get
			{
				return this.has_washing_machine1;
			}
			set
			{
				this.has_washing_machine1 = value;
			}
		}
		
		private bool? has_wifi1;
		[Column("has_wifi", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_wifi1")]
		public virtual bool? has_wifi
		{
			get
			{
				return this.has_wifi1;
			}
			set
			{
				this.has_wifi1 = value;
			}
		}
		
		private bool? has_linen1;
		[Column("has_linen", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_linen1")]
		public virtual bool? has_linen
		{
			get
			{
				return this.has_linen1;
			}
			set
			{
				this.has_linen1 = value;
			}
		}
		
		private bool? has_towel1;
		[Column("has_towel", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_towel1")]
		public virtual bool? has_towel
		{
			get
			{
				return this.has_towel1;
			}
			set
			{
				this.has_towel1 = value;
			}
		}
		
		private bool? has_bicycle1;
		[Column("has_bicycle", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_bicycle1")]
		public virtual bool? has_bicycle
		{
			get
			{
				return this.has_bicycle1;
			}
			set
			{
				this.has_bicycle1 = value;
			}
		}
		
		private bool? has_secure_parking1;
		[Column("has_secure_parking", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("has_secure_parking1")]
		public virtual bool? has_secure_parking
		{
			get
			{
				return this.has_secure_parking1;
			}
			set
			{
				this.has_secure_parking1 = value;
			}
		}
		
		private bool? staffed_property1;
		[Column("staffed_property", OpenAccessType = OpenAccessType.Bit, IsNullable = true, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("staffed_property1")]
		public virtual bool? staffed_property
		{
			get
			{
				return this.staffed_property1;
			}
			set
			{
				this.staffed_property1 = value;
			}
		}
		
		private string locationContinent1;
		[Column("locationContinent", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("locationContinent1")]
		public virtual string locationContinent
		{
			get
			{
				return this.locationContinent1;
			}
			set
			{
				this.locationContinent1 = value;
			}
		}
		
		private string locationCountry1;
		[Column("locationCountry", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("locationCountry1")]
		public virtual string locationCountry
		{
			get
			{
				return this.locationCountry1;
			}
			set
			{
				this.locationCountry1 = value;
			}
		}
		
		private string locationRegion1;
		[Column("locationRegion", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("locationRegion1")]
		public virtual string locationRegion
		{
			get
			{
				return this.locationRegion1;
			}
			set
			{
				this.locationRegion1 = value;
			}
		}
		
		private string locationSubRegion1;
		[Column("locationSubRegion", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("locationSubRegion1")]
		public virtual string locationSubRegion
		{
			get
			{
				return this.locationSubRegion1;
			}
			set
			{
				this.locationSubRegion1 = value;
			}
		}
		
		private string locationSuburb1;
		[Column("locationSuburb", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("locationSuburb1")]
		public virtual string locationSuburb
		{
			get
			{
				return this.locationSuburb1;
			}
			set
			{
				this.locationSuburb1 = value;
			}
		}
		
		private string locationTown1;
		[Column("locationTown", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("locationTown1")]
		public virtual string locationTown
		{
			get
			{
				return this.locationTown1;
			}
			set
			{
				this.locationTown1 = value;
			}
		}
		
		private string loc_zip_code1;
		[Column("loc_zip_code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("loc_zip_code1")]
		public virtual string loc_zip_code
		{
			get
			{
				return this.loc_zip_code1;
			}
			set
			{
				this.loc_zip_code1 = value;
			}
		}
		
		private string loc_address1;
		[Column("loc_address", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("loc_address1")]
		public virtual string loc_address
		{
			get
			{
				return this.loc_address1;
			}
			set
			{
				this.loc_address1 = value;
			}
		}
		
		private string google_maps1;
		[Column("google_maps", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("google_maps1")]
		public virtual string google_maps
		{
			get
			{
				return this.google_maps1;
			}
			set
			{
				this.google_maps1 = value;
			}
		}
		
		private int? is_google_maps1;
		[Column("is_google_maps", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("is_google_maps1")]
		public virtual int? is_google_maps
		{
			get
			{
				return this.is_google_maps1;
			}
			set
			{
				this.is_google_maps1 = value;
			}
		}
		
		private int? map_zoom_level1;
		[Column("map_zoom_level", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("map_zoom_level1")]
		public virtual int? map_zoom_level
		{
			get
			{
				return this.map_zoom_level1;
			}
			set
			{
				this.map_zoom_level1 = value;
			}
		}
		
		private int? weekly_changeAmount1;
		[Column("weekly_changeAmount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekly_changeAmount1")]
		public virtual int? weekly_changeAmount
		{
			get
			{
				return this.weekly_changeAmount1;
			}
			set
			{
				this.weekly_changeAmount1 = value;
			}
		}
		
		private int? weekday_changeAmount1;
		[Column("weekday_changeAmount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekday_changeAmount1")]
		public virtual int? weekday_changeAmount
		{
			get
			{
				return this.weekday_changeAmount1;
			}
			set
			{
				this.weekday_changeAmount1 = value;
			}
		}
		
		private int? weekend_changeAmount1;
		[Column("weekend_changeAmount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekend_changeAmount1")]
		public virtual int? weekend_changeAmount
		{
			get
			{
				return this.weekend_changeAmount1;
			}
			set
			{
				this.weekend_changeAmount1 = value;
			}
		}
		
		private int? weekly_changeIsDiscount1;
		[Column("weekly_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekly_changeIsDiscount1")]
		public virtual int? weekly_changeIsDiscount
		{
			get
			{
				return this.weekly_changeIsDiscount1;
			}
			set
			{
				this.weekly_changeIsDiscount1 = value;
			}
		}
		
		private int? weekday_changeIsDiscount1;
		[Column("weekday_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekday_changeIsDiscount1")]
		public virtual int? weekday_changeIsDiscount
		{
			get
			{
				return this.weekday_changeIsDiscount1;
			}
			set
			{
				this.weekday_changeIsDiscount1 = value;
			}
		}
		
		private int? weekend_changeIsDiscount1;
		[Column("weekend_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekend_changeIsDiscount1")]
		public virtual int? weekend_changeIsDiscount
		{
			get
			{
				return this.weekend_changeIsDiscount1;
			}
			set
			{
				this.weekend_changeIsDiscount1 = value;
			}
		}
		
		private int? weekly_changeIsPercentage1;
		[Column("weekly_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekly_changeIsPercentage1")]
		public virtual int? weekly_changeIsPercentage
		{
			get
			{
				return this.weekly_changeIsPercentage1;
			}
			set
			{
				this.weekly_changeIsPercentage1 = value;
			}
		}
		
		private int? weekday_changeIsPercentage1;
		[Column("weekday_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekday_changeIsPercentage1")]
		public virtual int? weekday_changeIsPercentage
		{
			get
			{
				return this.weekday_changeIsPercentage1;
			}
			set
			{
				this.weekday_changeIsPercentage1 = value;
			}
		}
		
		private int? weekend_changeIsPercentage1;
		[Column("weekend_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekend_changeIsPercentage1")]
		public virtual int? weekend_changeIsPercentage
		{
			get
			{
				return this.weekend_changeIsPercentage1;
			}
			set
			{
				this.weekend_changeIsPercentage1 = value;
			}
		}
		
		private bool ActiveState1;
		[Column("ActiveState", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("ActiveState1")]
		public virtual bool ActiveState
		{
			get
			{
				return this.ActiveState1;
			}
			set
			{
				this.ActiveState1 = value;
			}
		}
		
		private long? SiteId1;
		[Column("SiteId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("SiteId1")]
		public virtual long? SiteId
		{
			get
			{
				return this.SiteId1;
			}
			set
			{
				this.SiteId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlHolidayEstateRateChangesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlHolidayEstateRateChangesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private int weekly_changeAmount1;
		[Column("weekly_changeAmount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekly_changeAmount1")]
		public virtual int weekly_changeAmount
		{
			get
			{
				return this.weekly_changeAmount1;
			}
			set
			{
				this.weekly_changeAmount1 = value;
			}
		}
		
		private int weekday_changeAmount1;
		[Column("weekday_changeAmount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekday_changeAmount1")]
		public virtual int weekday_changeAmount
		{
			get
			{
				return this.weekday_changeAmount1;
			}
			set
			{
				this.weekday_changeAmount1 = value;
			}
		}
		
		private int weekend_changeAmount1;
		[Column("weekend_changeAmount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekend_changeAmount1")]
		public virtual int weekend_changeAmount
		{
			get
			{
				return this.weekend_changeAmount1;
			}
			set
			{
				this.weekend_changeAmount1 = value;
			}
		}
		
		private int weekly_changeIsDiscount1;
		[Column("weekly_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekly_changeIsDiscount1")]
		public virtual int weekly_changeIsDiscount
		{
			get
			{
				return this.weekly_changeIsDiscount1;
			}
			set
			{
				this.weekly_changeIsDiscount1 = value;
			}
		}
		
		private int weekday_changeIsDiscount1;
		[Column("weekday_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekday_changeIsDiscount1")]
		public virtual int weekday_changeIsDiscount
		{
			get
			{
				return this.weekday_changeIsDiscount1;
			}
			set
			{
				this.weekday_changeIsDiscount1 = value;
			}
		}
		
		private int weekend_changeIsDiscount1;
		[Column("weekend_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekend_changeIsDiscount1")]
		public virtual int weekend_changeIsDiscount
		{
			get
			{
				return this.weekend_changeIsDiscount1;
			}
			set
			{
				this.weekend_changeIsDiscount1 = value;
			}
		}
		
		private int weekly_changeIsPercentage1;
		[Column("weekly_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekly_changeIsPercentage1")]
		public virtual int weekly_changeIsPercentage
		{
			get
			{
				return this.weekly_changeIsPercentage1;
			}
			set
			{
				this.weekly_changeIsPercentage1 = value;
			}
		}
		
		private int weekday_changeIsPercentage1;
		[Column("weekday_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekday_changeIsPercentage1")]
		public virtual int weekday_changeIsPercentage
		{
			get
			{
				return this.weekday_changeIsPercentage1;
			}
			set
			{
				this.weekday_changeIsPercentage1 = value;
			}
		}
		
		private int weekend_changeIsPercentage1;
		[Column("weekend_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("weekend_changeIsPercentage1")]
		public virtual int weekend_changeIsPercentage
		{
			get
			{
				return this.weekend_changeIsPercentage1;
			}
			set
			{
				this.weekend_changeIsPercentage1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlHolidayEstateClosedDatesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlHolidayEstateClosedDatesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private int isClosed1;
		[Column("isClosed", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isClosed1")]
		public virtual int isClosed
		{
			get
			{
				return this.isClosed1;
			}
			set
			{
				this.isClosed1 = value;
			}
		}
		
		private int minStay1;
		[Column("minStay", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minStay1")]
		public virtual int minStay
		{
			get
			{
				return this.minStay1;
			}
			set
			{
				this.minStay1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntAgentPriceChangeLimitTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntAgentPriceChangeLimitTBL
	{
		private long pidAgent1;
		[Column("pidAgent", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidAgent1")]
		public virtual long pidAgent
		{
			get
			{
				return this.pidAgent1;
			}
			set
			{
				this.pidAgent1 = value;
			}
		}
		
		private int numPersons1;
		[Column("numPersons", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("numPersons1")]
		public virtual int numPersons
		{
			get
			{
				return this.numPersons1;
			}
			set
			{
				this.numPersons1 = value;
			}
		}
		
		private int discountLimit1;
		[Column("discountLimit", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("discountLimit1")]
		public virtual int discountLimit
		{
			get
			{
				return this.discountLimit1;
			}
			set
			{
				this.discountLimit1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntReservationLastUpdatedLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntReservationLastUpdatedLOG
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private DateTime lastUpdatedDate1;
		[Column("lastUpdatedDate", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("lastUpdatedDate1")]
		public virtual DateTime lastUpdatedDate
		{
			get
			{
				return this.lastUpdatedDate1;
			}
			set
			{
				this.lastUpdatedDate1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateMediaTAG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntEstateMediaTAG
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntBcomHotelTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntBcomHotelTBL
	{
		private string hotelId1;
		[Column("hotelId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("hotelId1")]
		public virtual string hotelId
		{
			get
			{
				return this.hotelId1;
			}
			set
			{
				this.hotelId1 = value;
			}
		}
		
		private string username1;
		[Column("username", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("username1")]
		public virtual string username
		{
			get
			{
				return this.username1;
			}
			set
			{
				this.username1 = value;
			}
		}
		
		private string password1;
		[Column("password", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("password1")]
		public virtual string password
		{
			get
			{
				return this.password1;
			}
			set
			{
				this.password1 = value;
			}
		}
		
		private string rateIdStandard1;
		[Column("rateIdStandard", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("rateIdStandard1")]
		public virtual string rateIdStandard
		{
			get
			{
				return this.rateIdStandard1;
			}
			set
			{
				this.rateIdStandard1 = value;
			}
		}
		
		private string rateIdNotRefund1;
		[Column("rateIdNotRefund", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("rateIdNotRefund1")]
		public virtual string rateIdNotRefund
		{
			get
			{
				return this.rateIdNotRefund1;
			}
			set
			{
				this.rateIdNotRefund1 = value;
			}
		}
		
		private string rateIdSpecial1;
		[Column("rateIdSpecial", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("rateIdSpecial1")]
		public virtual string rateIdSpecial
		{
			get
			{
				return this.rateIdSpecial1;
			}
			set
			{
				this.rateIdSpecial1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private string rateIdStandard21;
		[Column("rateIdStandard2", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("rateIdStandard21")]
		public virtual string rateIdStandard2
		{
			get
			{
				return this.rateIdStandard21;
			}
			set
			{
				this.rateIdStandard21 = value;
			}
		}
		
		private string rateIdStandard31;
		[Column("rateIdStandard3", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("rateIdStandard31")]
		public virtual string rateIdStandard3
		{
			get
			{
				return this.rateIdStandard31;
			}
			set
			{
				this.rateIdStandard31 = value;
			}
		}
		
		private string rateIdStandard41;
		[Column("rateIdStandard4", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("rateIdStandard41")]
		public virtual string rateIdStandard4
		{
			get
			{
				return this.rateIdStandard41;
			}
			set
			{
				this.rateIdStandard41 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntAgentEstateRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntAgentEstateRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private long pidAgent1;
		[Column("pidAgent", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidAgent1")]
		public virtual long pidAgent
		{
			get
			{
				return this.pidAgent1;
			}
			set
			{
				this.pidAgent1 = value;
			}
		}
		
		private string estateTitle1;
		[Column("estateTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("estateTitle1")]
		public virtual string estateTitle
		{
			get
			{
				return this.estateTitle1;
			}
			set
			{
				this.estateTitle1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntAgentWLPaymentRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntAgentWLPaymentRL
	{
		private long pidAgent1;
		[Column("pidAgent", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidAgent1")]
		public virtual long pidAgent
		{
			get
			{
				return this.pidAgent1;
			}
			set
			{
				this.pidAgent1 = value;
			}
		}
		
		private string paymentType1;
		[Column("paymentType", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("paymentType1")]
		public virtual string paymentType
		{
			get
			{
				return this.paymentType1;
			}
			set
			{
				this.paymentType1 = value;
			}
		}
		
		private string email1;
		[Column("email", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("email1")]
		public virtual string email
		{
			get
			{
				return this.email1;
			}
			set
			{
				this.email1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateInternsTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntEstateInternsTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string pidInternsType1;
		[Column("pidInternsType", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pidInternsType1")]
		public virtual string pidInternsType
		{
			get
			{
				return this.pidInternsType1;
			}
			set
			{
				this.pidInternsType1 = value;
			}
		}
		
		private int pidInternsSubType1;
		[Column("pidInternsSubType", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidInternsSubType1")]
		public virtual int pidInternsSubType
		{
			get
			{
				return this.pidInternsSubType1;
			}
			set
			{
				this.pidInternsSubType1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateInternsSubTypeTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntEstateInternsSubTypeTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string pidInternsType1;
		[Column("pidInternsType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pidInternsType1")]
		public virtual string pidInternsType
		{
			get
			{
				return this.pidInternsType1;
			}
			set
			{
				this.pidInternsType1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateInternsFeatureTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntEstateInternsFeatureTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string pidInternsType1;
		[Column("pidInternsType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pidInternsType1")]
		public virtual string pidInternsType
		{
			get
			{
				return this.pidInternsType1;
			}
			set
			{
				this.pidInternsType1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateInternsFeatureRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateInternsFeatureRL
	{
		private int pidEstateInterns1;
		[Column("pidEstateInterns", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstateInterns1")]
		public virtual int pidEstateInterns
		{
			get
			{
				return this.pidEstateInterns1;
			}
			set
			{
				this.pidEstateInterns1 = value;
			}
		}
		
		private int pidInternsFeature1;
		[Column("pidInternsFeature", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidInternsFeature1")]
		public virtual int pidInternsFeature
		{
			get
			{
				return this.pidInternsFeature1;
			}
			set
			{
				this.pidInternsFeature1 = value;
			}
		}
		
		private int? count1;
		[Column("count", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("count1")]
		public virtual int? count
		{
			get
			{
				return this.count1;
			}
			set
			{
				this.count1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[View("RntEstateInternsSubTypeVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateInternsSubTypeVIEW
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string pidInternsType1;
		[Column("pidInternsType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pidInternsType1")]
		public virtual string pidInternsType
		{
			get
			{
				return this.pidInternsType1;
			}
			set
			{
				this.pidInternsType1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateInternsSubTypeLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateInternsSubTypeLN
	{
		private int pidInternsSubType1;
		[Column("pidInternsSubType", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidInternsSubType1")]
		public virtual int pidInternsSubType
		{
			get
			{
				return this.pidInternsSubType1;
			}
			set
			{
				this.pidInternsSubType1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateInternsLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateInternsLN
	{
		private int pidEstateInterns1;
		[Column("pidEstateInterns", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstateInterns1")]
		public virtual int pidEstateInterns
		{
			get
			{
				return this.pidEstateInterns1;
			}
			set
			{
				this.pidEstateInterns1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[View("RntEstateInternsVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateInternsVIEW
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string pidInternsType1;
		[Column("pidInternsType", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pidInternsType1")]
		public virtual string pidInternsType
		{
			get
			{
				return this.pidInternsType1;
			}
			set
			{
				this.pidInternsType1 = value;
			}
		}
		
		private int pidInternsSubType1;
		[Column("pidInternsSubType", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidInternsSubType1")]
		public virtual int pidInternsSubType
		{
			get
			{
				return this.pidInternsSubType1;
			}
			set
			{
				this.pidInternsSubType1 = value;
			}
		}
		
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[View("RntEstateInternsFeatureVIEW")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateInternsFeatureVIEW
	{
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string pidInternsType1;
		[Column("pidInternsType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pidInternsType1")]
		public virtual string pidInternsType
		{
			get
			{
				return this.pidInternsType1;
			}
			set
			{
				this.pidInternsType1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateInternsFeatureLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntEstateInternsFeatureLN
	{
		private int pidInternsFeature1;
		[Column("pidInternsFeature", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidInternsFeature1")]
		public virtual int pidInternsFeature
		{
			get
			{
				return this.pidInternsFeature1;
			}
			set
			{
				this.pidInternsFeature1 = value;
			}
		}
		
		private int pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntEstateCommentsTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntEstateCommentsTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int? pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private long? pidReservation1;
		[Column("pidReservation", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidReservation1")]
		public virtual long? pidReservation
		{
			get
			{
				return this.pidReservation1;
			}
			set
			{
				this.pidReservation1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string pers1;
		[Column("pers", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("pers1")]
		public virtual string pers
		{
			get
			{
				return this.pers1;
			}
			set
			{
				this.pers1 = value;
			}
		}
		
		private decimal? vote1;
		[Column("vote", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("vote1")]
		public virtual decimal? vote
		{
			get
			{
				return this.vote1;
			}
			set
			{
				this.vote1 = value;
			}
		}
		
		private int? voteStaff1;
		[Column("voteStaff", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("voteStaff1")]
		public virtual int? voteStaff
		{
			get
			{
				return this.voteStaff1;
			}
			set
			{
				this.voteStaff1 = value;
			}
		}
		
		private int? voteService1;
		[Column("voteService", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("voteService1")]
		public virtual int? voteService
		{
			get
			{
				return this.voteService1;
			}
			set
			{
				this.voteService1 = value;
			}
		}
		
		private int? voteCleaning1;
		[Column("voteCleaning", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("voteCleaning1")]
		public virtual int? voteCleaning
		{
			get
			{
				return this.voteCleaning1;
			}
			set
			{
				this.voteCleaning1 = value;
			}
		}
		
		private int? voteComfort1;
		[Column("voteComfort", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("voteComfort1")]
		public virtual int? voteComfort
		{
			get
			{
				return this.voteComfort1;
			}
			set
			{
				this.voteComfort1 = value;
			}
		}
		
		private int? voteQualityPrice1;
		[Column("voteQualityPrice", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("voteQualityPrice1")]
		public virtual int? voteQualityPrice
		{
			get
			{
				return this.voteQualityPrice1;
			}
			set
			{
				this.voteQualityPrice1 = value;
			}
		}
		
		private int? votePosition1;
		[Column("votePosition", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("votePosition1")]
		public virtual int? votePosition
		{
			get
			{
				return this.votePosition1;
			}
			set
			{
				this.votePosition1 = value;
			}
		}
		
		private int? cl_id1;
		[Column("cl_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cl_id1")]
		public virtual int? cl_id
		{
			get
			{
				return this.cl_id1;
			}
			set
			{
				this.cl_id1 = value;
			}
		}
		
		private int? cl_pid_lang1;
		[Column("cl_pid_lang", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cl_pid_lang1")]
		public virtual int? cl_pid_lang
		{
			get
			{
				return this.cl_pid_lang1;
			}
			set
			{
				this.cl_pid_lang1 = value;
			}
		}
		
		private string cl_email1;
		[Column("cl_email", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_email1")]
		public virtual string cl_email
		{
			get
			{
				return this.cl_email1;
			}
			set
			{
				this.cl_email1 = value;
			}
		}
		
		private string cl_name_honorific1;
		[Column("cl_name_honorific", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_name_honorific1")]
		public virtual string cl_name_honorific
		{
			get
			{
				return this.cl_name_honorific1;
			}
			set
			{
				this.cl_name_honorific1 = value;
			}
		}
		
		private string cl_name_full1;
		[Column("cl_name_full", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_name_full1")]
		public virtual string cl_name_full
		{
			get
			{
				return this.cl_name_full1;
			}
			set
			{
				this.cl_name_full1 = value;
			}
		}
		
		private string cl_country1;
		[Column("cl_country", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_country1")]
		public virtual string cl_country
		{
			get
			{
				return this.cl_country1;
			}
			set
			{
				this.cl_country1 = value;
			}
		}
		
		private string subject1;
		[Column("subject", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("subject1")]
		public virtual string subject
		{
			get
			{
				return this.subject1;
			}
			set
			{
				this.subject1 = value;
			}
		}
		
		private string body1;
		[Column("body", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("body1")]
		public virtual string body
		{
			get
			{
				return this.body1;
			}
			set
			{
				this.body1 = value;
			}
		}
		
		private string bodyNegative1;
		[Column("bodyNegative", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("bodyNegative1")]
		public virtual string bodyNegative
		{
			get
			{
				return this.bodyNegative1;
			}
			set
			{
				this.bodyNegative1 = value;
			}
		}
		
		private DateTime? dtCreation1;
		[Column("dtCreation", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtCreation1")]
		public virtual DateTime? dtCreation
		{
			get
			{
				return this.dtCreation1;
			}
			set
			{
				this.dtCreation1 = value;
			}
		}
		
		private DateTime? dtComment1;
		[Column("dtComment", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtComment1")]
		public virtual DateTime? dtComment
		{
			get
			{
				return this.dtComment1;
			}
			set
			{
				this.dtComment1 = value;
			}
		}
		
		private int? pid_user1;
		[Column("pid_user", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_user1")]
		public virtual int? pid_user
		{
			get
			{
				return this.pid_user1;
			}
			set
			{
				this.pid_user1 = value;
			}
		}
		
		private int isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private int isAnonymous1;
		[Column("isAnonymous", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isAnonymous1")]
		public virtual int isAnonymous
		{
			get
			{
				return this.isAnonymous1;
			}
			set
			{
				this.isAnonymous1 = value;
			}
		}
		
		private int? isVisibleHomePage1;
		[Column("isVisibleHomePage", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isVisibleHomePage1")]
		public virtual int? isVisibleHomePage
		{
			get
			{
				return this.isVisibleHomePage1;
			}
			set
			{
				this.isVisibleHomePage1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntReservationTMP")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntReservationTMP
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int? pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private int? pidEstateCity1;
		[Column("pidEstateCity", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstateCity1")]
		public virtual int? pidEstateCity
		{
			get
			{
				return this.pidEstateCity1;
			}
			set
			{
				this.pidEstateCity1 = value;
			}
		}
		
		private int? pidRelatedRequest1;
		[Column("pidRelatedRequest", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidRelatedRequest1")]
		public virtual int? pidRelatedRequest
		{
			get
			{
				return this.pidRelatedRequest1;
			}
			set
			{
				this.pidRelatedRequest1 = value;
			}
		}
		
		private int? pidOperator1;
		[Column("pidOperator", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidOperator1")]
		public virtual int? pidOperator
		{
			get
			{
				return this.pidOperator1;
			}
			set
			{
				this.pidOperator1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private int? cl_id1;
		[Column("cl_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cl_id1")]
		public virtual int? cl_id
		{
			get
			{
				return this.cl_id1;
			}
			set
			{
				this.cl_id1 = value;
			}
		}
		
		private int? cl_pid_lang1;
		[Column("cl_pid_lang", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cl_pid_lang1")]
		public virtual int? cl_pid_lang
		{
			get
			{
				return this.cl_pid_lang1;
			}
			set
			{
				this.cl_pid_lang1 = value;
			}
		}
		
		private string cl_email1;
		[Column("cl_email", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_email1")]
		public virtual string cl_email
		{
			get
			{
				return this.cl_email1;
			}
			set
			{
				this.cl_email1 = value;
			}
		}
		
		private string cl_name_honorific1;
		[Column("cl_name_honorific", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_name_honorific1")]
		public virtual string cl_name_honorific
		{
			get
			{
				return this.cl_name_honorific1;
			}
			set
			{
				this.cl_name_honorific1 = value;
			}
		}
		
		private string cl_name_full1;
		[Column("cl_name_full", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_name_full1")]
		public virtual string cl_name_full
		{
			get
			{
				return this.cl_name_full1;
			}
			set
			{
				this.cl_name_full1 = value;
			}
		}
		
		private string cl_loc_country1;
		[Column("cl_loc_country", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_loc_country1")]
		public virtual string cl_loc_country
		{
			get
			{
				return this.cl_loc_country1;
			}
			set
			{
				this.cl_loc_country1 = value;
			}
		}
		
		private string cl_contact_phone_mobile1;
		[Column("cl_contact_phone_mobile", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_contact_phone_mobile1")]
		public virtual string cl_contact_phone_mobile
		{
			get
			{
				return this.cl_contact_phone_mobile1;
			}
			set
			{
				this.cl_contact_phone_mobile1 = value;
			}
		}
		
		private int? numPers_adult1;
		[Column("numPers_adult", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("numPers_adult1")]
		public virtual int? numPers_adult
		{
			get
			{
				return this.numPers_adult1;
			}
			set
			{
				this.numPers_adult1 = value;
			}
		}
		
		private int? numPers_childOver1;
		[Column("numPers_childOver", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("numPers_childOver1")]
		public virtual int? numPers_childOver
		{
			get
			{
				return this.numPers_childOver1;
			}
			set
			{
				this.numPers_childOver1 = value;
			}
		}
		
		private int? numPers_childMin1;
		[Column("numPers_childMin", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("numPers_childMin1")]
		public virtual int? numPers_childMin
		{
			get
			{
				return this.numPers_childMin1;
			}
			set
			{
				this.numPers_childMin1 = value;
			}
		}
		
		private DateTime? dtStart1;
		[Column("dtStart", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtStart1")]
		public virtual DateTime? dtStart
		{
			get
			{
				return this.dtStart1;
			}
			set
			{
				this.dtStart1 = value;
			}
		}
		
		private DateTime? dtEnd1;
		[Column("dtEnd", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtEnd1")]
		public virtual DateTime? dtEnd
		{
			get
			{
				return this.dtEnd1;
			}
			set
			{
				this.dtEnd1 = value;
			}
		}
		
		private decimal? pr_reservation1;
		[Column("pr_reservation", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_reservation1")]
		public virtual decimal? pr_reservation
		{
			get
			{
				return this.pr_reservation1;
			}
			set
			{
				this.pr_reservation1 = value;
			}
		}
		
		private decimal? pr_part_payment_total1;
		[Column("pr_part_payment_total", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_payment_total1")]
		public virtual decimal? pr_part_payment_total
		{
			get
			{
				return this.pr_part_payment_total1;
			}
			set
			{
				this.pr_part_payment_total1 = value;
			}
		}
		
		private decimal? pr_part_owner1;
		[Column("pr_part_owner", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_owner1")]
		public virtual decimal? pr_part_owner
		{
			get
			{
				return this.pr_part_owner1;
			}
			set
			{
				this.pr_part_owner1 = value;
			}
		}
		
		private decimal? pr_part_agency_fee1;
		[Column("pr_part_agency_fee", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_agency_fee1")]
		public virtual decimal? pr_part_agency_fee
		{
			get
			{
				return this.pr_part_agency_fee1;
			}
			set
			{
				this.pr_part_agency_fee1 = value;
			}
		}
		
		private decimal? pr_ecoPrice1;
		[Column("pr_ecoPrice", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_ecoPrice1")]
		public virtual decimal? pr_ecoPrice
		{
			get
			{
				return this.pr_ecoPrice1;
			}
			set
			{
				this.pr_ecoPrice1 = value;
			}
		}
		
		private decimal? pr_ecoCount1;
		[Column("pr_ecoCount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_ecoCount1")]
		public virtual decimal? pr_ecoCount
		{
			get
			{
				return this.pr_ecoCount1;
			}
			set
			{
				this.pr_ecoCount1 = value;
			}
		}
		
		private decimal? pr_srsPrice1;
		[Column("pr_srsPrice", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_srsPrice1")]
		public virtual decimal? pr_srsPrice
		{
			get
			{
				return this.pr_srsPrice1;
			}
			set
			{
				this.pr_srsPrice1 = value;
			}
		}
		
		private decimal? pr_part_forPayment1;
		[Column("pr_part_forPayment", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_forPayment1")]
		public virtual decimal? pr_part_forPayment
		{
			get
			{
				return this.pr_part_forPayment1;
			}
			set
			{
				this.pr_part_forPayment1 = value;
			}
		}
		
		private decimal? pr_total1;
		[Column("pr_total", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_total1")]
		public virtual decimal? pr_total
		{
			get
			{
				return this.pr_total1;
			}
			set
			{
				this.pr_total1 = value;
			}
		}
		
		private decimal? pr_deposit1;
		[Column("pr_deposit", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_deposit1")]
		public virtual decimal? pr_deposit
		{
			get
			{
				return this.pr_deposit1;
			}
			set
			{
				this.pr_deposit1 = value;
			}
		}
		
		private int? pr_isManual1;
		[Column("pr_isManual", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pr_isManual1")]
		public virtual int? pr_isManual
		{
			get
			{
				return this.pr_isManual1;
			}
			set
			{
				this.pr_isManual1 = value;
			}
		}
		
		private long? agentID1;
		[Column("agentID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("agentID1")]
		public virtual long? agentID
		{
			get
			{
				return this.agentID1;
			}
			set
			{
				this.agentID1 = value;
			}
		}
		
		private decimal? agentCommissionPerc1;
		[Column("agentCommissionPerc", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("agentCommissionPerc1")]
		public virtual decimal? agentCommissionPerc
		{
			get
			{
				return this.agentCommissionPerc1;
			}
			set
			{
				this.agentCommissionPerc1 = value;
			}
		}
		
		private decimal? agentCommissionPrice1;
		[Column("agentCommissionPrice", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("agentCommissionPrice1")]
		public virtual decimal? agentCommissionPrice
		{
			get
			{
				return this.agentCommissionPrice1;
			}
			set
			{
				this.agentCommissionPrice1 = value;
			}
		}
		
		private long? agentClientID1;
		[Column("agentClientID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("agentClientID1")]
		public virtual long? agentClientID
		{
			get
			{
				return this.agentClientID1;
			}
			set
			{
				this.agentClientID1 = value;
			}
		}
		
		private decimal? pr_part_extraServices1;
		[Column("pr_part_extraServices", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_extraServices1")]
		public virtual decimal? pr_part_extraServices
		{
			get
			{
				return this.pr_part_extraServices1;
			}
			set
			{
				this.pr_part_extraServices1 = value;
			}
		}
		
		private decimal? pr_part_tax1;
		[Column("pr_part_tax", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_tax1")]
		public virtual decimal? pr_part_tax
		{
			get
			{
				return this.pr_part_tax1;
			}
			set
			{
				this.pr_part_tax1 = value;
			}
		}
		
		private decimal? prTotalRate1;
		[Column("prTotalRate", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("prTotalRate1")]
		public virtual decimal? prTotalRate
		{
			get
			{
				return this.prTotalRate1;
			}
			set
			{
				this.prTotalRate1 = value;
			}
		}
		
		private decimal? prTotalOwner1;
		[Column("prTotalOwner", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("prTotalOwner1")]
		public virtual decimal? prTotalOwner
		{
			get
			{
				return this.prTotalOwner1;
			}
			set
			{
				this.prTotalOwner1 = value;
			}
		}
		
		private decimal? prTotalCommission1;
		[Column("prTotalCommission", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("prTotalCommission1")]
		public virtual decimal? prTotalCommission
		{
			get
			{
				return this.prTotalCommission1;
			}
			set
			{
				this.prTotalCommission1 = value;
			}
		}
		
		private decimal? prDiscountSpecialOffer1;
		[Column("prDiscountSpecialOffer", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("prDiscountSpecialOffer1")]
		public virtual decimal? prDiscountSpecialOffer
		{
			get
			{
				return this.prDiscountSpecialOffer1;
			}
			set
			{
				this.prDiscountSpecialOffer1 = value;
			}
		}
		
		private decimal? prDiscountLongStay1;
		[Column("prDiscountLongStay", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("prDiscountLongStay1")]
		public virtual decimal? prDiscountLongStay
		{
			get
			{
				return this.prDiscountLongStay1;
			}
			set
			{
				this.prDiscountLongStay1 = value;
			}
		}
		
		private string prDiscountLongStayDesc1;
		[Column("prDiscountLongStayDesc", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("prDiscountLongStayDesc1")]
		public virtual string prDiscountLongStayDesc
		{
			get
			{
				return this.prDiscountLongStayDesc1;
			}
			set
			{
				this.prDiscountLongStayDesc1 = value;
			}
		}
		
		private decimal? prDiscountLongRange1;
		[Column("prDiscountLongRange", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("prDiscountLongRange1")]
		public virtual decimal? prDiscountLongRange
		{
			get
			{
				return this.prDiscountLongRange1;
			}
			set
			{
				this.prDiscountLongRange1 = value;
			}
		}
		
		private string prDiscountLongRangeDesc1;
		[Column("prDiscountLongRangeDesc", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("prDiscountLongRangeDesc1")]
		public virtual string prDiscountLongRangeDesc
		{
			get
			{
				return this.prDiscountLongRangeDesc1;
			}
			set
			{
				this.prDiscountLongRangeDesc1 = value;
			}
		}
		
		private decimal? prDiscountLastMinute1;
		[Column("prDiscountLastMinute", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("prDiscountLastMinute1")]
		public virtual decimal? prDiscountLastMinute
		{
			get
			{
				return this.prDiscountLastMinute1;
			}
			set
			{
				this.prDiscountLastMinute1 = value;
			}
		}
		
		private string prDiscountLastMinuteDesc1;
		[Column("prDiscountLastMinuteDesc", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("prDiscountLastMinuteDesc1")]
		public virtual string prDiscountLastMinuteDesc
		{
			get
			{
				return this.prDiscountLastMinuteDesc1;
			}
			set
			{
				this.prDiscountLastMinuteDesc1 = value;
			}
		}
		
		private decimal? deleteFromHere1;
		[Column("deleteFromHere", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("deleteFromHere1")]
		public virtual decimal? deleteFromHere
		{
			get
			{
				return this.deleteFromHere1;
			}
			set
			{
				this.deleteFromHere1 = value;
			}
		}
		
		private decimal? pr_part_commission1;
		[Column("pr_part_commission", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_commission1")]
		public virtual decimal? pr_part_commission
		{
			get
			{
				return this.pr_part_commission1;
			}
			set
			{
				this.pr_part_commission1 = value;
			}
		}
		
		private decimal? prOptioniExtra1;
		[Column("prOptioniExtra", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("prOptioniExtra1")]
		public virtual decimal? prOptioniExtra
		{
			get
			{
				return this.prOptioniExtra1;
			}
			set
			{
				this.prOptioniExtra1 = value;
			}
		}
		
		private decimal? pr_part_OptioniExtra1;
		[Column("pr_part_OptioniExtra", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_OptioniExtra1")]
		public virtual decimal? pr_part_OptioniExtra
		{
			get
			{
				return this.pr_part_OptioniExtra1;
			}
			set
			{
				this.pr_part_OptioniExtra1 = value;
			}
		}
		
		private decimal? pr_optioni_feeling1;
		[Column("pr_optioni_feeling", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_optioni_feeling1")]
		public virtual decimal? pr_optioni_feeling
		{
			get
			{
				return this.pr_optioni_feeling1;
			}
			set
			{
				this.pr_optioni_feeling1 = value;
			}
		}
		
		private decimal? pr_optioni_owner1;
		[Column("pr_optioni_owner", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_optioni_owner1")]
		public virtual decimal? pr_optioni_owner
		{
			get
			{
				return this.pr_optioni_owner1;
			}
			set
			{
				this.pr_optioni_owner1 = value;
			}
		}
		
		private int? agentCommissionNotInTotal1;
		[Column("agentCommissionNotInTotal", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("agentCommissionNotInTotal1")]
		public virtual int? agentCommissionNotInTotal
		{
			get
			{
				return this.agentCommissionNotInTotal1;
			}
			set
			{
				this.agentCommissionNotInTotal1 = value;
			}
		}
		
		private int? requestFullPayAccepted1;
		[Column("requestFullPayAccepted", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("requestFullPayAccepted1")]
		public virtual int? requestFullPayAccepted
		{
			get
			{
				return this.requestFullPayAccepted1;
			}
			set
			{
				this.requestFullPayAccepted1 = value;
			}
		}
		
		private int? pidEstateCountry1;
		[Column("pidEstateCountry", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstateCountry1")]
		public virtual int? pidEstateCountry
		{
			get
			{
				return this.pidEstateCountry1;
			}
			set
			{
				this.pidEstateCountry1 = value;
			}
		}
		
		private int? pid_related_request1;
		[Column("pid_related_request", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_related_request1")]
		public virtual int? pid_related_request
		{
			get
			{
				return this.pid_related_request1;
			}
			set
			{
				this.pid_related_request1 = value;
			}
		}
		
		private int? pid_operator1;
		[Column("pid_operator", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_operator1")]
		public virtual int? pid_operator
		{
			get
			{
				return this.pid_operator1;
			}
			set
			{
				this.pid_operator1 = value;
			}
		}
		
		private decimal? pr_discount_owner1;
		[Column("pr_discount_owner", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_discount_owner1")]
		public virtual decimal? pr_discount_owner
		{
			get
			{
				return this.pr_discount_owner1;
			}
			set
			{
				this.pr_discount_owner1 = value;
			}
		}
		
		private decimal? pr_discount_commission1;
		[Column("pr_discount_commission", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_discount_commission1")]
		public virtual decimal? pr_discount_commission
		{
			get
			{
				return this.pr_discount_commission1;
			}
			set
			{
				this.pr_discount_commission1 = value;
			}
		}
		
		private string pr_discount_desc1;
		[Column("pr_discount_desc", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("pr_discount_desc1")]
		public virtual string pr_discount_desc
		{
			get
			{
				return this.pr_discount_desc1;
			}
			set
			{
				this.pr_discount_desc1 = value;
			}
		}
		
		private int? pr_discount_custom1;
		[Column("pr_discount_custom", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pr_discount_custom1")]
		public virtual int? pr_discount_custom
		{
			get
			{
				return this.pr_discount_custom1;
			}
			set
			{
				this.pr_discount_custom1 = value;
			}
		}
		
		private decimal? pr_part_commission_tf1;
		[Column("pr_part_commission_tf", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_commission_tf1")]
		public virtual decimal? pr_part_commission_tf
		{
			get
			{
				return this.pr_part_commission_tf1;
			}
			set
			{
				this.pr_part_commission_tf1 = value;
			}
		}
		
		private decimal? pr_part_commission_total1;
		[Column("pr_part_commission_total", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("pr_part_commission_total1")]
		public virtual decimal? pr_part_commission_total
		{
			get
			{
				return this.pr_part_commission_total1;
			}
			set
			{
				this.pr_part_commission_total1 = value;
			}
		}
		
		private int? agentDiscountType1;
		[Column("agentDiscountType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("agentDiscountType1")]
		public virtual int? agentDiscountType
		{
			get
			{
				return this.agentDiscountType1;
			}
			set
			{
				this.agentDiscountType1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntAgentContractTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntAgentContractTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private long pidAgent1;
		[Column("pidAgent", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidAgent1")]
		public virtual long pidAgent
		{
			get
			{
				return this.pidAgent1;
			}
			set
			{
				this.pidAgent1 = value;
			}
		}
		
		private DateTime? dtStart1;
		[Column("dtStart", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtStart1")]
		public virtual DateTime? dtStart
		{
			get
			{
				return this.dtStart1;
			}
			set
			{
				this.dtStart1 = value;
			}
		}
		
		private DateTime? dtEnd1;
		[Column("dtEnd", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("dtEnd1")]
		public virtual DateTime? dtEnd
		{
			get
			{
				return this.dtEnd1;
			}
			set
			{
				this.dtEnd1 = value;
			}
		}
		
		private string contractNumber1;
		[Column("contractNumber", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("contractNumber1")]
		public virtual string contractNumber
		{
			get
			{
				return this.contractNumber1;
			}
			set
			{
				this.contractNumber1 = value;
			}
		}
		
		private string contractType1;
		[Column("contractType", OpenAccessType = OpenAccessType.StringVariableLength, Length = 3, Scale = 0, SqlType = "varchar")]
		[Storage("contractType1")]
		public virtual string contractType
		{
			get
			{
				return this.contractType1;
			}
			set
			{
				this.contractType1 = value;
			}
		}
		
		private decimal commissionAmount1;
		[Column("commissionAmount", OpenAccessType = OpenAccessType.Decimal, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("commissionAmount1")]
		public virtual decimal commissionAmount
		{
			get
			{
				return this.commissionAmount1;
			}
			set
			{
				this.commissionAmount1 = value;
			}
		}
		
		private int? IsSendPrice1;
		[Column("IsSendPrice", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("IsSendPrice1")]
		public virtual int? IsSendPrice
		{
			get
			{
				return this.IsSendPrice1;
			}
			set
			{
				this.IsSendPrice1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbRequestLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntChnlAirbnbRequestLOG
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private DateTime? logDateTime1;
		[Column("logDateTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDateTime1")]
		public virtual DateTime? logDateTime
		{
			get
			{
				return this.logDateTime1;
			}
			set
			{
				this.logDateTime1 = value;
			}
		}
		
		private string requestUrl1;
		[Column("requestUrl", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requestUrl1")]
		public virtual string requestUrl
		{
			get
			{
				return this.requestUrl1;
			}
			set
			{
				this.requestUrl1 = value;
			}
		}
		
		private string requestType1;
		[Column("requestType", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requestType1")]
		public virtual string requestType
		{
			get
			{
				return this.requestType1;
			}
			set
			{
				this.requestType1 = value;
			}
		}
		
		private string requestContent1;
		[Column("requestContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("requestContent1")]
		public virtual string requestContent
		{
			get
			{
				return this.requestContent1;
			}
			set
			{
				this.requestContent1 = value;
			}
		}
		
		private string responseContent1;
		[Column("responseContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("responseContent1")]
		public virtual string responseContent
		{
			get
			{
				return this.responseContent1;
			}
			set
			{
				this.responseContent1 = value;
			}
		}
		
		private string requestComments1;
		[Column("requestComments", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requestComments1")]
		public virtual string requestComments
		{
			get
			{
				return this.requestComments1;
			}
			set
			{
				this.requestComments1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbMediaTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlAirbnbMediaTBL
	{
		private long mediaId1;
		[Column("mediaId", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("mediaId1")]
		public virtual long mediaId
		{
			get
			{
				return this.mediaId1;
			}
			set
			{
				this.mediaId1 = value;
			}
		}
		
		private string airbnbId1;
		[Column("airbnbId", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("airbnbId1")]
		public virtual string airbnbId
		{
			get
			{
				return this.airbnbId1;
			}
			set
			{
				this.airbnbId1 = value;
			}
		}
		
		private string extraLargeUrl1;
		[Column("extraLargeUrl", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("extraLargeUrl1")]
		public virtual string extraLargeUrl
		{
			get
			{
				return this.extraLargeUrl1;
			}
			set
			{
				this.extraLargeUrl1 = value;
			}
		}
		
		private string extraMediumUrl1;
		[Column("extraMediumUrl", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("extraMediumUrl1")]
		public virtual string extraMediumUrl
		{
			get
			{
				return this.extraMediumUrl1;
			}
			set
			{
				this.extraMediumUrl1 = value;
			}
		}
		
		private string large_url1;
		[Column("large_url", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("large_url1")]
		public virtual string large_url
		{
			get
			{
				return this.large_url1;
			}
			set
			{
				this.large_url1 = value;
			}
		}
		
		private string small_url1;
		[Column("small_url", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("small_url1")]
		public virtual string small_url
		{
			get
			{
				return this.small_url1;
			}
			set
			{
				this.small_url1 = value;
			}
		}
		
		private string thumbnail_url1;
		[Column("thumbnail_url", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("thumbnail_url1")]
		public virtual string thumbnail_url
		{
			get
			{
				return this.thumbnail_url1;
			}
			set
			{
				this.thumbnail_url1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbLkPropertyTypeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlAirbnbLkPropertyTypeTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 200, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string refId1;
		[Column("refId", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("refId1")]
		public virtual string refId
		{
			get
			{
				return this.refId1;
			}
			set
			{
				this.refId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbLkAmenityTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlAirbnbLkAmenityTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 200, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string refId1;
		[Column("refId", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("refId1")]
		public virtual string refId
		{
			get
			{
				return this.refId1;
			}
			set
			{
				this.refId1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private int? pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCategory1")]
		public virtual int? pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbLkAmenityCatTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlAirbnbLkAmenityCatTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbEstateTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlAirbnbEstateTBL
	{
		private int mr_id1;
		[Column("mr_id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("mr_id1")]
		public virtual int mr_id
		{
			get
			{
				return this.mr_id1;
			}
			set
			{
				this.mr_id1 = value;
			}
		}
		
		private int? airbnb_id1;
		[Column("airbnb_id", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("airbnb_id1")]
		public virtual int? airbnb_id
		{
			get
			{
				return this.airbnb_id1;
			}
			set
			{
				this.airbnb_id1 = value;
			}
		}
		
		private string status1;
		[Column("status", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("status1")]
		public virtual string status
		{
			get
			{
				return this.status1;
			}
			set
			{
				this.status1 = value;
			}
		}
		
		private string notes1;
		[Column("notes", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("notes1")]
		public virtual string notes
		{
			get
			{
				return this.notes1;
			}
			set
			{
				this.notes1 = value;
			}
		}
		
		private DateTime? date1;
		[Column("date", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("date1")]
		public virtual DateTime? date
		{
			get
			{
				return this.date1;
			}
			set
			{
				this.date1 = value;
			}
		}
		
		private int? isSentBasicDetails1;
		[Column("isSentBasicDetails", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isSentBasicDetails1")]
		public virtual int? isSentBasicDetails
		{
			get
			{
				return this.isSentBasicDetails1;
			}
			set
			{
				this.isSentBasicDetails1 = value;
			}
		}
		
		private int? isSentDescription1;
		[Column("isSentDescription", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isSentDescription1")]
		public virtual int? isSentDescription
		{
			get
			{
				return this.isSentDescription1;
			}
			set
			{
				this.isSentDescription1 = value;
			}
		}
		
		private int? isSentImages1;
		[Column("isSentImages", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isSentImages1")]
		public virtual int? isSentImages
		{
			get
			{
				return this.isSentImages1;
			}
			set
			{
				this.isSentImages1 = value;
			}
		}
		
		private string syncCategory1;
		[Column("syncCategory", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("syncCategory1")]
		public virtual string syncCategory
		{
			get
			{
				return this.syncCategory1;
			}
			set
			{
				this.syncCategory1 = value;
			}
		}
		
		private DateTime? syncDtae1;
		[Column("syncDtae", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("syncDtae1")]
		public virtual DateTime? syncDtae
		{
			get
			{
				return this.syncDtae1;
			}
			set
			{
				this.syncDtae1 = value;
			}
		}
		
		private int? hasAvailbility1;
		[Column("hasAvailbility", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("hasAvailbility1")]
		public virtual int? hasAvailbility
		{
			get
			{
				return this.hasAvailbility1;
			}
			set
			{
				this.hasAvailbility1 = value;
			}
		}
		
		private int? hours1;
		[Column("hours", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("hours1")]
		public virtual int? hours
		{
			get
			{
				return this.hours1;
			}
			set
			{
				this.hours1 = value;
			}
		}
		
		private int? isAllowRequest1;
		[Column("isAllowRequest", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isAllowRequest1")]
		public virtual int? isAllowRequest
		{
			get
			{
				return this.isAllowRequest1;
			}
			set
			{
				this.isAllowRequest1 = value;
			}
		}
		
		private string cancelltionPolicy1;
		[Column("cancelltionPolicy", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "varchar")]
		[Storage("cancelltionPolicy1")]
		public virtual string cancelltionPolicy
		{
			get
			{
				return this.cancelltionPolicy1;
			}
			set
			{
				this.cancelltionPolicy1 = value;
			}
		}
		
		private string checkinStartTime1;
		[Column("checkinStartTime", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 5, Scale = 0, SqlType = "varchar")]
		[Storage("checkinStartTime1")]
		public virtual string checkinStartTime
		{
			get
			{
				return this.checkinStartTime1;
			}
			set
			{
				this.checkinStartTime1 = value;
			}
		}
		
		private string checkinEndTime1;
		[Column("checkinEndTime", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 5, Scale = 0, SqlType = "varchar")]
		[Storage("checkinEndTime1")]
		public virtual string checkinEndTime
		{
			get
			{
				return this.checkinEndTime1;
			}
			set
			{
				this.checkinEndTime1 = value;
			}
		}
		
		private string checkOutTime1;
		[Column("checkOutTime", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 5, Scale = 0, SqlType = "varchar")]
		[Storage("checkOutTime1")]
		public virtual string checkOutTime
		{
			get
			{
				return this.checkOutTime1;
			}
			set
			{
				this.checkOutTime1 = value;
			}
		}
		
		private int? isExisting1;
		[Column("isExisting", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isExisting1")]
		public virtual int? isExisting
		{
			get
			{
				return this.isExisting1;
			}
			set
			{
				this.isExisting1 = value;
			}
		}
		
		private string hostId1;
		[Column("hostId", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("hostId1")]
		public virtual string hostId
		{
			get
			{
				return this.hostId1;
			}
			set
			{
				this.hostId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbEstateSyncRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlAirbnbEstateSyncRL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int? pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string airbnbEstate1;
		[Column("airbnbEstate", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "varchar")]
		[Storage("airbnbEstate1")]
		public virtual string airbnbEstate
		{
			get
			{
				return this.airbnbEstate1;
			}
			set
			{
				this.airbnbEstate1 = value;
			}
		}
		
		private string syncCategory1;
		[Column("syncCategory", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("syncCategory1")]
		public virtual string syncCategory
		{
			get
			{
				return this.syncCategory1;
			}
			set
			{
				this.syncCategory1 = value;
			}
		}
		
		private DateTime? date1;
		[Column("date", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("date1")]
		public virtual DateTime? date
		{
			get
			{
				return this.date1;
			}
			set
			{
				this.date1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbEstateStatusRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlAirbnbEstateStatusRL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int? pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string airbnbEstate1;
		[Column("airbnbEstate", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "varchar")]
		[Storage("airbnbEstate1")]
		public virtual string airbnbEstate
		{
			get
			{
				return this.airbnbEstate1;
			}
			set
			{
				this.airbnbEstate1 = value;
			}
		}
		
		private string status1;
		[Column("status", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("status1")]
		public virtual string status
		{
			get
			{
				return this.status1;
			}
			set
			{
				this.status1 = value;
			}
		}
		
		private string notes1;
		[Column("notes", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("notes1")]
		public virtual string notes
		{
			get
			{
				return this.notes1;
			}
			set
			{
				this.notes1 = value;
			}
		}
		
		private DateTime? date1;
		[Column("date", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("date1")]
		public virtual DateTime? date
		{
			get
			{
				return this.date1;
			}
			set
			{
				this.date1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbAuthenticationCode")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlAirbnbAuthenticationCode
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string hostId1;
		[Column("hostId", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("hostId1")]
		public virtual string hostId
		{
			get
			{
				return this.hostId1;
			}
			set
			{
				this.hostId1 = value;
			}
		}
		
		private string redirectUrl1;
		[Column("redirectUrl", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("redirectUrl1")]
		public virtual string redirectUrl
		{
			get
			{
				return this.redirectUrl1;
			}
			set
			{
				this.redirectUrl1 = value;
			}
		}
		
		private string name1;
		[Column("name", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("name1")]
		public virtual string name
		{
			get
			{
				return this.name1;
			}
			set
			{
				this.name1 = value;
			}
		}
		
		private string email1;
		[Column("email", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("email1")]
		public virtual string email
		{
			get
			{
				return this.email1;
			}
			set
			{
				this.email1 = value;
			}
		}
		
		private string password1;
		[Column("password", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 150, Scale = 0, SqlType = "nvarchar")]
		[Storage("password1")]
		public virtual string password
		{
			get
			{
				return this.password1;
			}
			set
			{
				this.password1 = value;
			}
		}
		
		private string notificationUrl1;
		[Column("notificationUrl", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("notificationUrl1")]
		public virtual string notificationUrl
		{
			get
			{
				return this.notificationUrl1;
			}
			set
			{
				this.notificationUrl1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlAirbnbAccessToken")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlAirbnbAccessToken
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string accessToken1;
		[Column("accessToken", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("accessToken1")]
		public virtual string accessToken
		{
			get
			{
				return this.accessToken1;
			}
			set
			{
				this.accessToken1 = value;
			}
		}
		
		private string refreshToken1;
		[Column("refreshToken", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("refreshToken1")]
		public virtual string refreshToken
		{
			get
			{
				return this.refreshToken1;
			}
			set
			{
				this.refreshToken1 = value;
			}
		}
		
		private DateTime? date1;
		[Column("date", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("date1")]
		public virtual DateTime? date
		{
			get
			{
				return this.date1;
			}
			set
			{
				this.date1 = value;
			}
		}
		
		private string expiresAt1;
		[Column("expiresAt", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("expiresAt1")]
		public virtual string expiresAt
		{
			get
			{
				return this.expiresAt1;
			}
			set
			{
				this.expiresAt1 = value;
			}
		}
		
		private string userId1;
		[Column("userId", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "nvarchar")]
		[Storage("userId1")]
		public virtual string userId
		{
			get
			{
				return this.userId1;
			}
			set
			{
				this.userId1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntAgentTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntAgentTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private Guid? uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsNullable = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid? uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private int? pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidLang1")]
		public virtual int? pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private int? pidReferer1;
		[Column("pidReferer", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidReferer1")]
		public virtual int? pidReferer
		{
			get
			{
				return this.pidReferer1;
			}
			set
			{
				this.pidReferer1 = value;
			}
		}
		
		private int? pidPaymentType1;
		[Column("pidPaymentType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidPaymentType1")]
		public virtual int? pidPaymentType
		{
			get
			{
				return this.pidPaymentType1;
			}
			set
			{
				this.pidPaymentType1 = value;
			}
		}
		
		private int? pidDiscountType1;
		[Column("pidDiscountType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidDiscountType1")]
		public virtual int? pidDiscountType
		{
			get
			{
				return this.pidDiscountType1;
			}
			set
			{
				this.pidDiscountType1 = value;
			}
		}
		
		private int? payDiscountNotPayed1;
		[Column("payDiscountNotPayed", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("payDiscountNotPayed1")]
		public virtual int? payDiscountNotPayed
		{
			get
			{
				return this.payDiscountNotPayed1;
			}
			set
			{
				this.payDiscountNotPayed1 = value;
			}
		}
		
		private int? payFullPayment1;
		[Column("payFullPayment", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("payFullPayment1")]
		public virtual int? payFullPayment
		{
			get
			{
				return this.payFullPayment1;
			}
			set
			{
				this.payFullPayment1 = value;
			}
		}
		
		private int? hasAcceptedContract1;
		[Column("hasAcceptedContract", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("hasAcceptedContract1")]
		public virtual int? hasAcceptedContract
		{
			get
			{
				return this.hasAcceptedContract1;
			}
			set
			{
				this.hasAcceptedContract1 = value;
			}
		}
		
		private string typeCode1;
		[Column("typeCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("typeCode1")]
		public virtual string typeCode
		{
			get
			{
				return this.typeCode1;
			}
			set
			{
				this.typeCode1 = value;
			}
		}
		
		private string typeTitle1;
		[Column("typeTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("typeTitle1")]
		public virtual string typeTitle
		{
			get
			{
				return this.typeTitle1;
			}
			set
			{
				this.typeTitle1 = value;
			}
		}
		
		private string nameCompany1;
		[Column("nameCompany", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameCompany1")]
		public virtual string nameCompany
		{
			get
			{
				return this.nameCompany1;
			}
			set
			{
				this.nameCompany1 = value;
			}
		}
		
		private string nameHonor1;
		[Column("nameHonor", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameHonor1")]
		public virtual string nameHonor
		{
			get
			{
				return this.nameHonor1;
			}
			set
			{
				this.nameHonor1 = value;
			}
		}
		
		private string nameFull1;
		[Column("nameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameFull1")]
		public virtual string nameFull
		{
			get
			{
				return this.nameFull1;
			}
			set
			{
				this.nameFull1 = value;
			}
		}
		
		private string nameFirst1;
		[Column("nameFirst", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameFirst1")]
		public virtual string nameFirst
		{
			get
			{
				return this.nameFirst1;
			}
			set
			{
				this.nameFirst1 = value;
			}
		}
		
		private string nameLast1;
		[Column("nameLast", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameLast1")]
		public virtual string nameLast
		{
			get
			{
				return this.nameLast1;
			}
			set
			{
				this.nameLast1 = value;
			}
		}
		
		private string docType1;
		[Column("docType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docType1")]
		public virtual string docType
		{
			get
			{
				return this.docType1;
			}
			set
			{
				this.docType1 = value;
			}
		}
		
		private string docNum1;
		[Column("docNum", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docNum1")]
		public virtual string docNum
		{
			get
			{
				return this.docNum1;
			}
			set
			{
				this.docNum1 = value;
			}
		}
		
		private string docIssuePlace1;
		[Column("docIssuePlace", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docIssuePlace1")]
		public virtual string docIssuePlace
		{
			get
			{
				return this.docIssuePlace1;
			}
			set
			{
				this.docIssuePlace1 = value;
			}
		}
		
		private DateTime? docIssueDate1;
		[Column("docIssueDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docIssueDate1")]
		public virtual DateTime? docIssueDate
		{
			get
			{
				return this.docIssueDate1;
			}
			set
			{
				this.docIssueDate1 = value;
			}
		}
		
		private DateTime? docExpiryDate1;
		[Column("docExpiryDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docExpiryDate1")]
		public virtual DateTime? docExpiryDate
		{
			get
			{
				return this.docExpiryDate1;
			}
			set
			{
				this.docExpiryDate1 = value;
			}
		}
		
		private string docVat1;
		[Column("docVat", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docVat1")]
		public virtual string docVat
		{
			get
			{
				return this.docVat1;
			}
			set
			{
				this.docVat1 = value;
			}
		}
		
		private int? docVat_isEuReg1;
		[Column("docVat_isEuReg", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docVat_isEuReg1")]
		public virtual int? docVat_isEuReg
		{
			get
			{
				return this.docVat_isEuReg1;
			}
			set
			{
				this.docVat_isEuReg1 = value;
			}
		}
		
		private string docCf1;
		[Column("docCf", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docCf1")]
		public virtual string docCf
		{
			get
			{
				return this.docCf1;
			}
			set
			{
				this.docCf1 = value;
			}
		}
		
		private DateTime? birthDate1;
		[Column("birthDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("birthDate1")]
		public virtual DateTime? birthDate
		{
			get
			{
				return this.birthDate1;
			}
			set
			{
				this.birthDate1 = value;
			}
		}
		
		private string birthPlace1;
		[Column("birthPlace", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("birthPlace1")]
		public virtual string birthPlace
		{
			get
			{
				return this.birthPlace1;
			}
			set
			{
				this.birthPlace1 = value;
			}
		}
		
		private string locCountry1;
		[Column("locCountry", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("locCountry1")]
		public virtual string locCountry
		{
			get
			{
				return this.locCountry1;
			}
			set
			{
				this.locCountry1 = value;
			}
		}
		
		private string locState1;
		[Column("locState", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("locState1")]
		public virtual string locState
		{
			get
			{
				return this.locState1;
			}
			set
			{
				this.locState1 = value;
			}
		}
		
		private string locCity1;
		[Column("locCity", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("locCity1")]
		public virtual string locCity
		{
			get
			{
				return this.locCity1;
			}
			set
			{
				this.locCity1 = value;
			}
		}
		
		private string locAddress1;
		[Column("locAddress", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("locAddress1")]
		public virtual string locAddress
		{
			get
			{
				return this.locAddress1;
			}
			set
			{
				this.locAddress1 = value;
			}
		}
		
		private string locZipCode1;
		[Column("locZipCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "varchar")]
		[Storage("locZipCode1")]
		public virtual string locZipCode
		{
			get
			{
				return this.locZipCode1;
			}
			set
			{
				this.locZipCode1 = value;
			}
		}
		
		private string contactEmail1;
		[Column("contactEmail", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactEmail1")]
		public virtual string contactEmail
		{
			get
			{
				return this.contactEmail1;
			}
			set
			{
				this.contactEmail1 = value;
			}
		}
		
		private string contactEmailInvoice1;
		[Column("contactEmailInvoice", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactEmailInvoice1")]
		public virtual string contactEmailInvoice
		{
			get
			{
				return this.contactEmailInvoice1;
			}
			set
			{
				this.contactEmailInvoice1 = value;
			}
		}
		
		private string contactPhone1;
		[Column("contactPhone", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactPhone1")]
		public virtual string contactPhone
		{
			get
			{
				return this.contactPhone1;
			}
			set
			{
				this.contactPhone1 = value;
			}
		}
		
		private string contactPhoneMobile1;
		[Column("contactPhoneMobile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactPhoneMobile1")]
		public virtual string contactPhoneMobile
		{
			get
			{
				return this.contactPhoneMobile1;
			}
			set
			{
				this.contactPhoneMobile1 = value;
			}
		}
		
		private string contactFax1;
		[Column("contactFax", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactFax1")]
		public virtual string contactFax
		{
			get
			{
				return this.contactFax1;
			}
			set
			{
				this.contactFax1 = value;
			}
		}
		
		private string contactWebSite1;
		[Column("contactWebSite", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactWebSite1")]
		public virtual string contactWebSite
		{
			get
			{
				return this.contactWebSite1;
			}
			set
			{
				this.contactWebSite1 = value;
			}
		}
		
		private string contactComeFrom1;
		[Column("contactComeFrom", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("contactComeFrom1")]
		public virtual string contactComeFrom
		{
			get
			{
				return this.contactComeFrom1;
			}
			set
			{
				this.contactComeFrom1 = value;
			}
		}
		
		private string authUsr1;
		[Column("authUsr", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("authUsr1")]
		public virtual string authUsr
		{
			get
			{
				return this.authUsr1;
			}
			set
			{
				this.authUsr1 = value;
			}
		}
		
		private string authPwd1;
		[Column("authPwd", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("authPwd1")]
		public virtual string authPwd
		{
			get
			{
				return this.authPwd1;
			}
			set
			{
				this.authPwd1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private string notesClient1;
		[Column("notesClient", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesClient1")]
		public virtual string notesClient
		{
			get
			{
				return this.notesClient1;
			}
			set
			{
				this.notesClient1 = value;
			}
		}
		
		private string notesInner1;
		[Column("notesInner", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesInner1")]
		public virtual string notesInner
		{
			get
			{
				return this.notesInner1;
			}
			set
			{
				this.notesInner1 = value;
			}
		}
		
		private string notesInvoice1;
		[Column("notesInvoice", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesInvoice1")]
		public virtual string notesInvoice
		{
			get
			{
				return this.notesInvoice1;
			}
			set
			{
				this.notesInvoice1 = value;
			}
		}
		
		private decimal? cashDiscount1;
		[Column("cashDiscount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashDiscount1")]
		public virtual decimal? cashDiscount
		{
			get
			{
				return this.cashDiscount1;
			}
			set
			{
				this.cashDiscount1 = value;
			}
		}
		
		private decimal? cashTaxFree1;
		[Column("cashTaxFree", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTaxFree1")]
		public virtual decimal? cashTaxFree
		{
			get
			{
				return this.cashTaxFree1;
			}
			set
			{
				this.cashTaxFree1 = value;
			}
		}
		
		private decimal? cashTaxAmount1;
		[Column("cashTaxAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTaxAmount1")]
		public virtual decimal? cashTaxAmount
		{
			get
			{
				return this.cashTaxAmount1;
			}
			set
			{
				this.cashTaxAmount1 = value;
			}
		}
		
		private decimal? cashTotalAmount1;
		[Column("cashTotalAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTotalAmount1")]
		public virtual decimal? cashTotalAmount
		{
			get
			{
				return this.cashTotalAmount1;
			}
			set
			{
				this.cashTotalAmount1 = value;
			}
		}
		
		private decimal? cashPayed1;
		[Column("cashPayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashPayed1")]
		public virtual decimal? cashPayed
		{
			get
			{
				return this.cashPayed1;
			}
			set
			{
				this.cashPayed1 = value;
			}
		}
		
		private DateTime? cashPayedDateTime1;
		[Column("cashPayedDateTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("cashPayedDateTime1")]
		public virtual DateTime? cashPayedDateTime
		{
			get
			{
				return this.cashPayedDateTime1;
			}
			set
			{
				this.cashPayedDateTime1 = value;
			}
		}
		
		private string cashPayedTxnID1;
		[Column("cashPayedTxnID", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("cashPayedTxnID1")]
		public virtual string cashPayedTxnID
		{
			get
			{
				return this.cashPayedTxnID1;
			}
			set
			{
				this.cashPayedTxnID1 = value;
			}
		}
		
		private int? mailSentCount1;
		[Column("mailSentCount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("mailSentCount1")]
		public virtual int? mailSentCount
		{
			get
			{
				return this.mailSentCount1;
			}
			set
			{
				this.mailSentCount1 = value;
			}
		}
		
		private DateTime? mailSentLast1;
		[Column("mailSentLast", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("mailSentLast1")]
		public virtual DateTime? mailSentLast
		{
			get
			{
				return this.mailSentLast1;
			}
			set
			{
				this.mailSentLast1 = value;
			}
		}
		
		private string IdAdMedia1;
		[Column("IdAdMedia", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("IdAdMedia1")]
		public virtual string IdAdMedia
		{
			get
			{
				return this.IdAdMedia1;
			}
			set
			{
				this.IdAdMedia1 = value;
			}
		}
		
		private int? invCompanyId1;
		[Column("invCompanyId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("invCompanyId1")]
		public virtual int? invCompanyId
		{
			get
			{
				return this.invCompanyId1;
			}
			set
			{
				this.invCompanyId1 = value;
			}
		}
		
		private int? invTaxId1;
		[Column("invTaxId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("invTaxId1")]
		public virtual int? invTaxId
		{
			get
			{
				return this.invTaxId1;
			}
			set
			{
				this.invTaxId1 = value;
			}
		}
		
		private int? isMsgsEnabled1;
		[Column("isMsgsEnabled", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isMsgsEnabled1")]
		public virtual int? isMsgsEnabled
		{
			get
			{
				return this.isMsgsEnabled1;
			}
			set
			{
				this.isMsgsEnabled1 = value;
			}
		}
		
		private int? isAgencyFeeApplied1;
		[Column("isAgencyFeeApplied", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isAgencyFeeApplied1")]
		public virtual int? isAgencyFeeApplied
		{
			get
			{
				return this.isAgencyFeeApplied1;
			}
			set
			{
				this.isAgencyFeeApplied1 = value;
			}
		}
		
		private int? Fattura1;
		[Column("Fattura", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("Fattura1")]
		public virtual int? Fattura
		{
			get
			{
				return this.Fattura1;
			}
			set
			{
				this.Fattura1 = value;
			}
		}
		
		private int? IsCustomerPaysAgency1;
		[Column("IsCustomerPaysAgency", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("IsCustomerPaysAgency1")]
		public virtual int? IsCustomerPaysAgency
		{
			get
			{
				return this.IsCustomerPaysAgency1;
			}
			set
			{
				this.IsCustomerPaysAgency1 = value;
			}
		}
		
		private int? Voucher1;
		[Column("Voucher", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("Voucher1")]
		public virtual int? Voucher
		{
			get
			{
				return this.Voucher1;
			}
			set
			{
				this.Voucher1 = value;
			}
		}
		
		private int? IsPaymentBefore1;
		[Column("IsPaymentBefore", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("IsPaymentBefore1")]
		public virtual int? IsPaymentBefore
		{
			get
			{
				return this.IsPaymentBefore1;
			}
			set
			{
				this.IsPaymentBefore1 = value;
			}
		}
		
		private int? Days1;
		[Column("Days", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("Days1")]
		public virtual int? Days
		{
			get
			{
				return this.Days1;
			}
			set
			{
				this.Days1 = value;
			}
		}
		
		private int? IsInvoiceComplete1;
		[Column("IsInvoiceComplete", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("IsInvoiceComplete1")]
		public virtual int? IsInvoiceComplete
		{
			get
			{
				return this.IsInvoiceComplete1;
			}
			set
			{
				this.IsInvoiceComplete1 = value;
			}
		}
		
		private decimal? InvoicePercentage1;
		[Column("InvoicePercentage", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("InvoicePercentage1")]
		public virtual decimal? InvoicePercentage
		{
			get
			{
				return this.InvoicePercentage1;
			}
			set
			{
				this.InvoicePercentage1 = value;
			}
		}
		
		private int? sentVoucherToOwner1;
		[Column("sentVoucherToOwner", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("sentVoucherToOwner1")]
		public virtual int? sentVoucherToOwner
		{
			get
			{
				return this.sentVoucherToOwner1;
			}
			set
			{
				this.sentVoucherToOwner1 = value;
			}
		}
		
		private string imgLogo1;
		[Column("imgLogo", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("imgLogo1")]
		public virtual string imgLogo
		{
			get
			{
				return this.imgLogo1;
			}
			set
			{
				this.imgLogo1 = value;
			}
		}
		
		private int? isSendManualEmail1;
		[Column("isSendManualEmail", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isSendManualEmail1")]
		public virtual int? isSendManualEmail
		{
			get
			{
				return this.isSendManualEmail1;
			}
			set
			{
				this.isSendManualEmail1 = value;
			}
		}
		
		private string WL_name1;
		[Column("WL_name", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("WL_name1")]
		public virtual string WL_name
		{
			get
			{
				return this.WL_name1;
			}
			set
			{
				this.WL_name1 = value;
			}
		}
		
		private string WL_logo1;
		[Column("WL_logo", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("WL_logo1")]
		public virtual string WL_logo
		{
			get
			{
				return this.WL_logo1;
			}
			set
			{
				this.WL_logo1 = value;
			}
		}
		
		private string WL_mapMarker1;
		[Column("WL_mapMarker", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("WL_mapMarker1")]
		public virtual string WL_mapMarker
		{
			get
			{
				return this.WL_mapMarker1;
			}
			set
			{
				this.WL_mapMarker1 = value;
			}
		}
		
		private string WL_mainColor1;
		[Column("WL_mainColor", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "nvarchar")]
		[Storage("WL_mainColor1")]
		public virtual string WL_mainColor
		{
			get
			{
				return this.WL_mainColor1;
			}
			set
			{
				this.WL_mainColor1 = value;
			}
		}
		
		private string WL_supportColor1;
		[Column("WL_supportColor", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "nvarchar")]
		[Storage("WL_supportColor1")]
		public virtual string WL_supportColor
		{
			get
			{
				return this.WL_supportColor1;
			}
			set
			{
				this.WL_supportColor1 = value;
			}
		}
		
		private string WL_domainName1;
		[Column("WL_domainName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("WL_domainName1")]
		public virtual string WL_domainName
		{
			get
			{
				return this.WL_domainName1;
			}
			set
			{
				this.WL_domainName1 = value;
			}
		}
		
		private int? WL_changeAmount1;
		[Column("WL_changeAmount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("WL_changeAmount1")]
		public virtual int? WL_changeAmount
		{
			get
			{
				return this.WL_changeAmount1;
			}
			set
			{
				this.WL_changeAmount1 = value;
			}
		}
		
		private int? WL_changeIsDiscount1;
		[Column("WL_changeIsDiscount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("WL_changeIsDiscount1")]
		public virtual int? WL_changeIsDiscount
		{
			get
			{
				return this.WL_changeIsDiscount1;
			}
			set
			{
				this.WL_changeIsDiscount1 = value;
			}
		}
		
		private int? WL_changeIsPercentage1;
		[Column("WL_changeIsPercentage", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("WL_changeIsPercentage1")]
		public virtual int? WL_changeIsPercentage
		{
			get
			{
				return this.WL_changeIsPercentage1;
			}
			set
			{
				this.WL_changeIsPercentage1 = value;
			}
		}
		
		private int? WL_changeAmount_Agent1;
		[Column("WL_changeAmount_Agent", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("WL_changeAmount_Agent1")]
		public virtual int? WL_changeAmount_Agent
		{
			get
			{
				return this.WL_changeAmount_Agent1;
			}
			set
			{
				this.WL_changeAmount_Agent1 = value;
			}
		}
		
		private int? WL_changeIsDiscount_Agent1;
		[Column("WL_changeIsDiscount_Agent", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("WL_changeIsDiscount_Agent1")]
		public virtual int? WL_changeIsDiscount_Agent
		{
			get
			{
				return this.WL_changeIsDiscount_Agent1;
			}
			set
			{
				this.WL_changeIsDiscount_Agent1 = value;
			}
		}
		
		private int? WL_changeIsPercentage_Agent1;
		[Column("WL_changeIsPercentage_Agent", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("WL_changeIsPercentage_Agent1")]
		public virtual int? WL_changeIsPercentage_Agent
		{
			get
			{
				return this.WL_changeIsPercentage_Agent1;
			}
			set
			{
				this.WL_changeIsPercentage_Agent1 = value;
			}
		}
		
		private string WL_css1;
		[Column("WL_css", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("WL_css1")]
		public virtual string WL_css
		{
			get
			{
				return this.WL_css1;
			}
			set
			{
				this.WL_css1 = value;
			}
		}
		
		private int? chnlMGetPhotos1;
		[Column("chnlMGetPhotos", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("chnlMGetPhotos1")]
		public virtual int? chnlMGetPhotos
		{
			get
			{
				return this.chnlMGetPhotos1;
			}
			set
			{
				this.chnlMGetPhotos1 = value;
			}
		}
		
		private int? chnlMGetTexts1;
		[Column("chnlMGetTexts", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("chnlMGetTexts1")]
		public virtual int? chnlMGetTexts
		{
			get
			{
				return this.chnlMGetTexts1;
			}
			set
			{
				this.chnlMGetTexts1 = value;
			}
		}
		
		private int? chnlMGetAddress1;
		[Column("chnlMGetAddress", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("chnlMGetAddress1")]
		public virtual int? chnlMGetAddress
		{
			get
			{
				return this.chnlMGetAddress1;
			}
			set
			{
				this.chnlMGetAddress1 = value;
			}
		}
		
		private int? chnlMGetAmenities1;
		[Column("chnlMGetAmenities", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("chnlMGetAmenities1")]
		public virtual int? chnlMGetAmenities
		{
			get
			{
				return this.chnlMGetAmenities1;
			}
			set
			{
				this.chnlMGetAmenities1 = value;
			}
		}
		
		private int? is_integrate1;
		[Column("is_integrate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("is_integrate1")]
		public virtual int? is_integrate
		{
			get
			{
				return this.is_integrate1;
			}
			set
			{
				this.is_integrate1 = value;
			}
		}
		
		private string cl_loc_province1;
		[Column("cl_loc_province", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("cl_loc_province1")]
		public virtual string cl_loc_province
		{
			get
			{
				return this.cl_loc_province1;
			}
			set
			{
				this.cl_loc_province1 = value;
			}
		}
		
	}
}
#pragma warning restore 1591

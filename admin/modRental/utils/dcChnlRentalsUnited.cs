#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using ModRental;

namespace ModRental	
{
	[NamingSettings(SourceStrategy = NamingSourceStrategy.Property, ResolveReservedWords = true, UseDelimitedSQL = true, WordBreak = "_")]
	public partial class DCchnlRentalsUnited : OpenAccessContext, IDCchnlRentalsUnitedUnitOfWork
	{
		private static string connectionStringName = @"ModRentalDBConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = AttributesMetadataSource.FromContext(typeof(DCchnlRentalsUnited));
		
		public DCchnlRentalsUnited()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public DCchnlRentalsUnited(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCchnlRentalsUnited(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public DCchnlRentalsUnited(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCchnlRentalsUnited(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<dbRntChnlRentalsUnitedRequestLOG> dbRntChnlRentalsUnitedRequestLOGs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedRequestLOG>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedPropertyTypeRL> dbRntChnlRentalsUnitedPropertyTypeRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedPropertyTypeRL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedOwnerTBL> dbRntChnlRentalsUnitedOwnerTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedOwnerTBL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedLkRoomSubTypeTBL> dbRntChnlRentalsUnitedLkRoomSubTypeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedLkRoomSubTypeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedLkPropertyTypeTBL> dbRntChnlRentalsUnitedLkPropertyTypeTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedLkPropertyTypeTBL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedLkFeatureValuesTBL> dbRntChnlRentalsUnitedLkFeatureValuesTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedLkFeatureValuesTBL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedInternSubTypeRL> dbRntChnlRentalsUnitedInternSubTypeRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedInternSubTypeRL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedInternsRL> dbRntChnlRentalsUnitedInternsRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedInternsRL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedEstateTB> dbRntChnlRentalsUnitedEstateTBs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedEstateTB>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedEstateRoomTB> dbRntChnlRentalsUnitedEstateRoomTBs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedEstateRoomTB>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedEstateRoomLN> dbRntChnlRentalsUnitedEstateRoomLNs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedEstateRoomLN>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedEstateRateChangesRL> dbRntChnlRentalsUnitedEstateRateChangesRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedEstateRateChangesRL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedEstatePointsRL> dbRntChnlRentalsUnitedEstatePointsRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedEstatePointsRL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedEstateLN> dbRntChnlRentalsUnitedEstateLNs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedEstateLN>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedEstateFeaturesRL> dbRntChnlRentalsUnitedEstateFeaturesRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedEstateFeaturesRL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedBookingTBL> dbRntChnlRentalsUnitedBookingTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedBookingTBL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedEstateClosedDatesRL> dbRntChnlRentalsUnitedEstateClosedDatesRLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedEstateClosedDatesRL>();
			}
		}
		
		public IQueryable<dbRntChnlRentalsUnitedAcceptedPaymentFormTBL> dbRntChnlRentalsUnitedAcceptedPaymentFormTBLs 
		{
			get
			{
				return this.GetAll<dbRntChnlRentalsUnitedAcceptedPaymentFormTBL>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "MsSql";
			backend.ProviderName = "System.Data.SqlClient";
			backend.Logging.MetricStoreSnapshotInterval = 0;
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of DCchnlRentalsUnited.
		/// </summary>
		/// <param name="config">The BackendConfiguration of DCchnlRentalsUnited.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IDCchnlRentalsUnitedUnitOfWork : IUnitOfWork
	{
		IQueryable<dbRntChnlRentalsUnitedRequestLOG> dbRntChnlRentalsUnitedRequestLOGs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedPropertyTypeRL> dbRntChnlRentalsUnitedPropertyTypeRLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedOwnerTBL> dbRntChnlRentalsUnitedOwnerTBLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedLkRoomSubTypeTBL> dbRntChnlRentalsUnitedLkRoomSubTypeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedLkPropertyTypeTBL> dbRntChnlRentalsUnitedLkPropertyTypeTBLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedLkFeatureValuesTBL> dbRntChnlRentalsUnitedLkFeatureValuesTBLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedInternSubTypeRL> dbRntChnlRentalsUnitedInternSubTypeRLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedInternsRL> dbRntChnlRentalsUnitedInternsRLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedEstateTB> dbRntChnlRentalsUnitedEstateTBs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedEstateRoomTB> dbRntChnlRentalsUnitedEstateRoomTBs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedEstateRoomLN> dbRntChnlRentalsUnitedEstateRoomLNs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedEstateRateChangesRL> dbRntChnlRentalsUnitedEstateRateChangesRLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedEstatePointsRL> dbRntChnlRentalsUnitedEstatePointsRLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedEstateLN> dbRntChnlRentalsUnitedEstateLNs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedEstateFeaturesRL> dbRntChnlRentalsUnitedEstateFeaturesRLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedBookingTBL> dbRntChnlRentalsUnitedBookingTBLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedEstateClosedDatesRL> dbRntChnlRentalsUnitedEstateClosedDatesRLs
		{
			get;
		}
		IQueryable<dbRntChnlRentalsUnitedAcceptedPaymentFormTBL> dbRntChnlRentalsUnitedAcceptedPaymentFormTBLs
		{
			get;
		}
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedRequestLOG")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbRntChnlRentalsUnitedRequestLOG
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private DateTime? logDateTime1;
		[Column("logDateTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("logDateTime1")]
		public virtual DateTime? logDateTime
		{
			get
			{
				return this.logDateTime1;
			}
			set
			{
				this.logDateTime1 = value;
			}
		}
		
		private string requesUrl1;
		[Column("requesUrl", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requesUrl1")]
		public virtual string requesUrl
		{
			get
			{
				return this.requesUrl1;
			}
			set
			{
				this.requesUrl1 = value;
			}
		}
		
		private string requestType1;
		[Column("requestType", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requestType1")]
		public virtual string requestType
		{
			get
			{
				return this.requestType1;
			}
			set
			{
				this.requestType1 = value;
			}
		}
		
		private string requestContent1;
		[Column("requestContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("requestContent1")]
		public virtual string requestContent
		{
			get
			{
				return this.requestContent1;
			}
			set
			{
				this.requestContent1 = value;
			}
		}
		
		private string responseContent1;
		[Column("responseContent", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("responseContent1")]
		public virtual string responseContent
		{
			get
			{
				return this.responseContent1;
			}
			set
			{
				this.responseContent1 = value;
			}
		}
		
		private string requestComments1;
		[Column("requestComments", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("requestComments1")]
		public virtual string requestComments
		{
			get
			{
				return this.requestComments1;
			}
			set
			{
				this.requestComments1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedPropertyTypeRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedPropertyTypeRL
	{
		private int pidCategory1;
		[Column("pidCategory", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCategory1")]
		public virtual int pidCategory
		{
			get
			{
				return this.pidCategory1;
			}
			set
			{
				this.pidCategory1 = value;
			}
		}
		
		private string pidHACategory1;
		[Column("pidHACategory", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("pidHACategory1")]
		public virtual string pidHACategory
		{
			get
			{
				return this.pidHACategory1;
			}
			set
			{
				this.pidHACategory1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedOwnerTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedOwnerTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string username1;
		[Column("username", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("username1")]
		public virtual string username
		{
			get
			{
				return this.username1;
			}
			set
			{
				this.username1 = value;
			}
		}
		
		private string advertiserAssignedId1;
		[Column("advertiserAssignedId", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("advertiserAssignedId1")]
		public virtual string advertiserAssignedId
		{
			get
			{
				return this.advertiserAssignedId1;
			}
			set
			{
				this.advertiserAssignedId1 = value;
			}
		}
		
		private string ppb_advertiserAssignedId1;
		[Column("ppb_advertiserAssignedId", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("ppb_advertiserAssignedId1")]
		public virtual string ppb_advertiserAssignedId
		{
			get
			{
				return this.ppb_advertiserAssignedId1;
			}
			set
			{
				this.ppb_advertiserAssignedId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedLkRoomSubTypeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedLkRoomSubTypeTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedLkPropertyTypeTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedLkPropertyTypeTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedLkFeatureValuesTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedLkFeatureValuesTBL
	{
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string subType1;
		[Column("subType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("subType1")]
		public virtual string subType
		{
			get
			{
				return this.subType1;
			}
			set
			{
				this.subType1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string refType1;
		[Column("refType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("refType1")]
		public virtual string refType
		{
			get
			{
				return this.refType1;
			}
			set
			{
				this.refType1 = value;
			}
		}
		
		private string refId1;
		[Column("refId", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("refId1")]
		public virtual string refId
		{
			get
			{
				return this.refId1;
			}
			set
			{
				this.refId1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedInternSubTypeRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedInternSubTypeRL
	{
		private int pidInternSubType1;
		[Column("pidInternSubType", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidInternSubType1")]
		public virtual int pidInternSubType
		{
			get
			{
				return this.pidInternSubType1;
			}
			set
			{
				this.pidInternSubType1 = value;
			}
		}
		
		private string pidHAInternSubType1;
		[Column("pidHAInternSubType", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("pidHAInternSubType1")]
		public virtual string pidHAInternSubType
		{
			get
			{
				return this.pidHAInternSubType1;
			}
			set
			{
				this.pidHAInternSubType1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedInternsRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedInternsRL
	{
		private int pidInternsType1;
		[Column("pidInternsType", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidInternsType1")]
		public virtual int pidInternsType
		{
			get
			{
				return this.pidInternsType1;
			}
			set
			{
				this.pidInternsType1 = value;
			}
		}
		
		private string pidHAInternsType1;
		[Column("pidHAInternsType", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("pidHAInternsType1")]
		public virtual string pidHAInternsType
		{
			get
			{
				return this.pidHAInternsType1;
			}
			set
			{
				this.pidHAInternsType1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedEstateTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedEstateTB
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string propertyType1;
		[Column("propertyType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("propertyType1")]
		public virtual string propertyType
		{
			get
			{
				return this.propertyType1;
			}
			set
			{
				this.propertyType1 = value;
			}
		}
		
		private decimal? mq_inner1;
		[Column("mq_inner", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 8, Scale = 2, SqlType = "decimal")]
		[Storage("mq_inner1")]
		public virtual decimal? mq_inner
		{
			get
			{
				return this.mq_inner1;
			}
			set
			{
				this.mq_inner1 = value;
			}
		}
		
		private string mq_inner_unit1;
		[Column("mq_inner_unit", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("mq_inner_unit1")]
		public virtual string mq_inner_unit
		{
			get
			{
				return this.mq_inner_unit1;
			}
			set
			{
				this.mq_inner_unit1 = value;
			}
		}
		
		private string year_purchased1;
		[Column("year_purchased", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 30, Scale = 0, SqlType = "nvarchar")]
		[Storage("year_purchased1")]
		public virtual string year_purchased
		{
			get
			{
				return this.year_purchased1;
			}
			set
			{
				this.year_purchased1 = value;
			}
		}
		
		private int? allow_traveler_zoom1;
		[Column("allow_traveler_zoom", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("allow_traveler_zoom1")]
		public virtual int? allow_traveler_zoom
		{
			get
			{
				return this.allow_traveler_zoom1;
			}
			set
			{
				this.allow_traveler_zoom1 = value;
			}
		}
		
		private int? default_zoom_level1;
		[Column("default_zoom_level", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("default_zoom_level1")]
		public virtual int? default_zoom_level
		{
			get
			{
				return this.default_zoom_level1;
			}
			set
			{
				this.default_zoom_level1 = value;
			}
		}
		
		private int? max_zoom_level1;
		[Column("max_zoom_level", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("max_zoom_level1")]
		public virtual int? max_zoom_level
		{
			get
			{
				return this.max_zoom_level1;
			}
			set
			{
				this.max_zoom_level1 = value;
			}
		}
		
		private int? show_exact_location1;
		[Column("show_exact_location", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("show_exact_location1")]
		public virtual int? show_exact_location
		{
			get
			{
				return this.show_exact_location1;
			}
			set
			{
				this.show_exact_location1 = value;
			}
		}
		
		private int? num_lounge_seating1;
		[Column("num_lounge_seating", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_lounge_seating1")]
		public virtual int? num_lounge_seating
		{
			get
			{
				return this.num_lounge_seating1;
			}
			set
			{
				this.num_lounge_seating1 = value;
			}
		}
		
		private int? num_dining_seating1;
		[Column("num_dining_seating", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_dining_seating1")]
		public virtual int? num_dining_seating
		{
			get
			{
				return this.num_dining_seating1;
			}
			set
			{
				this.num_dining_seating1 = value;
			}
		}
		
		private int? num_max_sleep1;
		[Column("num_max_sleep", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_max_sleep1")]
		public virtual int? num_max_sleep
		{
			get
			{
				return this.num_max_sleep1;
			}
			set
			{
				this.num_max_sleep1 = value;
			}
		}
		
		private int? num_max_sleep_bed1;
		[Column("num_max_sleep_bed", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("num_max_sleep_bed1")]
		public virtual int? num_max_sleep_bed
		{
			get
			{
				return this.num_max_sleep_bed1;
			}
			set
			{
				this.num_max_sleep_bed1 = value;
			}
		}
		
		private int? is_slave1;
		[Column("is_slave", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("is_slave1")]
		public virtual int? is_slave
		{
			get
			{
				return this.is_slave1;
			}
			set
			{
				this.is_slave1 = value;
			}
		}
		
		private int? is_active1;
		[Column("is_active", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("is_active1")]
		public virtual int? is_active
		{
			get
			{
				return this.is_active1;
			}
			set
			{
				this.is_active1 = value;
			}
		}
		
		private int? pid_master_estate1;
		[Column("pid_master_estate", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_master_estate1")]
		public virtual int? pid_master_estate
		{
			get
			{
				return this.pid_master_estate1;
			}
			set
			{
				this.pid_master_estate1 = value;
			}
		}
		
		private string CancellationPolicyDescription1;
		[Column("CancellationPolicyDescription", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("CancellationPolicyDescription1")]
		public virtual string CancellationPolicyDescription
		{
			get
			{
				return this.CancellationPolicyDescription1;
			}
			set
			{
				this.CancellationPolicyDescription1 = value;
			}
		}
		
		private string CancellationPolicyType1;
		[Column("CancellationPolicyType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("CancellationPolicyType1")]
		public virtual string CancellationPolicyType
		{
			get
			{
				return this.CancellationPolicyType1;
			}
			set
			{
				this.CancellationPolicyType1 = value;
			}
		}
		
		private int? CancellationPolicyDeadlineDaysBeforeCheckIn1;
		[Column("CancellationPolicyDeadlineDaysBeforeCheckIn", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("CancellationPolicyDeadlineDaysBeforeCheckIn1")]
		public virtual int? CancellationPolicyDeadlineDaysBeforeCheckIn
		{
			get
			{
				return this.CancellationPolicyDeadlineDaysBeforeCheckIn1;
			}
			set
			{
				this.CancellationPolicyDeadlineDaysBeforeCheckIn1 = value;
			}
		}
		
		private decimal? CancellationPolicyCharge1;
		[Column("CancellationPolicyCharge", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("CancellationPolicyCharge1")]
		public virtual decimal? CancellationPolicyCharge
		{
			get
			{
				return this.CancellationPolicyCharge1;
			}
			set
			{
				this.CancellationPolicyCharge1 = value;
			}
		}
		
		private int? CancellationPolicyChargeType1;
		[Column("CancellationPolicyChargeType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("CancellationPolicyChargeType1")]
		public virtual int? CancellationPolicyChargeType
		{
			get
			{
				return this.CancellationPolicyChargeType1;
			}
			set
			{
				this.CancellationPolicyChargeType1 = value;
			}
		}
		
		private int? changeAmount1;
		[Column("changeAmount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeAmount1")]
		public virtual int? changeAmount
		{
			get
			{
				return this.changeAmount1;
			}
			set
			{
				this.changeAmount1 = value;
			}
		}
		
		private int? changeIsDiscount1;
		[Column("changeIsDiscount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeIsDiscount1")]
		public virtual int? changeIsDiscount
		{
			get
			{
				return this.changeIsDiscount1;
			}
			set
			{
				this.changeIsDiscount1 = value;
			}
		}
		
		private int? changeIsPercentage1;
		[Column("changeIsPercentage", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeIsPercentage1")]
		public virtual int? changeIsPercentage
		{
			get
			{
				return this.changeIsPercentage1;
			}
			set
			{
				this.changeIsPercentage1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedEstateRoomTB")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	//[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntChnlRentalsUnitedEstateRoomTB
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string roomType1;
		[Column("roomType", OpenAccessType = OpenAccessType.StringVariableLength, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("roomType1")]
		public virtual string roomType
		{
			get
			{
				return this.roomType1;
			}
			set
			{
				this.roomType1 = value;
			}
		}
		
		private string roomSubType1;
		[Column("roomSubType", OpenAccessType = OpenAccessType.StringVariableLength, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("roomSubType1")]
		public virtual string roomSubType
		{
			get
			{
				return this.roomSubType1;
			}
			set
			{
				this.roomSubType1 = value;
			}
		}
		
		private string features1;
		[Column("features", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("features1")]
		public virtual string features
		{
			get
			{
				return this.features1;
			}
			set
			{
				this.features1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedEstateRoomLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	//[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbRntChnlRentalsUnitedEstateRoomLN
	{
		private Guid pidRoom1;
		[Column("pidRoom", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("pidRoom1")]
		public virtual Guid pidRoom
		{
			get
			{
				return this.pidRoom1;
			}
			set
			{
				this.pidRoom1 = value;
			}
		}
		
		private string pidLang1;
		[Column("pidLang", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 5, Scale = 0, SqlType = "varchar")]
		[Storage("pidLang1")]
		public virtual string pidLang
		{
			get
			{
				return this.pidLang1;
			}
			set
			{
				this.pidLang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedEstateRateChangesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedEstateRateChangesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private int changeAmount1;
		[Column("changeAmount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeAmount1")]
		public virtual int changeAmount
		{
			get
			{
				return this.changeAmount1;
			}
			set
			{
				this.changeAmount1 = value;
			}
		}
		
		private int changeIsDiscount1;
		[Column("changeIsDiscount", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeIsDiscount1")]
		public virtual int changeIsDiscount
		{
			get
			{
				return this.changeIsDiscount1;
			}
			set
			{
				this.changeIsDiscount1 = value;
			}
		}
		
		private int changeIsPercentage1;
		[Column("changeIsPercentage", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("changeIsPercentage1")]
		public virtual int changeIsPercentage
		{
			get
			{
				return this.changeIsPercentage1;
			}
			set
			{
				this.changeIsPercentage1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedEstatePointsRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedEstatePointsRL
	{
		private int pid_estate1;
		[Column("pid_estate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_estate1")]
		public virtual int pid_estate
		{
			get
			{
				return this.pid_estate1;
			}
			set
			{
				this.pid_estate1 = value;
			}
		}
		
		private int pid_point1;
		[Column("pid_point", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_point1")]
		public virtual int pid_point
		{
			get
			{
				return this.pid_point1;
			}
			set
			{
				this.pid_point1 = value;
			}
		}
		
		private string distance1;
		[Column("distance", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("distance1")]
		public virtual string distance
		{
			get
			{
				return this.distance1;
			}
			set
			{
				this.distance1 = value;
			}
		}
		
		private string unit1;
		[Column("unit", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("unit1")]
		public virtual string unit
		{
			get
			{
				return this.unit1;
			}
			set
			{
				this.unit1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedEstateLN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedEstateLN
	{
		private int pid_estate1;
		[Column("pid_estate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pid_estate1")]
		public virtual int pid_estate
		{
			get
			{
				return this.pid_estate1;
			}
			set
			{
				this.pid_estate1 = value;
			}
		}
		
		private string pid_lang1;
		[Column("pid_lang", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 5, Scale = 0, SqlType = "varchar")]
		[Storage("pid_lang1")]
		public virtual string pid_lang
		{
			get
			{
				return this.pid_lang1;
			}
			set
			{
				this.pid_lang1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string sub_title1;
		[Column("sub_title", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("sub_title1")]
		public virtual string sub_title
		{
			get
			{
				return this.sub_title1;
			}
			set
			{
				this.sub_title1 = value;
			}
		}
		
		private string summary1;
		[Column("summary", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("summary1")]
		public virtual string summary
		{
			get
			{
				return this.summary1;
			}
			set
			{
				this.summary1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private string listing_story1;
		[Column("listing_story", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("listing_story1")]
		public virtual string listing_story
		{
			get
			{
				return this.listing_story1;
			}
			set
			{
				this.listing_story1 = value;
			}
		}
		
		private string unique_benifits1;
		[Column("unique_benifits", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("unique_benifits1")]
		public virtual string unique_benifits
		{
			get
			{
				return this.unique_benifits1;
			}
			set
			{
				this.unique_benifits1 = value;
			}
		}
		
		private string why_purchased1;
		[Column("why_purchased", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("why_purchased1")]
		public virtual string why_purchased
		{
			get
			{
				return this.why_purchased1;
			}
			set
			{
				this.why_purchased1 = value;
			}
		}
		
		private string location_description1;
		[Column("location_description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("location_description1")]
		public virtual string location_description
		{
			get
			{
				return this.location_description1;
			}
			set
			{
				this.location_description1 = value;
			}
		}
		
		private string location_other_activities1;
		[Column("location_other_activities", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("location_other_activities1")]
		public virtual string location_other_activities
		{
			get
			{
				return this.location_other_activities1;
			}
			set
			{
				this.location_other_activities1 = value;
			}
		}
		
		private string price_note1;
		[Column("price_note", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("price_note1")]
		public virtual string price_note
		{
			get
			{
				return this.price_note1;
			}
			set
			{
				this.price_note1 = value;
			}
		}
		
		private string bathroom_details1;
		[Column("bathroom_details", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("bathroom_details1")]
		public virtual string bathroom_details
		{
			get
			{
				return this.bathroom_details1;
			}
			set
			{
				this.bathroom_details1 = value;
			}
		}
		
		private string bedroom_details1;
		[Column("bedroom_details", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("bedroom_details1")]
		public virtual string bedroom_details
		{
			get
			{
				return this.bedroom_details1;
			}
			set
			{
				this.bedroom_details1 = value;
			}
		}
		
		private string unit_name1;
		[Column("unit_name", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("unit_name1")]
		public virtual string unit_name
		{
			get
			{
				return this.unit_name1;
			}
			set
			{
				this.unit_name1 = value;
			}
		}
		
		private string unit_description1;
		[Column("unit_description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("unit_description1")]
		public virtual string unit_description
		{
			get
			{
				return this.unit_description1;
			}
			set
			{
				this.unit_description1 = value;
			}
		}
		
		private string features_description1;
		[Column("features_description", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("features_description1")]
		public virtual string features_description
		{
			get
			{
				return this.features_description1;
			}
			set
			{
				this.features_description1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedEstateFeaturesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedEstateFeaturesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private int? count1;
		[Column("count", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("count1")]
		public virtual int? count
		{
			get
			{
				return this.count1;
			}
			set
			{
				this.count1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedBookingTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedBookingTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string inquiryId1;
		[Column("inquiryId", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("inquiryId1")]
		public virtual string inquiryId
		{
			get
			{
				return this.inquiryId1;
			}
			set
			{
				this.inquiryId1 = value;
			}
		}
		
		private string trackingUuid1;
		[Column("trackingUuid", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("trackingUuid1")]
		public virtual string trackingUuid
		{
			get
			{
				return this.trackingUuid1;
			}
			set
			{
				this.trackingUuid1 = value;
			}
		}
		
		private string listingChannel1;
		[Column("listingChannel", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("listingChannel1")]
		public virtual string listingChannel
		{
			get
			{
				return this.listingChannel1;
			}
			set
			{
				this.listingChannel1 = value;
			}
		}
		
		private string masterListingChannel1;
		[Column("masterListingChannel", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("masterListingChannel1")]
		public virtual string masterListingChannel
		{
			get
			{
				return this.masterListingChannel1;
			}
			set
			{
				this.masterListingChannel1 = value;
			}
		}
		
		private string message1;
		[Column("message", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("message1")]
		public virtual string message
		{
			get
			{
				return this.message1;
			}
			set
			{
				this.message1 = value;
			}
		}
		
		private int? numberOfPets1;
		[Column("numberOfPets", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("numberOfPets1")]
		public virtual int? numberOfPets
		{
			get
			{
				return this.numberOfPets1;
			}
			set
			{
				this.numberOfPets1 = value;
			}
		}
		
		private string commission1;
		[Column("commission", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("commission1")]
		public virtual string commission
		{
			get
			{
				return this.commission1;
			}
			set
			{
				this.commission1 = value;
			}
		}
		
		private string locale1;
		[Column("locale", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("locale1")]
		public virtual string locale
		{
			get
			{
				return this.locale1;
			}
			set
			{
				this.locale1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedEstateClosedDatesRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedEstateClosedDatesRL
	{
		private int pidEstate1;
		[Column("pidEstate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidEstate1")]
		public virtual int pidEstate
		{
			get
			{
				return this.pidEstate1;
			}
			set
			{
				this.pidEstate1 = value;
			}
		}
		
		private DateTime changeDate1;
		[Column("changeDate", OpenAccessType = OpenAccessType.DateTime, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("changeDate1")]
		public virtual DateTime changeDate
		{
			get
			{
				return this.changeDate1;
			}
			set
			{
				this.changeDate1 = value;
			}
		}
		
		private int isClosed1;
		[Column("isClosed", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isClosed1")]
		public virtual int isClosed
		{
			get
			{
				return this.isClosed1;
			}
			set
			{
				this.isClosed1 = value;
			}
		}
		
		private int minStay1;
		[Column("minStay", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("minStay1")]
		public virtual int minStay
		{
			get
			{
				return this.minStay1;
			}
			set
			{
				this.minStay1 = value;
			}
		}
		
	}
}
namespace ModRental	
{
	[Table("RntChnlRentalsUnitedAcceptedPaymentFormTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbRntChnlRentalsUnitedAcceptedPaymentFormTBL
	{
		private string paymentFormType1;
		[Column("paymentFormType", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("paymentFormType1")]
		public virtual string paymentFormType
		{
			get
			{
				return this.paymentFormType1;
			}
			set
			{
				this.paymentFormType1 = value;
			}
		}
		
		private string cardCode1;
		[Column("cardCode", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("cardCode1")]
		public virtual string cardCode
		{
			get
			{
				return this.cardCode1;
			}
			set
			{
				this.cardCode1 = value;
			}
		}
		
		private string cardType1;
		[Column("cardType", OpenAccessType = OpenAccessType.StringVariableLength, IsPrimaryKey = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("cardType1")]
		public virtual string cardType
		{
			get
			{
				return this.cardType1;
			}
			set
			{
				this.cardType1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
#pragma warning restore 1591

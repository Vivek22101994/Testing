#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using ModInvoice;

namespace ModInvoice	
{
	[NamingSettings(RemoveCamelCase = true, RemoveLeadingUnderscores = true, ResolveReservedWords = true, UseDelimitedSQL = true, WordBreak = "_")]
	public partial class DCmodInvoice : OpenAccessContext, IDCmodInvoiceUnitOfWork
	{
		private static string connectionStringName = @"ModInvoiceDBConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = AttributesMetadataSource.FromContext(typeof(DCmodInvoice));
		
		public DCmodInvoice()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public DCmodInvoice(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCmodInvoice(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public DCmodInvoice(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public DCmodInvoice(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<dbInvCashTypeLK> dbInvCashTypeLKs 
		{
			get
			{
				return this.GetAll<dbInvCashTypeLK>();
			}
		}
		
		public IQueryable<dbInvCashPlaceLK> dbInvCashPlaceLKs 
		{
			get
			{
				return this.GetAll<dbInvCashPlaceLK>();
			}
		}
		
		public IQueryable<dbInvCashDocumentTBL> dbInvCashDocumentTBLs 
		{
			get
			{
				return this.GetAll<dbInvCashDocumentTBL>();
			}
		}
		
		public IQueryable<dbInvCashDocCaseLK> dbInvCashDocCaseLKs 
		{
			get
			{
				return this.GetAll<dbInvCashDocCaseLK>();
			}
		}
		
		public IQueryable<dbInvCashBookTBL> dbInvCashBookTBLs 
		{
			get
			{
				return this.GetAll<dbInvCashBookTBL>();
			}
		}
		
		public IQueryable<dbInvCashBookVIEW> dbInvCashBookVIEWs 
		{
			get
			{
				return this.GetAll<dbInvCashBookVIEW>();
			}
		}
		
		public IQueryable<dbInvInvoiceItemTBL> dbInvInvoiceItemTBLs 
		{
			get
			{
				return this.GetAll<dbInvInvoiceItemTBL>();
			}
		}
		
		public IQueryable<dbInvInvoiceTBL> dbInvInvoiceTBLs 
		{
			get
			{
				return this.GetAll<dbInvInvoiceTBL>();
			}
		}
		
		public IQueryable<dbInvCashDocumentFilesTBL> dbInvCashDocumentFilesTBLs 
		{
			get
			{
				return this.GetAll<dbInvCashDocumentFilesTBL>();
			}
		}
		
		public IQueryable<dbInvCompanyTaxRL> dbInvCompanyTaxRLs 
		{
			get
			{
				return this.GetAll<dbInvCompanyTaxRL>();
			}
		}
		
		public IQueryable<dbInvPayBancaSellaVerifiedByVisaTXN> dbInvPayBancaSellaVerifiedByVisaTXNs 
		{
			get
			{
				return this.GetAll<dbInvPayBancaSellaVerifiedByVisaTXN>();
			}
		}
		
		public IQueryable<dbInvCashTaxLK> dbInvCashTaxLKs 
		{
			get
			{
				return this.GetAll<dbInvCashTaxLK>();
			}
		}
		
		public IQueryable<dbInvCompanyTBL> dbInvCompanyTBLs 
		{
			get
			{
				return this.GetAll<dbInvCompanyTBL>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "mssql";
			backend.ProviderName = "System.Data.SqlClient";
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of DCmodInvoice.
		/// </summary>
		/// <param name="config">The BackendConfiguration of DCmodInvoice.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IDCmodInvoiceUnitOfWork : IUnitOfWork
	{
		IQueryable<dbInvCashTypeLK> dbInvCashTypeLKs
		{
			get;
		}
		IQueryable<dbInvCashPlaceLK> dbInvCashPlaceLKs
		{
			get;
		}
		IQueryable<dbInvCashDocumentTBL> dbInvCashDocumentTBLs
		{
			get;
		}
		IQueryable<dbInvCashDocCaseLK> dbInvCashDocCaseLKs
		{
			get;
		}
		IQueryable<dbInvCashBookTBL> dbInvCashBookTBLs
		{
			get;
		}
		IQueryable<dbInvCashBookVIEW> dbInvCashBookVIEWs
		{
			get;
		}
		IQueryable<dbInvInvoiceItemTBL> dbInvInvoiceItemTBLs
		{
			get;
		}
		IQueryable<dbInvInvoiceTBL> dbInvInvoiceTBLs
		{
			get;
		}
		IQueryable<dbInvCashDocumentFilesTBL> dbInvCashDocumentFilesTBLs
		{
			get;
		}
		IQueryable<dbInvCompanyTaxRL> dbInvCompanyTaxRLs
		{
			get;
		}
		IQueryable<dbInvPayBancaSellaVerifiedByVisaTXN> dbInvPayBancaSellaVerifiedByVisaTXNs
		{
			get;
		}
		IQueryable<dbInvCashTaxLK> dbInvCashTaxLKs
		{
			get;
		}
		IQueryable<dbInvCompanyTBL> dbInvCompanyTBLs
		{
			get;
		}
	}
}
namespace ModInvoice	
{
	[Table("InvCashTypeLK")]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvCashTypeLK
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private string placeTypes1;
		[Column("placeTypes", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 2000, Scale = 0, SqlType = "varchar")]
		[Storage("placeTypes1")]
		public virtual string placeTypes
		{
			get
			{
				return this.placeTypes1;
			}
			set
			{
				this.placeTypes1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvCashPlaceLK")]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvCashPlaceLK
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string type1;
		[Column("type", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("type1")]
		public virtual string type
		{
			get
			{
				return this.type1;
			}
			set
			{
				this.type1 = value;
			}
		}
		
		private string title1;
		[Column("title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("title1")]
		public virtual string title
		{
			get
			{
				return this.title1;
			}
			set
			{
				this.title1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private decimal? chargeFeePart21;
		[Column("chargeFeePart2", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("chargeFeePart21")]
		public virtual decimal? chargeFeePart2
		{
			get
			{
				return this.chargeFeePart21;
			}
			set
			{
				this.chargeFeePart21 = value;
			}
		}
		
		private decimal? chargeFeePart11;
		[Column("chargeFeePart1", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("chargeFeePart11")]
		public virtual decimal? chargeFeePart1
		{
			get
			{
				return this.chargeFeePart11;
			}
			set
			{
				this.chargeFeePart11 = value;
			}
		}
		
		private decimal? chargeFeeFull1;
		[Column("chargeFeeFull", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("chargeFeeFull1")]
		public virtual decimal? chargeFeeFull
		{
			get
			{
				return this.chargeFeeFull1;
			}
			set
			{
				this.chargeFeeFull1 = value;
			}
		}
		
		private int? chargeFeeInvoice1;
		[Column("chargeFeeInvoice", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("chargeFeeInvoice1")]
		public virtual int? chargeFeeInvoice
		{
			get
			{
				return this.chargeFeeInvoice1;
			}
			set
			{
				this.chargeFeeInvoice1 = value;
			}
		}
		
		private int? chargeFeeTaxId1;
		[Column("chargeFeeTaxId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("chargeFeeTaxId1")]
		public virtual int? chargeFeeTaxId
		{
			get
			{
				return this.chargeFeeTaxId1;
			}
			set
			{
				this.chargeFeeTaxId1 = value;
			}
		}
		
		private string chargeFeeInvoiceDesc1;
		[Column("chargeFeeInvoiceDesc", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("chargeFeeInvoiceDesc1")]
		public virtual string chargeFeeInvoiceDesc
		{
			get
			{
				return this.chargeFeeInvoiceDesc1;
			}
			set
			{
				this.chargeFeeInvoiceDesc1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvCashDocumentTBL")]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvCashDocumentTBL
	{
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private int? cashInOut1;
		[Column("cashInOut", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashInOut1")]
		public virtual int? cashInOut
		{
			get
			{
				return this.cashInOut1;
			}
			set
			{
				this.cashInOut1 = value;
			}
		}
		
		private decimal? cashAmount1;
		[Column("cashAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashAmount1")]
		public virtual decimal? cashAmount
		{
			get
			{
				return this.cashAmount1;
			}
			set
			{
				this.cashAmount1 = value;
			}
		}
		
		private decimal? cashUnpayed1;
		[Column("cashUnpayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashUnpayed1")]
		public virtual decimal? cashUnpayed
		{
			get
			{
				return this.cashUnpayed1;
			}
			set
			{
				this.cashUnpayed1 = value;
			}
		}
		
		private int? docCaseId1;
		[Column("docCaseId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docCaseId1")]
		public virtual int? docCaseId
		{
			get
			{
				return this.docCaseId1;
			}
			set
			{
				this.docCaseId1 = value;
			}
		}
		
		private string docCaseCode1;
		[Column("docCaseCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("docCaseCode1")]
		public virtual string docCaseCode
		{
			get
			{
				return this.docCaseCode1;
			}
			set
			{
				this.docCaseCode1 = value;
			}
		}
		
		private string docType1;
		[Column("docType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docType1")]
		public virtual string docType
		{
			get
			{
				return this.docType1;
			}
			set
			{
				this.docType1 = value;
			}
		}
		
		private string docNum1;
		[Column("docNum", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("docNum1")]
		public virtual string docNum
		{
			get
			{
				return this.docNum1;
			}
			set
			{
				this.docNum1 = value;
			}
		}
		
		private string docBody1;
		[Column("docBody", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("docBody1")]
		public virtual string docBody
		{
			get
			{
				return this.docBody1;
			}
			set
			{
				this.docBody1 = value;
			}
		}
		
		private string docPath1;
		[Column("docPath", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("docPath1")]
		public virtual string docPath
		{
			get
			{
				return this.docPath1;
			}
			set
			{
				this.docPath1 = value;
			}
		}
		
		private DateTime? docIssueDate1;
		[Column("docIssueDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docIssueDate1")]
		public virtual DateTime? docIssueDate
		{
			get
			{
				return this.docIssueDate1;
			}
			set
			{
				this.docIssueDate1 = value;
			}
		}
		
		private DateTime? docExpiryDate1;
		[Column("docExpiryDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docExpiryDate1")]
		public virtual DateTime? docExpiryDate
		{
			get
			{
				return this.docExpiryDate1;
			}
			set
			{
				this.docExpiryDate1 = value;
			}
		}
		
		private long? ownerId1;
		[Column("ownerId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("ownerId1")]
		public virtual long? ownerId
		{
			get
			{
				return this.ownerId1;
			}
			set
			{
				this.ownerId1 = value;
			}
		}
		
		private Guid? ownerUid1;
		[Column("ownerUid", OpenAccessType = OpenAccessType.Guid, IsNullable = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("ownerUid1")]
		public virtual Guid? ownerUid
		{
			get
			{
				return this.ownerUid1;
			}
			set
			{
				this.ownerUid1 = value;
			}
		}
		
		private string ownerCode1;
		[Column("ownerCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("ownerCode1")]
		public virtual string ownerCode
		{
			get
			{
				return this.ownerCode1;
			}
			set
			{
				this.ownerCode1 = value;
			}
		}
		
		private string ownerNameFull1;
		[Column("ownerNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("ownerNameFull1")]
		public virtual string ownerNameFull
		{
			get
			{
				return this.ownerNameFull1;
			}
			set
			{
				this.ownerNameFull1 = value;
			}
		}
		
		private long? extId1;
		[Column("extId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("extId1")]
		public virtual long? extId
		{
			get
			{
				return this.extId1;
			}
			set
			{
				this.extId1 = value;
			}
		}
		
		private Guid? extUid1;
		[Column("extUid", OpenAccessType = OpenAccessType.Guid, IsNullable = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("extUid1")]
		public virtual Guid? extUid
		{
			get
			{
				return this.extUid1;
			}
			set
			{
				this.extUid1 = value;
			}
		}
		
		private string extCode1;
		[Column("extCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("extCode1")]
		public virtual string extCode
		{
			get
			{
				return this.extCode1;
			}
			set
			{
				this.extCode1 = value;
			}
		}
		
		private string extType1;
		[Column("extType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("extType1")]
		public virtual string extType
		{
			get
			{
				return this.extType1;
			}
			set
			{
				this.extType1 = value;
			}
		}
		
		private string extDescription1;
		[Column("extDescription", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("extDescription1")]
		public virtual string extDescription
		{
			get
			{
				return this.extDescription1;
			}
			set
			{
				this.extDescription1 = value;
			}
		}
		
		private string ownerType1;
		[Column("ownerType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("ownerType1")]
		public virtual string ownerType
		{
			get
			{
				return this.ownerType1;
			}
			set
			{
				this.ownerType1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private decimal? cashPayed1;
		[Column("cashPayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashPayed1")]
		public virtual decimal? cashPayed
		{
			get
			{
				return this.cashPayed1;
			}
			set
			{
				this.cashPayed1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvCashDocCaseLK")]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvCashDocCaseLK
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private int? viewIn1;
		[Column("viewIn", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("viewIn1")]
		public virtual int? viewIn
		{
			get
			{
				return this.viewIn1;
			}
			set
			{
				this.viewIn1 = value;
			}
		}
		
		private int? viewOut1;
		[Column("viewOut", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("viewOut1")]
		public virtual int? viewOut
		{
			get
			{
				return this.viewOut1;
			}
			set
			{
				this.viewOut1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvCashBookTBL")]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvCashBookTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private long? pidDocument1;
		[Column("pidDocument", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidDocument1")]
		public virtual long? pidDocument
		{
			get
			{
				return this.pidDocument1;
			}
			set
			{
				this.pidDocument1 = value;
			}
		}
		
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private int? cashType1;
		[Column("cashType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashType1")]
		public virtual int? cashType
		{
			get
			{
				return this.cashType1;
			}
			set
			{
				this.cashType1 = value;
			}
		}
		
		private string cashPlaceType1;
		[Column("cashPlaceType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("cashPlaceType1")]
		public virtual string cashPlaceType
		{
			get
			{
				return this.cashPlaceType1;
			}
			set
			{
				this.cashPlaceType1 = value;
			}
		}
		
		private int? cashPlace1;
		[Column("cashPlace", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashPlace1")]
		public virtual int? cashPlace
		{
			get
			{
				return this.cashPlace1;
			}
			set
			{
				this.cashPlace1 = value;
			}
		}
		
		private int? cashInOut1;
		[Column("cashInOut", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashInOut1")]
		public virtual int? cashInOut
		{
			get
			{
				return this.cashInOut1;
			}
			set
			{
				this.cashInOut1 = value;
			}
		}
		
		private DateTime? cashDate1;
		[Column("cashDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("cashDate1")]
		public virtual DateTime? cashDate
		{
			get
			{
				return this.cashDate1;
			}
			set
			{
				this.cashDate1 = value;
			}
		}
		
		private decimal? cashAmount1;
		[Column("cashAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashAmount1")]
		public virtual decimal? cashAmount
		{
			get
			{
				return this.cashAmount1;
			}
			set
			{
				this.cashAmount1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[View("InvCashBookVIEW")]
	public partial class dbInvCashBookVIEW
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private long? pidDocument1;
		[Column("pidDocument", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidDocument1")]
		public virtual long? pidDocument
		{
			get
			{
				return this.pidDocument1;
			}
			set
			{
				this.pidDocument1 = value;
			}
		}
		
		private Guid? ownerUid1;
		[Column("ownerUid", OpenAccessType = OpenAccessType.Guid, IsNullable = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("ownerUid1")]
		public virtual Guid? ownerUid
		{
			get
			{
				return this.ownerUid1;
			}
			set
			{
				this.ownerUid1 = value;
			}
		}
		
		private string ownerType1;
		[Column("ownerType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("ownerType1")]
		public virtual string ownerType
		{
			get
			{
				return this.ownerType1;
			}
			set
			{
				this.ownerType1 = value;
			}
		}
		
		private string ownerNameFull1;
		[Column("ownerNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("ownerNameFull1")]
		public virtual string ownerNameFull
		{
			get
			{
				return this.ownerNameFull1;
			}
			set
			{
				this.ownerNameFull1 = value;
			}
		}
		
		private long? ownerId1;
		[Column("ownerId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("ownerId1")]
		public virtual long? ownerId
		{
			get
			{
				return this.ownerId1;
			}
			set
			{
				this.ownerId1 = value;
			}
		}
		
		private string ownerCode1;
		[Column("ownerCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("ownerCode1")]
		public virtual string ownerCode
		{
			get
			{
				return this.ownerCode1;
			}
			set
			{
				this.ownerCode1 = value;
			}
		}
		
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private Guid? extUid1;
		[Column("extUid", OpenAccessType = OpenAccessType.Guid, IsNullable = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("extUid1")]
		public virtual Guid? extUid
		{
			get
			{
				return this.extUid1;
			}
			set
			{
				this.extUid1 = value;
			}
		}
		
		private string extType1;
		[Column("extType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("extType1")]
		public virtual string extType
		{
			get
			{
				return this.extType1;
			}
			set
			{
				this.extType1 = value;
			}
		}
		
		private long? extId1;
		[Column("extId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("extId1")]
		public virtual long? extId
		{
			get
			{
				return this.extId1;
			}
			set
			{
				this.extId1 = value;
			}
		}
		
		private string extDescription1;
		[Column("extDescription", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("extDescription1")]
		public virtual string extDescription
		{
			get
			{
				return this.extDescription1;
			}
			set
			{
				this.extDescription1 = value;
			}
		}
		
		private string extCode1;
		[Column("extCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("extCode1")]
		public virtual string extCode
		{
			get
			{
				return this.extCode1;
			}
			set
			{
				this.extCode1 = value;
			}
		}
		
		private Guid docUid1;
		[Column("docUid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("docUid1")]
		public virtual Guid docUid
		{
			get
			{
				return this.docUid1;
			}
			set
			{
				this.docUid1 = value;
			}
		}
		
		private string docType1;
		[Column("docType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docType1")]
		public virtual string docType
		{
			get
			{
				return this.docType1;
			}
			set
			{
				this.docType1 = value;
			}
		}
		
		private string docPath1;
		[Column("docPath", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("docPath1")]
		public virtual string docPath
		{
			get
			{
				return this.docPath1;
			}
			set
			{
				this.docPath1 = value;
			}
		}
		
		private string docNum1;
		[Column("docNum", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("docNum1")]
		public virtual string docNum
		{
			get
			{
				return this.docNum1;
			}
			set
			{
				this.docNum1 = value;
			}
		}
		
		private DateTime? docIssueDate1;
		[Column("docIssueDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docIssueDate1")]
		public virtual DateTime? docIssueDate
		{
			get
			{
				return this.docIssueDate1;
			}
			set
			{
				this.docIssueDate1 = value;
			}
		}
		
		private DateTime? docExpiryDate1;
		[Column("docExpiryDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docExpiryDate1")]
		public virtual DateTime? docExpiryDate
		{
			get
			{
				return this.docExpiryDate1;
			}
			set
			{
				this.docExpiryDate1 = value;
			}
		}
		
		private string docCreatedUserNameFull1;
		[Column("docCreatedUserNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("docCreatedUserNameFull1")]
		public virtual string docCreatedUserNameFull
		{
			get
			{
				return this.docCreatedUserNameFull1;
			}
			set
			{
				this.docCreatedUserNameFull1 = value;
			}
		}
		
		private int? docCreatedUserID1;
		[Column("docCreatedUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docCreatedUserID1")]
		public virtual int? docCreatedUserID
		{
			get
			{
				return this.docCreatedUserID1;
			}
			set
			{
				this.docCreatedUserID1 = value;
			}
		}
		
		private DateTime? docCreatedDate1;
		[Column("docCreatedDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docCreatedDate1")]
		public virtual DateTime? docCreatedDate
		{
			get
			{
				return this.docCreatedDate1;
			}
			set
			{
				this.docCreatedDate1 = value;
			}
		}
		
		private string docCode1;
		[Column("docCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docCode1")]
		public virtual string docCode
		{
			get
			{
				return this.docCode1;
			}
			set
			{
				this.docCode1 = value;
			}
		}
		
		private int? docCaseId1;
		[Column("docCaseId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docCaseId1")]
		public virtual int? docCaseId
		{
			get
			{
				return this.docCaseId1;
			}
			set
			{
				this.docCaseId1 = value;
			}
		}
		
		private string docCaseCode1;
		[Column("docCaseCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("docCaseCode1")]
		public virtual string docCaseCode
		{
			get
			{
				return this.docCaseCode1;
			}
			set
			{
				this.docCaseCode1 = value;
			}
		}
		
		private string docBody1;
		[Column("docBody", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("docBody1")]
		public virtual string docBody
		{
			get
			{
				return this.docBody1;
			}
			set
			{
				this.docBody1 = value;
			}
		}
		
		private decimal? docAmount1;
		[Column("docAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("docAmount1")]
		public virtual decimal? docAmount
		{
			get
			{
				return this.docAmount1;
			}
			set
			{
				this.docAmount1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private decimal? cashUnpayed1;
		[Column("cashUnpayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashUnpayed1")]
		public virtual decimal? cashUnpayed
		{
			get
			{
				return this.cashUnpayed1;
			}
			set
			{
				this.cashUnpayed1 = value;
			}
		}
		
		private int? cashType1;
		[Column("cashType", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashType1")]
		public virtual int? cashType
		{
			get
			{
				return this.cashType1;
			}
			set
			{
				this.cashType1 = value;
			}
		}
		
		private string cashPlaceType1;
		[Column("cashPlaceType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("cashPlaceType1")]
		public virtual string cashPlaceType
		{
			get
			{
				return this.cashPlaceType1;
			}
			set
			{
				this.cashPlaceType1 = value;
			}
		}
		
		private int? cashPlace1;
		[Column("cashPlace", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashPlace1")]
		public virtual int? cashPlace
		{
			get
			{
				return this.cashPlace1;
			}
			set
			{
				this.cashPlace1 = value;
			}
		}
		
		private decimal? cashPayed1;
		[Column("cashPayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashPayed1")]
		public virtual decimal? cashPayed
		{
			get
			{
				return this.cashPayed1;
			}
			set
			{
				this.cashPayed1 = value;
			}
		}
		
		private int? cashInOut1;
		[Column("cashInOut", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashInOut1")]
		public virtual int? cashInOut
		{
			get
			{
				return this.cashInOut1;
			}
			set
			{
				this.cashInOut1 = value;
			}
		}
		
		private DateTime? cashDate1;
		[Column("cashDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("cashDate1")]
		public virtual DateTime? cashDate
		{
			get
			{
				return this.cashDate1;
			}
			set
			{
				this.cashDate1 = value;
			}
		}
		
		private decimal? cashAmount1;
		[Column("cashAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashAmount1")]
		public virtual decimal? cashAmount
		{
			get
			{
				return this.cashAmount1;
			}
			set
			{
				this.cashAmount1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvInvoiceItemTBL")]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbInvInvoiceItemTBL
	{
		private decimal? singleUnitPrice1;
		[Column("singleUnitPrice", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("singleUnitPrice1")]
		public virtual decimal? singleUnitPrice
		{
			get
			{
				return this.singleUnitPrice1;
			}
			set
			{
				this.singleUnitPrice1 = value;
			}
		}
		
		private int? sequence1;
		[Column("sequence", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("sequence1")]
		public virtual int? sequence
		{
			get
			{
				return this.sequence1;
			}
			set
			{
				this.sequence1 = value;
			}
		}
		
		private string quantityType1;
		[Column("quantityType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("quantityType1")]
		public virtual string quantityType
		{
			get
			{
				return this.quantityType1;
			}
			set
			{
				this.quantityType1 = value;
			}
		}
		
		private int? quantityAmount1;
		[Column("quantityAmount", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("quantityAmount1")]
		public virtual int? quantityAmount
		{
			get
			{
				return this.quantityAmount1;
			}
			set
			{
				this.quantityAmount1 = value;
			}
		}
		
		private long? pidInvoice1;
		[Column("pidInvoice", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidInvoice1")]
		public virtual long? pidInvoice
		{
			get
			{
				return this.pidInvoice1;
			}
			set
			{
				this.pidInvoice1 = value;
			}
		}
		
		private Guid id1;
		[Column("id", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("id1")]
		public virtual Guid id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string description1;
		[Column("description", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("description1")]
		public virtual string description
		{
			get
			{
				return this.description1;
			}
			set
			{
				this.description1 = value;
			}
		}
		
		private decimal? cashTotalAmount1;
		[Column("cashTotalAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTotalAmount1")]
		public virtual decimal? cashTotalAmount
		{
			get
			{
				return this.cashTotalAmount1;
			}
			set
			{
				this.cashTotalAmount1 = value;
			}
		}
		
		private int? cashTaxID1;
		[Column("cashTaxID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashTaxID1")]
		public virtual int? cashTaxID
		{
			get
			{
				return this.cashTaxID1;
			}
			set
			{
				this.cashTaxID1 = value;
			}
		}
		
		private decimal? cashTaxFree1;
		[Column("cashTaxFree", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTaxFree1")]
		public virtual decimal? cashTaxFree
		{
			get
			{
				return this.cashTaxFree1;
			}
			set
			{
				this.cashTaxFree1 = value;
			}
		}
		
		private decimal? cashTaxAmount1;
		[Column("cashTaxAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTaxAmount1")]
		public virtual decimal? cashTaxAmount
		{
			get
			{
				return this.cashTaxAmount1;
			}
			set
			{
				this.cashTaxAmount1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvInvoiceTBL")]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvInvoiceTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private Guid? ownerUid1;
		[Column("ownerUid", OpenAccessType = OpenAccessType.Guid, IsNullable = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("ownerUid1")]
		public virtual Guid? ownerUid
		{
			get
			{
				return this.ownerUid1;
			}
			set
			{
				this.ownerUid1 = value;
			}
		}
		
		private string ownerType1;
		[Column("ownerType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("ownerType1")]
		public virtual string ownerType
		{
			get
			{
				return this.ownerType1;
			}
			set
			{
				this.ownerType1 = value;
			}
		}
		
		private string ownerNameFull1;
		[Column("ownerNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("ownerNameFull1")]
		public virtual string ownerNameFull
		{
			get
			{
				return this.ownerNameFull1;
			}
			set
			{
				this.ownerNameFull1 = value;
			}
		}
		
		private long? ownerId1;
		[Column("ownerId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("ownerId1")]
		public virtual long? ownerId
		{
			get
			{
				return this.ownerId1;
			}
			set
			{
				this.ownerId1 = value;
			}
		}
		
		private string ownerCode1;
		[Column("ownerCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("ownerCode1")]
		public virtual string ownerCode
		{
			get
			{
				return this.ownerCode1;
			}
			set
			{
				this.ownerCode1 = value;
			}
		}
		
		private string owner_locZipCode1;
		[Column("owner_locZipCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 10, Scale = 0, SqlType = "varchar")]
		[Storage("owner_locZipCode1")]
		public virtual string owner_locZipCode
		{
			get
			{
				return this.owner_locZipCode1;
			}
			set
			{
				this.owner_locZipCode1 = value;
			}
		}
		
		private string owner_locState1;
		[Column("owner_locState", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("owner_locState1")]
		public virtual string owner_locState
		{
			get
			{
				return this.owner_locState1;
			}
			set
			{
				this.owner_locState1 = value;
			}
		}
		
		private string owner_locCountry1;
		[Column("owner_locCountry", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("owner_locCountry1")]
		public virtual string owner_locCountry
		{
			get
			{
				return this.owner_locCountry1;
			}
			set
			{
				this.owner_locCountry1 = value;
			}
		}
		
		private string owner_locCity1;
		[Column("owner_locCity", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("owner_locCity1")]
		public virtual string owner_locCity
		{
			get
			{
				return this.owner_locCity1;
			}
			set
			{
				this.owner_locCity1 = value;
			}
		}
		
		private string owner_locAddress1;
		[Column("owner_locAddress", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("owner_locAddress1")]
		public virtual string owner_locAddress
		{
			get
			{
				return this.owner_locAddress1;
			}
			set
			{
				this.owner_locAddress1 = value;
			}
		}
		
		private string owner_docVat1;
		[Column("owner_docVat", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("owner_docVat1")]
		public virtual string owner_docVat
		{
			get
			{
				return this.owner_docVat1;
			}
			set
			{
				this.owner_docVat1 = value;
			}
		}
		
		private string owner_docType1;
		[Column("owner_docType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("owner_docType1")]
		public virtual string owner_docType
		{
			get
			{
				return this.owner_docType1;
			}
			set
			{
				this.owner_docType1 = value;
			}
		}
		
		private string owner_docNum1;
		[Column("owner_docNum", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("owner_docNum1")]
		public virtual string owner_docNum
		{
			get
			{
				return this.owner_docNum1;
			}
			set
			{
				this.owner_docNum1 = value;
			}
		}
		
		private string owner_docIssuePlace1;
		[Column("owner_docIssuePlace", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("owner_docIssuePlace1")]
		public virtual string owner_docIssuePlace
		{
			get
			{
				return this.owner_docIssuePlace1;
			}
			set
			{
				this.owner_docIssuePlace1 = value;
			}
		}
		
		private DateTime? owner_docIssueDate1;
		[Column("owner_docIssueDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("owner_docIssueDate1")]
		public virtual DateTime? owner_docIssueDate
		{
			get
			{
				return this.owner_docIssueDate1;
			}
			set
			{
				this.owner_docIssueDate1 = value;
			}
		}
		
		private DateTime? owner_docExpiryDate1;
		[Column("owner_docExpiryDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("owner_docExpiryDate1")]
		public virtual DateTime? owner_docExpiryDate
		{
			get
			{
				return this.owner_docExpiryDate1;
			}
			set
			{
				this.owner_docExpiryDate1 = value;
			}
		}
		
		private string owner_docCf1;
		[Column("owner_docCf", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("owner_docCf1")]
		public virtual string owner_docCf
		{
			get
			{
				return this.owner_docCf1;
			}
			set
			{
				this.owner_docCf1 = value;
			}
		}
		
		private string notesPublic1;
		[Column("notesPublic", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesPublic1")]
		public virtual string notesPublic
		{
			get
			{
				return this.notesPublic1;
			}
			set
			{
				this.notesPublic1 = value;
			}
		}
		
		private string notesInner1;
		[Column("notesInner", OpenAccessType = OpenAccessType.Clob, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesInner1")]
		public virtual string notesInner
		{
			get
			{
				return this.notesInner1;
			}
			set
			{
				this.notesInner1 = value;
			}
		}
		
		private long id1;
		[Column("id", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("id1")]
		public virtual long id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private int? docYearCounter1;
		[Column("docYearCounter", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docYearCounter1")]
		public virtual int? docYearCounter
		{
			get
			{
				return this.docYearCounter1;
			}
			set
			{
				this.docYearCounter1 = value;
			}
		}
		
		private int? docYear1;
		[Column("docYear", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docYear1")]
		public virtual int? docYear
		{
			get
			{
				return this.docYear1;
			}
			set
			{
				this.docYear1 = value;
			}
		}
		
		private string docType1;
		[Column("docType", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docType1")]
		public virtual string docType
		{
			get
			{
				return this.docType1;
			}
			set
			{
				this.docType1 = value;
			}
		}
		
		private string docNum1;
		[Column("docNum", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docNum1")]
		public virtual string docNum
		{
			get
			{
				return this.docNum1;
			}
			set
			{
				this.docNum1 = value;
			}
		}
		
		private DateTime? docIssueDate1;
		[Column("docIssueDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docIssueDate1")]
		public virtual DateTime? docIssueDate
		{
			get
			{
				return this.docIssueDate1;
			}
			set
			{
				this.docIssueDate1 = value;
			}
		}
		
		private int? docIsRegistered1;
		[Column("docIsRegistered", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docIsRegistered1")]
		public virtual int? docIsRegistered
		{
			get
			{
				return this.docIsRegistered1;
			}
			set
			{
				this.docIsRegistered1 = value;
			}
		}
		
		private DateTime? docExpiryDate1;
		[Column("docExpiryDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docExpiryDate1")]
		public virtual DateTime? docExpiryDate
		{
			get
			{
				return this.docExpiryDate1;
			}
			set
			{
				this.docExpiryDate1 = value;
			}
		}
		
		private int? docCaseId1;
		[Column("docCaseId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("docCaseId1")]
		public virtual int? docCaseId
		{
			get
			{
				return this.docCaseId1;
			}
			set
			{
				this.docCaseId1 = value;
			}
		}
		
		private string docCaseCode1;
		[Column("docCaseCode", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("docCaseCode1")]
		public virtual string docCaseCode
		{
			get
			{
				return this.docCaseCode1;
			}
			set
			{
				this.docCaseCode1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private decimal? cashUnpayed1;
		[Column("cashUnpayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashUnpayed1")]
		public virtual decimal? cashUnpayed
		{
			get
			{
				return this.cashUnpayed1;
			}
			set
			{
				this.cashUnpayed1 = value;
			}
		}
		
		private decimal? cashTotalAmount1;
		[Column("cashTotalAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTotalAmount1")]
		public virtual decimal? cashTotalAmount
		{
			get
			{
				return this.cashTotalAmount1;
			}
			set
			{
				this.cashTotalAmount1 = value;
			}
		}
		
		private decimal? cashTaxFree1;
		[Column("cashTaxFree", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTaxFree1")]
		public virtual decimal? cashTaxFree
		{
			get
			{
				return this.cashTaxFree1;
			}
			set
			{
				this.cashTaxFree1 = value;
			}
		}
		
		private decimal? cashTaxAmount1;
		[Column("cashTaxAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashTaxAmount1")]
		public virtual decimal? cashTaxAmount
		{
			get
			{
				return this.cashTaxAmount1;
			}
			set
			{
				this.cashTaxAmount1 = value;
			}
		}
		
		private decimal? cashPayed1;
		[Column("cashPayed", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("cashPayed1")]
		public virtual decimal? cashPayed
		{
			get
			{
				return this.cashPayed1;
			}
			set
			{
				this.cashPayed1 = value;
			}
		}
		
		private int? cashInOut1;
		[Column("cashInOut", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("cashInOut1")]
		public virtual int? cashInOut
		{
			get
			{
				return this.cashInOut1;
			}
			set
			{
				this.cashInOut1 = value;
			}
		}
		
		private long? refererInvoiceID1;
		[Column("refererInvoiceID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("refererInvoiceID1")]
		public virtual long? refererInvoiceID
		{
			get
			{
				return this.refererInvoiceID1;
			}
			set
			{
				this.refererInvoiceID1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvCashDocumentFilesTBL")]
	[KeyGenerator(KeyGenerator.Guid)]
	public partial class dbInvCashDocumentFilesTBL
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private int? sequence1;
		[Column("sequence", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("sequence1")]
		public virtual int? sequence
		{
			get
			{
				return this.sequence1;
			}
			set
			{
				this.sequence1 = value;
			}
		}
		
		private long? pidDocument1;
		[Column("pidDocument", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("pidDocument1")]
		public virtual long? pidDocument
		{
			get
			{
				return this.pidDocument1;
			}
			set
			{
				this.pidDocument1 = value;
			}
		}
		
		private string docPath1;
		[Column("docPath", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("docPath1")]
		public virtual string docPath
		{
			get
			{
				return this.docPath1;
			}
			set
			{
				this.docPath1 = value;
			}
		}
		
		private string docNum1;
		[Column("docNum", OpenAccessType = OpenAccessType.Varchar, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("docNum1")]
		public virtual string docNum
		{
			get
			{
				return this.docNum1;
			}
			set
			{
				this.docNum1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvCompanyTaxRL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class dbInvCompanyTaxRL
	{
		private int pidCompany1;
		[Column("pidCompany", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("pidCompany1")]
		public virtual int pidCompany
		{
			get
			{
				return this.pidCompany1;
			}
			set
			{
				this.pidCompany1 = value;
			}
		}
		
		private int isPrivate1;
		[Column("isPrivate", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isPrivate1")]
		public virtual int isPrivate
		{
			get
			{
				return this.isPrivate1;
			}
			set
			{
				this.isPrivate1 = value;
			}
		}
		
		private string locCountry1;
		[Column("locCountry", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsPrimaryKey = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("locCountry1")]
		public virtual string locCountry
		{
			get
			{
				return this.locCountry1;
			}
			set
			{
				this.locCountry1 = value;
			}
		}
		
		private int invTaxId1;
		[Column("invTaxId", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("invTaxId1")]
		public virtual int invTaxId
		{
			get
			{
				return this.invTaxId1;
			}
			set
			{
				this.invTaxId1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvPayBancaSellaVerifiedByVisaTXN")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvPayBancaSellaVerifiedByVisaTXN
	{
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private long? reservationId1;
		[Column("reservationId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("reservationId1")]
		public virtual long? reservationId
		{
			get
			{
				return this.reservationId1;
			}
			set
			{
				this.reservationId1 = value;
			}
		}
		
		private long? paymentId1;
		[Column("paymentId", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("paymentId1")]
		public virtual long? paymentId
		{
			get
			{
				return this.paymentId1;
			}
			set
			{
				this.paymentId1 = value;
			}
		}
		
		private string VbVRisp1;
		[Column("VbVRisp", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("VbVRisp1")]
		public virtual string VbVRisp
		{
			get
			{
				return this.VbVRisp1;
			}
			set
			{
				this.VbVRisp1 = value;
			}
		}
		
		private string transKey1;
		[Column("transKey", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("transKey1")]
		public virtual string transKey
		{
			get
			{
				return this.transKey1;
			}
			set
			{
				this.transKey1 = value;
			}
		}
		
		private string PARes1;
		[Column("PARes", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("PARes1")]
		public virtual string PARes
		{
			get
			{
				return this.PARes1;
			}
			set
			{
				this.PARes1 = value;
			}
		}
		
		private DateTime createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvCashTaxLK")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvCashTaxLK
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private decimal? taxAmount1;
		[Column("taxAmount", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 18, Scale = 2, SqlType = "decimal")]
		[Storage("taxAmount1")]
		public virtual decimal? taxAmount
		{
			get
			{
				return this.taxAmount1;
			}
			set
			{
				this.taxAmount1 = value;
			}
		}
		
	}
}
namespace ModInvoice	
{
	[Table("InvCompanyTBL")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class dbInvCompanyTBL
	{
		private int id1;
		[Column("id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("id1")]
		public virtual int id
		{
			get
			{
				return this.id1;
			}
			set
			{
				this.id1 = value;
			}
		}
		
		private Guid uid1;
		[Column("uid", OpenAccessType = OpenAccessType.Guid, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("uid1")]
		public virtual Guid uid
		{
			get
			{
				return this.uid1;
			}
			set
			{
				this.uid1 = value;
			}
		}
		
		private string code1;
		[Column("code", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("code1")]
		public virtual string code
		{
			get
			{
				return this.code1;
			}
			set
			{
				this.code1 = value;
			}
		}
		
		private string nameFull1;
		[Column("nameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameFull1")]
		public virtual string nameFull
		{
			get
			{
				return this.nameFull1;
			}
			set
			{
				this.nameFull1 = value;
			}
		}
		
		private string nameHonorific1;
		[Column("nameHonorific", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameHonorific1")]
		public virtual string nameHonorific
		{
			get
			{
				return this.nameHonorific1;
			}
			set
			{
				this.nameHonorific1 = value;
			}
		}
		
		private string nameFirst1;
		[Column("nameFirst", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameFirst1")]
		public virtual string nameFirst
		{
			get
			{
				return this.nameFirst1;
			}
			set
			{
				this.nameFirst1 = value;
			}
		}
		
		private string nameMiddle1;
		[Column("nameMiddle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameMiddle1")]
		public virtual string nameMiddle
		{
			get
			{
				return this.nameMiddle1;
			}
			set
			{
				this.nameMiddle1 = value;
			}
		}
		
		private string nameLast1;
		[Column("nameLast", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("nameLast1")]
		public virtual string nameLast
		{
			get
			{
				return this.nameLast1;
			}
			set
			{
				this.nameLast1 = value;
			}
		}
		
		private string contactEmail1;
		[Column("contactEmail", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("contactEmail1")]
		public virtual string contactEmail
		{
			get
			{
				return this.contactEmail1;
			}
			set
			{
				this.contactEmail1 = value;
			}
		}
		
		private string contactPhone1;
		[Column("contactPhone", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactPhone1")]
		public virtual string contactPhone
		{
			get
			{
				return this.contactPhone1;
			}
			set
			{
				this.contactPhone1 = value;
			}
		}
		
		private string contactPhoneTrip1;
		[Column("contactPhoneTrip", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactPhoneTrip1")]
		public virtual string contactPhoneTrip
		{
			get
			{
				return this.contactPhoneTrip1;
			}
			set
			{
				this.contactPhoneTrip1 = value;
			}
		}
		
		private string contactPhoneMobile1;
		[Column("contactPhoneMobile", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactPhoneMobile1")]
		public virtual string contactPhoneMobile
		{
			get
			{
				return this.contactPhoneMobile1;
			}
			set
			{
				this.contactPhoneMobile1 = value;
			}
		}
		
		private string contactPhoneOffice1;
		[Column("contactPhoneOffice", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactPhoneOffice1")]
		public virtual string contactPhoneOffice
		{
			get
			{
				return this.contactPhoneOffice1;
			}
			set
			{
				this.contactPhoneOffice1 = value;
			}
		}
		
		private string contactFax1;
		[Column("contactFax", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("contactFax1")]
		public virtual string contactFax
		{
			get
			{
				return this.contactFax1;
			}
			set
			{
				this.contactFax1 = value;
			}
		}
		
		private string docType1;
		[Column("docType", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docType1")]
		public virtual string docType
		{
			get
			{
				return this.docType1;
			}
			set
			{
				this.docType1 = value;
			}
		}
		
		private string docNum1;
		[Column("docNum", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docNum1")]
		public virtual string docNum
		{
			get
			{
				return this.docNum1;
			}
			set
			{
				this.docNum1 = value;
			}
		}
		
		private string docIssuePlace1;
		[Column("docIssuePlace", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docIssuePlace1")]
		public virtual string docIssuePlace
		{
			get
			{
				return this.docIssuePlace1;
			}
			set
			{
				this.docIssuePlace1 = value;
			}
		}
		
		private DateTime? docIssueDate1;
		[Column("docIssueDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docIssueDate1")]
		public virtual DateTime? docIssueDate
		{
			get
			{
				return this.docIssueDate1;
			}
			set
			{
				this.docIssueDate1 = value;
			}
		}
		
		private DateTime? docExpiryDate1;
		[Column("docExpiryDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("docExpiryDate1")]
		public virtual DateTime? docExpiryDate
		{
			get
			{
				return this.docExpiryDate1;
			}
			set
			{
				this.docExpiryDate1 = value;
			}
		}
		
		private string docVat1;
		[Column("docVat", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docVat1")]
		public virtual string docVat
		{
			get
			{
				return this.docVat1;
			}
			set
			{
				this.docVat1 = value;
			}
		}
		
		private string docCf1;
		[Column("docCf", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("docCf1")]
		public virtual string docCf
		{
			get
			{
				return this.docCf1;
			}
			set
			{
				this.docCf1 = value;
			}
		}
		
		private DateTime? birthDate1;
		[Column("birthDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("birthDate1")]
		public virtual DateTime? birthDate
		{
			get
			{
				return this.birthDate1;
			}
			set
			{
				this.birthDate1 = value;
			}
		}
		
		private string birthPlace1;
		[Column("birthPlace", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("birthPlace1")]
		public virtual string birthPlace
		{
			get
			{
				return this.birthPlace1;
			}
			set
			{
				this.birthPlace1 = value;
			}
		}
		
		private string birthCountry1;
		[Column("birthCountry", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("birthCountry1")]
		public virtual string birthCountry
		{
			get
			{
				return this.birthCountry1;
			}
			set
			{
				this.birthCountry1 = value;
			}
		}
		
		private string birthState1;
		[Column("birthState", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("birthState1")]
		public virtual string birthState
		{
			get
			{
				return this.birthState1;
			}
			set
			{
				this.birthState1 = value;
			}
		}
		
		private string locCountry1;
		[Column("locCountry", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("locCountry1")]
		public virtual string locCountry
		{
			get
			{
				return this.locCountry1;
			}
			set
			{
				this.locCountry1 = value;
			}
		}
		
		private string locState1;
		[Column("locState", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("locState1")]
		public virtual string locState
		{
			get
			{
				return this.locState1;
			}
			set
			{
				this.locState1 = value;
			}
		}
		
		private string locCity1;
		[Column("locCity", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("locCity1")]
		public virtual string locCity
		{
			get
			{
				return this.locCity1;
			}
			set
			{
				this.locCity1 = value;
			}
		}
		
		private string locAddress1;
		[Column("locAddress", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "nvarchar")]
		[Storage("locAddress1")]
		public virtual string locAddress
		{
			get
			{
				return this.locAddress1;
			}
			set
			{
				this.locAddress1 = value;
			}
		}
		
		private string locZipCode1;
		[Column("locZipCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "varchar")]
		[Storage("locZipCode1")]
		public virtual string locZipCode
		{
			get
			{
				return this.locZipCode1;
			}
			set
			{
				this.locZipCode1 = value;
			}
		}
		
		private string imgLogo1;
		[Column("imgLogo", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 500, Scale = 0, SqlType = "varchar")]
		[Storage("imgLogo1")]
		public virtual string imgLogo
		{
			get
			{
				return this.imgLogo1;
			}
			set
			{
				this.imgLogo1 = value;
			}
		}
		
		private int? isActive1;
		[Column("isActive", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isActive1")]
		public virtual int? isActive
		{
			get
			{
				return this.isActive1;
			}
			set
			{
				this.isActive1 = value;
			}
		}
		
		private DateTime? createdDate1;
		[Column("createdDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("createdDate1")]
		public virtual DateTime? createdDate
		{
			get
			{
				return this.createdDate1;
			}
			set
			{
				this.createdDate1 = value;
			}
		}
		
		private int? createdUserID1;
		[Column("createdUserID", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("createdUserID1")]
		public virtual int? createdUserID
		{
			get
			{
				return this.createdUserID1;
			}
			set
			{
				this.createdUserID1 = value;
			}
		}
		
		private string createdUserNameFull1;
		[Column("createdUserNameFull", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("createdUserNameFull1")]
		public virtual string createdUserNameFull
		{
			get
			{
				return this.createdUserNameFull1;
			}
			set
			{
				this.createdUserNameFull1 = value;
			}
		}
		
		private string notesInner1;
		[Column("notesInner", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesInner1")]
		public virtual string notesInner
		{
			get
			{
				return this.notesInner1;
			}
			set
			{
				this.notesInner1 = value;
			}
		}
		
		private string notesInvoice1;
		[Column("notesInvoice", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("notesInvoice1")]
		public virtual string notesInvoice
		{
			get
			{
				return this.notesInvoice1;
			}
			set
			{
				this.notesInvoice1 = value;
			}
		}
		
		private int? isForReservations1;
		[Column("isForReservations", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isForReservations1")]
		public virtual int? isForReservations
		{
			get
			{
				return this.isForReservations1;
			}
			set
			{
				this.isForReservations1 = value;
			}
		}
		
		private int? isForAgencies1;
		[Column("isForAgencies", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("isForAgencies1")]
		public virtual int? isForAgencies
		{
			get
			{
				return this.isForAgencies1;
			}
			set
			{
				this.isForAgencies1 = value;
			}
		}
		
		private string idCodice1;
		[Column("idCodice", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("idCodice1")]
		public virtual string idCodice
		{
			get
			{
				return this.idCodice1;
			}
			set
			{
				this.idCodice1 = value;
			}
		}
		
	}
}
#pragma warning restore 1591
